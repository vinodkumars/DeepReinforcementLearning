//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-19324574
// Cuda compilation tools, release 7.0, V7.0.27
// Based on LLVM 3.4svn
//

.version 4.2
.target sm_20, debug
.address_size 64

	// .globl	_Z4tanhf

.visible .func  (.param .b32 func_retval0) _Z4tanhf(
	.param .b32 _Z4tanhf_param_0
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<38>;
	.reg .s32 	%r<5>;


	.loc 4 1139 1
func_begin0:
	.loc	4 0 0

	.loc 4 1139 1

	ld.param.f32 	%f10, [_Z4tanhf_param_0];
	mov.f32 	%f1, %f10;
tmp0:
func_exec_begin0:

//C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\math.h:1140         {return (tanhf(_X)); }
	.loc	4 1140 8
	bra.uni	tmp1;
tmp1:

//c:\program files\nvidia gpu computing toolkit\cuda\v7.0\include\math_functions.hpp:1108   return __nv_tanhf(a);
	.loc	3 1108 10
	abs.f32 	%f2, %f1;
	setp.ge.f32	%p1, %f2, 0f3F0CCCCD;
	not.pred 	%p2, %p1;
	@%p2 bra 	BB0_4;
	bra.uni 	BB0_1;

BB0_1:
	add.f32 	%f24, %f2, %f2;
	mul.f32 	%f25, %f24, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f26, %f25;
	mov.f32 	%f27, 0fBF317200;
	fma.rn.f32 	%f28, %f26, %f27, %f24;
	mov.f32 	%f29, 0fB5BFBE8E;
	fma.rn.f32 	%f30, %f26, %f29, %f28;
	mul.f32 	%f21, %f30, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f20,%f21;
	// inline asm
	ex2.approx.f32 	%f31, %f26;
	mov.f32 	%f32, 0f3F800000;
	fma.rn.f32 	%f23, %f20, %f31, %f32;
	// inline asm
	rcp.approx.ftz.f32 %f22,%f23;
	// inline asm
	mov.f32 	%f33, 0fC0000000;
	fma.rn.f32 	%f36, %f22, %f33, %f32;
	setp.ge.f32	%p5, %f2, 0f42B00000;
	not.pred 	%p6, %p5;
	@%p6 bra 	BB0_3;
	bra.uni 	BB0_2;

BB0_2:
	mov.f32 	%f36, 0f3F800000;

BB0_3:
	mov.b32 	 %r1, %f36;
	mov.b32 	 %r2, %f1;
	and.b32  	%r3, %r2, -2147483648;
	or.b32  	%r4, %r1, %r3;
	mov.b32 	 %f37, %r4;
	bra.uni 	BB0_7;

BB0_4:
	mul.f32 	%f11, %f1, %f1;
	mov.f32 	%f12, 0fBD57BE66;
	mov.f32 	%f13, 0f3C86A81B;
	fma.rn.f32 	%f14, %f13, %f11, %f12;
	mov.f32 	%f15, 0f3E08677B;
	fma.rn.f32 	%f16, %f14, %f11, %f15;
	mov.f32 	%f17, 0fBEAAAA29;
	fma.rn.f32 	%f18, %f16, %f11, %f17;
	mul.f32 	%f19, %f18, %f11;
	fma.rn.f32 	%f37, %f19, %f1, %f1;
	setp.eq.f32	%p3, %f1, 0f00000000;
	not.pred 	%p4, %p3;
	@%p4 bra 	BB0_6;
	bra.uni 	BB0_5;

BB0_5:
	add.f32 	%f37, %f1, %f1;
tmp2:

BB0_6:

BB0_7:

//C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\math.h:1140         {return (tanhf(_X)); }
	.loc	4 1140 8
	mov.f32 	%f35, %f37;
	st.param.f32	[func_retval0+0], %f35;
	ret;
tmp3:
func_end0:
}

	// .globl	_Z16matrixPlusVectorPfS_S_ii
.visible .entry _Z16matrixPlusVectorPfS_S_ii(
	.param .u64 _Z16matrixPlusVectorPfS_S_ii_param_0,
	.param .u64 _Z16matrixPlusVectorPfS_S_ii_param_1,
	.param .u64 _Z16matrixPlusVectorPfS_S_ii_param_2,
	.param .u32 _Z16matrixPlusVectorPfS_S_ii_param_3,
	.param .u32 _Z16matrixPlusVectorPfS_S_ii_param_4
)
{
	.reg .pred 	%p<8>;
	.reg .f32 	%f<4>;
	.reg .s32 	%r<15>;
	.reg .s64 	%rd<13>;


	.loc 1 11 1
func_begin1:
	.loc	1 0 0

	.loc 1 11 1

	ld.param.u64 	%rd1, [_Z16matrixPlusVectorPfS_S_ii_param_0];
	ld.param.u64 	%rd2, [_Z16matrixPlusVectorPfS_S_ii_param_1];
	ld.param.u64 	%rd3, [_Z16matrixPlusVectorPfS_S_ii_param_2];
	ld.param.u32 	%r3, [_Z16matrixPlusVectorPfS_S_ii_param_3];
	ld.param.u32 	%r4, [_Z16matrixPlusVectorPfS_S_ii_param_4];
func_exec_begin1:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:13 	int i = blockDim.x * blockIdx.x + threadIdx.x;
	.loc	1 13 1
tmp4:
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %ctaid.x;
	mul.lo.s32 	%r7, %r5, %r6;
	mov.u32 	%r8, %tid.x;
	add.s32 	%r1, %r7, %r8;
tmp5:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:14 	int j = blockDim.y * blockIdx.y + threadIdx.y;
	.loc	1 14 1
	mov.u32 	%r9, %ntid.y;
	mov.u32 	%r10, %ctaid.y;
	mul.lo.s32 	%r11, %r9, %r10;
	mov.u32 	%r12, %tid.y;
	add.s32 	%r2, %r11, %r12;
tmp6:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:15 	if (i < rows && j < columns)
	.loc	1 15 1
	setp.lt.s32	%p4, %r1, %r3;
	mov.pred 	%p7, 0;
	not.pred 	%p5, %p4;
	@%p5 bra 	BB1_2;
	bra.uni 	BB1_1;

BB1_1:
	setp.lt.s32	%p7, %r2, %r4;

BB1_2:
	not.pred 	%p6, %p7;
	@%p6 bra 	BB1_4;
	bra.uni 	BB1_3;

BB1_3:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:17 		int ij = IDX2C(i, j, rows);
	.loc	1 17 1
tmp7:
	mul.lo.s32 	%r13, %r2, %r3;
	add.s32 	%r14, %r13, %r1;
tmp8:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:18 		output[ij] = input[ij] + bias[i];
	.loc	1 18 1
	cvt.s64.s32	%rd4, %r14;
	shl.b64 	%rd5, %rd4, 2;
	add.s64 	%rd6, %rd1, %rd5;
	ld.f32 	%f1, [%rd6];
	cvt.s64.s32	%rd7, %r1;
	shl.b64 	%rd8, %rd7, 2;
	add.s64 	%rd9, %rd2, %rd8;
	ld.f32 	%f2, [%rd9];
	add.f32 	%f3, %f1, %f2;
	cvt.s64.s32	%rd10, %r14;
	shl.b64 	%rd11, %rd10, 2;
	add.s64 	%rd12, %rd3, %rd11;
	st.f32 	[%rd12], %f3;
tmp9:

BB1_4:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:20 }
	.loc	1 20 2
	ret;
tmp10:
func_end1:
}

	// .globl	_Z10matrixTanhPfS_ii
.visible .entry _Z10matrixTanhPfS_ii(
	.param .u64 _Z10matrixTanhPfS_ii_param_0,
	.param .u64 _Z10matrixTanhPfS_ii_param_1,
	.param .u32 _Z10matrixTanhPfS_ii_param_2,
	.param .u32 _Z10matrixTanhPfS_ii_param_3
)
{
	.reg .pred 	%p<8>;
	.reg .f32 	%f<3>;
	.reg .s32 	%r<15>;
	.reg .s64 	%rd<9>;


	.loc 1 22 1
func_begin2:
	.loc	1 0 0

	.loc 1 22 1

	ld.param.u64 	%rd1, [_Z10matrixTanhPfS_ii_param_0];
	ld.param.u64 	%rd2, [_Z10matrixTanhPfS_ii_param_1];
	ld.param.u32 	%r3, [_Z10matrixTanhPfS_ii_param_2];
	ld.param.u32 	%r4, [_Z10matrixTanhPfS_ii_param_3];
func_exec_begin2:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:24 	int i = blockDim.x * blockIdx.x + threadIdx.x;
	.loc	1 24 1
tmp11:
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %ctaid.x;
	mul.lo.s32 	%r7, %r5, %r6;
	mov.u32 	%r8, %tid.x;
	add.s32 	%r1, %r7, %r8;
tmp12:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:25 	int j = blockDim.y * blockIdx.y + threadIdx.y;
	.loc	1 25 1
	mov.u32 	%r9, %ntid.y;
	mov.u32 	%r10, %ctaid.y;
	mul.lo.s32 	%r11, %r9, %r10;
	mov.u32 	%r12, %tid.y;
	add.s32 	%r2, %r11, %r12;
tmp13:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:26 	if (i < rows && j < columns)
	.loc	1 26 1
	setp.lt.s32	%p4, %r1, %r3;
	mov.pred 	%p7, 0;
	not.pred 	%p5, %p4;
	@%p5 bra 	BB2_2;
	bra.uni 	BB2_1;

BB2_1:
	setp.lt.s32	%p7, %r2, %r4;

BB2_2:
	not.pred 	%p6, %p7;
	@%p6 bra 	BB2_4;
	bra.uni 	BB2_3;

BB2_3:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:28 		int ij = IDX2C(i, j, rows);
	.loc	1 28 1
tmp14:
	mul.lo.s32 	%r13, %r2, %r3;
	add.s32 	%r14, %r13, %r1;
tmp15:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:29 		output[ij] = tanh(input[ij]);
	.loc	1 29 1
	cvt.s64.s32	%rd3, %r14;
	shl.b64 	%rd4, %rd3, 2;
	add.s64 	%rd5, %rd1, %rd4;
	ld.f32 	%f1, [%rd5];

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:29 		output[ij] = tanh(input[ij]);
	.loc	1 29 53
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.f32	[param0+0], %f1;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z4tanhf, 
	(
	param0
	);
	ld.param.f32	%f2, [retval0+0];
	
	//{
	}// Callseq End 0
	cvt.s64.s32	%rd6, %r14;
	shl.b64 	%rd7, %rd6, 2;
	add.s64 	%rd8, %rd2, %rd7;
	st.f32 	[%rd8], %f2;
tmp16:

BB2_4:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:31 }
	.loc	1 31 2
	ret;
tmp17:
func_end2:
}

	// .globl	_Z26matrixIncorporateTanhDerivPfS_S_ii
.visible .entry _Z26matrixIncorporateTanhDerivPfS_S_ii(
	.param .u64 _Z26matrixIncorporateTanhDerivPfS_S_ii_param_0,
	.param .u64 _Z26matrixIncorporateTanhDerivPfS_S_ii_param_1,
	.param .u64 _Z26matrixIncorporateTanhDerivPfS_S_ii_param_2,
	.param .u32 _Z26matrixIncorporateTanhDerivPfS_S_ii_param_3,
	.param .u32 _Z26matrixIncorporateTanhDerivPfS_S_ii_param_4
)
{
	.reg .pred 	%p<8>;
	.reg .f32 	%f<9>;
	.reg .s32 	%r<15>;
	.reg .s64 	%rd<16>;


	.loc 1 33 1
func_begin3:
	.loc	1 0 0

	.loc 1 33 1

	ld.param.u64 	%rd1, [_Z26matrixIncorporateTanhDerivPfS_S_ii_param_0];
	ld.param.u64 	%rd2, [_Z26matrixIncorporateTanhDerivPfS_S_ii_param_1];
	ld.param.u64 	%rd3, [_Z26matrixIncorporateTanhDerivPfS_S_ii_param_2];
	ld.param.u32 	%r3, [_Z26matrixIncorporateTanhDerivPfS_S_ii_param_3];
	ld.param.u32 	%r4, [_Z26matrixIncorporateTanhDerivPfS_S_ii_param_4];
func_exec_begin3:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:35 	int i = blockDim.x * blockIdx.x + threadIdx.x;
	.loc	1 35 1
tmp18:
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %ctaid.x;
	mul.lo.s32 	%r7, %r5, %r6;
	mov.u32 	%r8, %tid.x;
	add.s32 	%r1, %r7, %r8;
tmp19:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:36 	int j = blockDim.y * blockIdx.y + threadIdx.y;
	.loc	1 36 1
	mov.u32 	%r9, %ntid.y;
	mov.u32 	%r10, %ctaid.y;
	mul.lo.s32 	%r11, %r9, %r10;
	mov.u32 	%r12, %tid.y;
	add.s32 	%r2, %r11, %r12;
tmp20:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:37 	if (i < rows && j < columns)
	.loc	1 37 1
	setp.lt.s32	%p4, %r1, %r3;
	mov.pred 	%p7, 0;
	not.pred 	%p5, %p4;
	@%p5 bra 	BB3_2;
	bra.uni 	BB3_1;

BB3_1:
	setp.lt.s32	%p7, %r2, %r4;

BB3_2:
	not.pred 	%p6, %p7;
	@%p6 bra 	BB3_4;
	bra.uni 	BB3_3;

BB3_3:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:39 		int ij = IDX2C(i, j, rows);
	.loc	1 39 1
tmp21:
	mul.lo.s32 	%r13, %r2, %r3;
	add.s32 	%r14, %r13, %r1;
tmp22:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:40 		output[ij] = base[ij] * (1 + activation[ij])*(1 - activation[ij]);
	.loc	1 40 1
	cvt.s64.s32	%rd4, %r14;
	shl.b64 	%rd5, %rd4, 2;
	add.s64 	%rd6, %rd1, %rd5;
	ld.f32 	%f1, [%rd6];
	cvt.s64.s32	%rd7, %r14;
	shl.b64 	%rd8, %rd7, 2;
	add.s64 	%rd9, %rd2, %rd8;
	ld.f32 	%f2, [%rd9];
	add.f32 	%f3, %f2, 0f3F800000;
	mul.f32 	%f4, %f1, %f3;
	cvt.s64.s32	%rd10, %r14;
	shl.b64 	%rd11, %rd10, 2;
	add.s64 	%rd12, %rd2, %rd11;
	ld.f32 	%f5, [%rd12];
	mov.f32 	%f6, 0f3F800000;
	sub.f32 	%f7, %f6, %f5;
	mul.f32 	%f8, %f4, %f7;
	cvt.s64.s32	%rd13, %r14;
	shl.b64 	%rd14, %rd13, 2;
	add.s64 	%rd15, %rd3, %rd14;
	st.f32 	[%rd15], %f8;
tmp23:

BB3_4:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:42 }
	.loc	1 42 2
	ret;
tmp24:
func_end3:
}

	// .globl	_Z10matrixReLuPfS_ii
.visible .entry _Z10matrixReLuPfS_ii(
	.param .u64 _Z10matrixReLuPfS_ii_param_0,
	.param .u64 _Z10matrixReLuPfS_ii_param_1,
	.param .u32 _Z10matrixReLuPfS_ii_param_2,
	.param .u32 _Z10matrixReLuPfS_ii_param_3
)
{
	.reg .pred 	%p<8>;
	.reg .f32 	%f<6>;
	.reg .s32 	%r<15>;
	.reg .s64 	%rd<9>;


	.loc 1 44 1
func_begin4:
	.loc	1 0 0

	.loc 1 44 1

	ld.param.u64 	%rd1, [_Z10matrixReLuPfS_ii_param_0];
	ld.param.u64 	%rd2, [_Z10matrixReLuPfS_ii_param_1];
	ld.param.u32 	%r3, [_Z10matrixReLuPfS_ii_param_2];
	ld.param.u32 	%r4, [_Z10matrixReLuPfS_ii_param_3];
func_exec_begin4:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:46 	int i = blockDim.x * blockIdx.x + threadIdx.x;
	.loc	1 46 1
tmp25:
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %ctaid.x;
	mul.lo.s32 	%r7, %r5, %r6;
	mov.u32 	%r8, %tid.x;
	add.s32 	%r1, %r7, %r8;
tmp26:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:47 	int j = blockDim.y * blockIdx.y + threadIdx.y;
	.loc	1 47 1
	mov.u32 	%r9, %ntid.y;
	mov.u32 	%r10, %ctaid.y;
	mul.lo.s32 	%r11, %r9, %r10;
	mov.u32 	%r12, %tid.y;
	add.s32 	%r2, %r11, %r12;
tmp27:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:48 	if (i < rows && j < columns)
	.loc	1 48 1
	setp.lt.s32	%p4, %r1, %r3;
	mov.pred 	%p7, 0;
	not.pred 	%p5, %p4;
	@%p5 bra 	BB4_2;
	bra.uni 	BB4_1;

BB4_1:
	setp.lt.s32	%p7, %r2, %r4;

BB4_2:
	not.pred 	%p6, %p7;
	@%p6 bra 	BB4_4;
	bra.uni 	BB4_3;

BB4_3:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:50 		int ij = IDX2C(i, j, rows);
	.loc	1 50 1
tmp28:
	mul.lo.s32 	%r13, %r2, %r3;
	add.s32 	%r14, %r13, %r1;
tmp29:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:51 		output[ij] = fmaxf(input[ij], 0);
	.loc	1 51 1
	cvt.s64.s32	%rd3, %r14;
	shl.b64 	%rd4, %rd3, 2;
	add.s64 	%rd5, %rd1, %rd4;
	ld.f32 	%f1, [%rd5];
	mov.f32 	%f2, %f1;
tmp30:
	mov.f32 	%f3, 0f00000000;
	mov.f32 	%f4, %f3;
tmp31:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:51 		output[ij] = fmaxf(input[ij], 0);
	.loc	1 51 53
	bra.uni	tmp32;
tmp32:

//c:\program files\nvidia gpu computing toolkit\cuda\v7.0\include\device_functions.hpp:604   return __nv_fmaxf(x, y);
	.loc	2 604 10
	max.f32 	%f5, %f2, %f4;
tmp33:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:51 		output[ij] = fmaxf(input[ij], 0);
	.loc	1 51 53
	cvt.s64.s32	%rd6, %r14;
	shl.b64 	%rd7, %rd6, 2;
	add.s64 	%rd8, %rd2, %rd7;
	st.f32 	[%rd8], %f5;
tmp34:

BB4_4:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:53 }
	.loc	1 53 2
	ret;
tmp35:
func_end4:
}

	// .globl	_Z26matrixIncorporateReLuDerivPfS_S_ii
.visible .entry _Z26matrixIncorporateReLuDerivPfS_S_ii(
	.param .u64 _Z26matrixIncorporateReLuDerivPfS_S_ii_param_0,
	.param .u64 _Z26matrixIncorporateReLuDerivPfS_S_ii_param_1,
	.param .u64 _Z26matrixIncorporateReLuDerivPfS_S_ii_param_2,
	.param .u32 _Z26matrixIncorporateReLuDerivPfS_S_ii_param_3,
	.param .u32 _Z26matrixIncorporateReLuDerivPfS_S_ii_param_4
)
{
	.reg .pred 	%p<10>;
	.reg .f32 	%f<6>;
	.reg .s32 	%r<15>;
	.reg .s64 	%rd<13>;


	.loc 1 55 1
func_begin5:
	.loc	1 0 0

	.loc 1 55 1

	ld.param.u64 	%rd1, [_Z26matrixIncorporateReLuDerivPfS_S_ii_param_0];
	ld.param.u64 	%rd2, [_Z26matrixIncorporateReLuDerivPfS_S_ii_param_1];
	ld.param.u64 	%rd3, [_Z26matrixIncorporateReLuDerivPfS_S_ii_param_2];
	ld.param.u32 	%r4, [_Z26matrixIncorporateReLuDerivPfS_S_ii_param_3];
	ld.param.u32 	%r5, [_Z26matrixIncorporateReLuDerivPfS_S_ii_param_4];
func_exec_begin5:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:57 	int j = blockDim.x * blockIdx.x + threadIdx.x;
	.loc	1 57 1
tmp36:
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %ctaid.x;
	mul.lo.s32 	%r8, %r6, %r7;
	mov.u32 	%r9, %tid.x;
	add.s32 	%r1, %r8, %r9;
tmp37:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:58 	int i = blockDim.y * blockIdx.y + threadIdx.y;
	.loc	1 58 1
	mov.u32 	%r10, %ntid.y;
	mov.u32 	%r11, %ctaid.y;
	mul.lo.s32 	%r12, %r10, %r11;
	mov.u32 	%r13, %tid.y;
	add.s32 	%r2, %r12, %r13;
tmp38:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:59 	if (i < rows && j < columns)
	.loc	1 59 1
	setp.lt.s32	%p4, %r2, %r4;
	mov.pred 	%p9, 0;
	not.pred 	%p5, %p4;
	@%p5 bra 	BB5_2;
	bra.uni 	BB5_1;

BB5_1:
	setp.lt.s32	%p9, %r1, %r5;

BB5_2:
	not.pred 	%p6, %p9;
	@%p6 bra 	BB5_7;
	bra.uni 	BB5_3;

BB5_3:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:61 		int ij = IDX2C(i, j, rows);
	.loc	1 61 1
tmp39:
	mul.lo.s32 	%r14, %r1, %r4;
	add.s32 	%r3, %r14, %r2;
tmp40:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:62 		output[ij] = activation[ij] <= 0 ? 0 : base[ij];
	.loc	1 62 1
	cvt.s64.s32	%rd4, %r3;
	shl.b64 	%rd5, %rd4, 2;
	add.s64 	%rd6, %rd2, %rd5;
	ld.f32 	%f3, [%rd6];
	setp.le.f32	%p7, %f3, 0f00000000;
	not.pred 	%p8, %p7;
	@%p8 bra 	BB5_5;
	bra.uni 	BB5_4;

BB5_4:
	mov.f32 	%f5, 0f00000000;
	bra.uni 	BB5_6;

BB5_5:
	cvt.s64.s32	%rd7, %r3;
	shl.b64 	%rd8, %rd7, 2;
	add.s64 	%rd9, %rd1, %rd8;
	ld.f32 	%f5, [%rd9];

BB5_6:
	cvt.s64.s32	%rd10, %r3;
	shl.b64 	%rd11, %rd10, 2;
	add.s64 	%rd12, %rd3, %rd11;
	st.f32 	[%rd12], %f5;
tmp41:

BB5_7:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:64 }
	.loc	1 64 2
	ret;
tmp42:
func_end5:
}

	// .globl	_Z13matrixSigmoidPfS_ii
.visible .entry _Z13matrixSigmoidPfS_ii(
	.param .u64 _Z13matrixSigmoidPfS_ii_param_0,
	.param .u64 _Z13matrixSigmoidPfS_ii_param_1,
	.param .u32 _Z13matrixSigmoidPfS_ii_param_2,
	.param .u32 _Z13matrixSigmoidPfS_ii_param_3
)
{
	.reg .pred 	%p<14>;
	.reg .f32 	%f<46>;
	.reg .s32 	%r<19>;
	.reg .f64 	%fd<3>;
	.reg .s64 	%rd<9>;


	.loc 1 66 1
func_begin6:
	.loc	1 0 0

	.loc 1 66 1

	ld.param.u64 	%rd1, [_Z13matrixSigmoidPfS_ii_param_0];
	ld.param.u64 	%rd2, [_Z13matrixSigmoidPfS_ii_param_1];
	ld.param.u32 	%r4, [_Z13matrixSigmoidPfS_ii_param_2];
	ld.param.u32 	%r5, [_Z13matrixSigmoidPfS_ii_param_3];
func_exec_begin6:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:68 	int i = blockDim.x * blockIdx.x + threadIdx.x;
	.loc	1 68 1
tmp43:
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %ctaid.x;
	mul.lo.s32 	%r8, %r6, %r7;
	mov.u32 	%r9, %tid.x;
	add.s32 	%r1, %r8, %r9;
tmp44:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:69 	int j = blockDim.y * blockIdx.y + threadIdx.y;
	.loc	1 69 1
	mov.u32 	%r10, %ntid.y;
	mov.u32 	%r11, %ctaid.y;
	mul.lo.s32 	%r12, %r10, %r11;
	mov.u32 	%r13, %tid.y;
	add.s32 	%r2, %r12, %r13;
tmp45:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:70 	if (i < rows && j < columns)
	.loc	1 70 1
	setp.lt.s32	%p4, %r1, %r4;
	mov.pred 	%p13, 0;
	not.pred 	%p5, %p4;
	@%p5 bra 	BB6_2;
	bra.uni 	BB6_1;

BB6_1:
	setp.lt.s32	%p13, %r2, %r5;

BB6_2:
	not.pred 	%p6, %p13;
	@%p6 bra 	BB6_11;
	bra.uni 	BB6_3;

BB6_3:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:72 		int ij = IDX2C(i, j, rows);
	.loc	1 72 1
tmp46:
	mul.lo.s32 	%r14, %r2, %r4;
	add.s32 	%r3, %r14, %r1;
tmp47:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:74 		output[ij] = (tanhf((input[ij]) / 2) + 1) / 2.0f;
	.loc	1 74 1
	cvt.s64.s32	%rd3, %r3;
	shl.b64 	%rd4, %rd3, 2;
	add.s64 	%rd5, %rd1, %rd4;
	ld.f32 	%f10, [%rd5];
	cvt.f64.f32	%fd1, %f10;
	cvt.rn.f32.f64	%f11, %fd1;
tmp48:
	mov.f32 	%f12, 0f40000000;
	mov.f32 	%f13, %f12;
tmp49:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:74 		output[ij] = (tanhf((input[ij]) / 2) + 1) / 2.0f;
	.loc	1 74 96
	bra.uni	tmp50;
tmp50:

//c:\program files\nvidia gpu computing toolkit\cuda\v7.0\include\device_functions.hpp:1442   return a / b;
	.loc	2 1442 3
	div.rn.f32 	%f14, %f11, %f13;
	mov.f32 	%f1, %f14;
tmp51:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:74 		output[ij] = (tanhf((input[ij]) / 2) + 1) / 2.0f;
	.loc	1 74 81
	bra.uni	tmp52;
tmp52:

//c:\program files\nvidia gpu computing toolkit\cuda\v7.0\include\math_functions.hpp:1108   return __nv_tanhf(a);
	.loc	3 1108 10
	abs.f32 	%f2, %f1;
	setp.ge.f32	%p7, %f2, 0f3F0CCCCD;
	not.pred 	%p8, %p7;
	@%p8 bra 	BB6_7;
	bra.uni 	BB6_4;

BB6_4:
	add.f32 	%f28, %f2, %f2;
	mul.f32 	%f29, %f28, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f30, %f29;
	mov.f32 	%f31, 0fBF317200;
	fma.rn.f32 	%f32, %f30, %f31, %f28;
	mov.f32 	%f33, 0fB5BFBE8E;
	fma.rn.f32 	%f34, %f30, %f33, %f32;
	mul.f32 	%f25, %f34, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f24,%f25;
	// inline asm
	ex2.approx.f32 	%f35, %f30;
	mov.f32 	%f36, 0f3F800000;
	fma.rn.f32 	%f27, %f24, %f35, %f36;
	// inline asm
	rcp.approx.ftz.f32 %f26,%f27;
	// inline asm
	mov.f32 	%f37, 0fC0000000;
	fma.rn.f32 	%f44, %f26, %f37, %f36;
	setp.ge.f32	%p11, %f2, 0f42B00000;
	not.pred 	%p12, %p11;
	@%p12 bra 	BB6_6;
	bra.uni 	BB6_5;

BB6_5:
	mov.f32 	%f44, 0f3F800000;

BB6_6:
	mov.b32 	 %r15, %f44;
	mov.b32 	 %r16, %f1;
	and.b32  	%r17, %r16, -2147483648;
	or.b32  	%r18, %r15, %r17;
	mov.b32 	 %f45, %r18;
	bra.uni 	BB6_10;

BB6_7:
	mul.f32 	%f15, %f1, %f1;
	mov.f32 	%f16, 0fBD57BE66;
	mov.f32 	%f17, 0f3C86A81B;
	fma.rn.f32 	%f18, %f17, %f15, %f16;
	mov.f32 	%f19, 0f3E08677B;
	fma.rn.f32 	%f20, %f18, %f15, %f19;
	mov.f32 	%f21, 0fBEAAAA29;
	fma.rn.f32 	%f22, %f20, %f15, %f21;
	mul.f32 	%f23, %f22, %f15;
	fma.rn.f32 	%f45, %f23, %f1, %f1;
	setp.eq.f32	%p9, %f1, 0f00000000;
	not.pred 	%p10, %p9;
	@%p10 bra 	BB6_9;
	bra.uni 	BB6_8;

BB6_8:
	add.f32 	%f45, %f1, %f1;
tmp53:

BB6_9:

BB6_10:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:74 		output[ij] = (tanhf((input[ij]) / 2) + 1) / 2.0f;
	.loc	1 74 81
	add.f32 	%f39, %f45, 0f3F800000;
	cvt.f64.f32	%fd2, %f39;
	cvt.rn.f32.f64	%f40, %fd2;
tmp54:
	mov.f32 	%f41, 0f40000000;
	mov.f32 	%f42, %f41;
tmp55:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:74 		output[ij] = (tanhf((input[ij]) / 2) + 1) / 2.0f;
	.loc	1 74 61
	bra.uni	tmp56;
tmp56:

//c:\program files\nvidia gpu computing toolkit\cuda\v7.0\include\device_functions.hpp:1442   return a / b;
	.loc	2 1442 3
	div.rn.f32 	%f43, %f40, %f42;
tmp57:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:74 		output[ij] = (tanhf((input[ij]) / 2) + 1) / 2.0f;
	.loc	1 74 61
	cvt.s64.s32	%rd6, %r3;
	shl.b64 	%rd7, %rd6, 2;
	add.s64 	%rd8, %rd2, %rd7;
	st.f32 	[%rd8], %f43;
tmp58:

BB6_11:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:76 }
	.loc	1 76 2
	ret;
tmp59:
func_end6:
}

	// .globl	_Z29matrixIncorporateSigmoidDerivPfS_S_ii
.visible .entry _Z29matrixIncorporateSigmoidDerivPfS_S_ii(
	.param .u64 _Z29matrixIncorporateSigmoidDerivPfS_S_ii_param_0,
	.param .u64 _Z29matrixIncorporateSigmoidDerivPfS_S_ii_param_1,
	.param .u64 _Z29matrixIncorporateSigmoidDerivPfS_S_ii_param_2,
	.param .u32 _Z29matrixIncorporateSigmoidDerivPfS_S_ii_param_3,
	.param .u32 _Z29matrixIncorporateSigmoidDerivPfS_S_ii_param_4
)
{
	.reg .pred 	%p<8>;
	.reg .f32 	%f<8>;
	.reg .s32 	%r<15>;
	.reg .s64 	%rd<16>;


	.loc 1 78 1
func_begin7:
	.loc	1 0 0

	.loc 1 78 1

	ld.param.u64 	%rd1, [_Z29matrixIncorporateSigmoidDerivPfS_S_ii_param_0];
	ld.param.u64 	%rd2, [_Z29matrixIncorporateSigmoidDerivPfS_S_ii_param_1];
	ld.param.u64 	%rd3, [_Z29matrixIncorporateSigmoidDerivPfS_S_ii_param_2];
	ld.param.u32 	%r3, [_Z29matrixIncorporateSigmoidDerivPfS_S_ii_param_3];
	ld.param.u32 	%r4, [_Z29matrixIncorporateSigmoidDerivPfS_S_ii_param_4];
func_exec_begin7:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:80 	int i = blockDim.x * blockIdx.x + threadIdx.x;
	.loc	1 80 1
tmp60:
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %ctaid.x;
	mul.lo.s32 	%r7, %r5, %r6;
	mov.u32 	%r8, %tid.x;
	add.s32 	%r1, %r7, %r8;
tmp61:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:81 	int j = blockDim.y * blockIdx.y + threadIdx.y;
	.loc	1 81 1
	mov.u32 	%r9, %ntid.y;
	mov.u32 	%r10, %ctaid.y;
	mul.lo.s32 	%r11, %r9, %r10;
	mov.u32 	%r12, %tid.y;
	add.s32 	%r2, %r11, %r12;
tmp62:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:82 	if (i < rows && j < columns)
	.loc	1 82 1
	setp.lt.s32	%p4, %r1, %r3;
	mov.pred 	%p7, 0;
	not.pred 	%p5, %p4;
	@%p5 bra 	BB7_2;
	bra.uni 	BB7_1;

BB7_1:
	setp.lt.s32	%p7, %r2, %r4;

BB7_2:
	not.pred 	%p6, %p7;
	@%p6 bra 	BB7_4;
	bra.uni 	BB7_3;

BB7_3:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:84 		int ij = IDX2C(i, j, rows);
	.loc	1 84 1
tmp63:
	mul.lo.s32 	%r13, %r2, %r3;
	add.s32 	%r14, %r13, %r1;
tmp64:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:85 		output[ij] = base[ij] * activation[ij] * (1 - activation[ij]);
	.loc	1 85 1
	cvt.s64.s32	%rd4, %r14;
	shl.b64 	%rd5, %rd4, 2;
	add.s64 	%rd6, %rd1, %rd5;
	ld.f32 	%f1, [%rd6];
	cvt.s64.s32	%rd7, %r14;
	shl.b64 	%rd8, %rd7, 2;
	add.s64 	%rd9, %rd2, %rd8;
	ld.f32 	%f2, [%rd9];
	mul.f32 	%f3, %f1, %f2;
	cvt.s64.s32	%rd10, %r14;
	shl.b64 	%rd11, %rd10, 2;
	add.s64 	%rd12, %rd2, %rd11;
	ld.f32 	%f4, [%rd12];
	mov.f32 	%f5, 0f3F800000;
	sub.f32 	%f6, %f5, %f4;
	mul.f32 	%f7, %f3, %f6;
	cvt.s64.s32	%rd13, %r14;
	shl.b64 	%rd14, %rd13, 2;
	add.s64 	%rd15, %rd3, %rd14;
	st.f32 	[%rd15], %f7;
tmp65:

BB7_4:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:87 }
	.loc	1 87 2
	ret;
tmp66:
func_end7:
}

	// .globl	_Z23matrixCrossEntropyErrorPfS_S_ii
.visible .entry _Z23matrixCrossEntropyErrorPfS_S_ii(
	.param .u64 _Z23matrixCrossEntropyErrorPfS_S_ii_param_0,
	.param .u64 _Z23matrixCrossEntropyErrorPfS_S_ii_param_1,
	.param .u64 _Z23matrixCrossEntropyErrorPfS_S_ii_param_2,
	.param .u32 _Z23matrixCrossEntropyErrorPfS_S_ii_param_3,
	.param .u32 _Z23matrixCrossEntropyErrorPfS_S_ii_param_4
)
{
	.reg .pred 	%p<32>;
	.reg .f32 	%f<84>;
	.reg .s32 	%r<23>;
	.reg .s64 	%rd<19>;


	.loc 1 89 1
func_begin8:
	.loc	1 0 0

	.loc 1 89 1

	ld.param.u64 	%rd1, [_Z23matrixCrossEntropyErrorPfS_S_ii_param_0];
	ld.param.u64 	%rd2, [_Z23matrixCrossEntropyErrorPfS_S_ii_param_1];
	ld.param.u64 	%rd3, [_Z23matrixCrossEntropyErrorPfS_S_ii_param_2];
	ld.param.u32 	%r4, [_Z23matrixCrossEntropyErrorPfS_S_ii_param_3];
	ld.param.u32 	%r5, [_Z23matrixCrossEntropyErrorPfS_S_ii_param_4];
func_exec_begin8:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:91 	int i = blockDim.x * blockIdx.x + threadIdx.x;
	.loc	1 91 1
tmp67:
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %ctaid.x;
	mul.lo.s32 	%r8, %r6, %r7;
	mov.u32 	%r9, %tid.x;
	add.s32 	%r1, %r8, %r9;
tmp68:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:92 	int j = blockDim.y * blockIdx.y + threadIdx.y;
	.loc	1 92 1
	mov.u32 	%r10, %ntid.y;
	mov.u32 	%r11, %ctaid.y;
	mul.lo.s32 	%r12, %r10, %r11;
	mov.u32 	%r13, %tid.y;
	add.s32 	%r2, %r12, %r13;
tmp69:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:93 	if (i < rows && j < columns)
	.loc	1 93 1
	setp.lt.s32	%p8, %r1, %r4;
	mov.pred 	%p29, 0;
	not.pred 	%p9, %p8;
	@%p9 bra 	BB8_2;
	bra.uni 	BB8_1;

BB8_1:
	setp.lt.s32	%p29, %r2, %r5;

BB8_2:
	not.pred 	%p10, %p29;
	@%p10 bra 	BB8_25;
	bra.uni 	BB8_3;

BB8_3:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:95 		int ij = IDX2C(i, j, rows);
	.loc	1 95 1
tmp70:
	mul.lo.s32 	%r14, %r2, %r4;
	add.s32 	%r3, %r14, %r1;
tmp71:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:96 		output[ij] = trueLabels[ij] > 0 ? logf(sigmoidScores[ij] + FLT_EPSILON) : logf(1 - sigmoidScores[ij] + FLT_EPSILON);
	.loc	1 96 1
	cvt.s64.s32	%rd4, %r3;
	shl.b64 	%rd5, %rd4, 2;
	add.s64 	%rd6, %rd2, %rd5;
	ld.f32 	%f28, [%rd6];
	setp.gt.f32	%p11, %f28, 0f00000000;
	not.pred 	%p12, %p11;
	@%p12 bra 	BB8_14;
	bra.uni 	BB8_4;

BB8_4:
	cvt.s64.s32	%rd10, %r3;
	shl.b64 	%rd11, %rd10, 2;
	add.s64 	%rd12, %rd1, %rd11;
	ld.f32 	%f52, [%rd12];
	add.f32 	%f75, %f52, 0f34000000;
tmp72:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:96 		output[ij] = trueLabels[ij] > 0 ? logf(sigmoidScores[ij] + FLT_EPSILON) : logf(1 - sigmoidScores[ij] + FLT_EPSILON);
	.loc	1 96 120
	bra.uni	tmp73;
tmp73:

//c:\program files\nvidia gpu computing toolkit\cuda\v7.0\include\math_functions.hpp:1136   return __nv_logf(a);
	.loc	3 1136 10
	setp.gt.f32	%p22, %f75, 0f00000000;
	mov.pred 	%p30, 0;
	not.pred 	%p23, %p22;
	@%p23 bra 	BB8_6;
	bra.uni 	BB8_5;

BB8_5:
	setp.lt.f32	%p30, %f75, 0f7F800000;

BB8_6:
	not.pred 	%p24, %p30;
	@%p24 bra 	BB8_12;
	bra.uni 	BB8_7;

BB8_7:
	setp.lt.f32	%p25, %f75, 0f00800000;
	mov.f32 	%f76, 0fC2FE0000;
	not.pred 	%p26, %p25;
	@%p26 bra 	BB8_9;
	bra.uni 	BB8_8;

BB8_8:
	mul.f32 	%f75, %f75, 0f4B800000;
	mov.f32 	%f76, 0fC3170000;

BB8_9:
	mov.b32 	 %r19, %f75;
	and.b32  	%r20, %r19, 8388607;
	or.b32  	%r21, %r20, 1065353216;
	mov.b32 	 %f77, %r21;
	shr.u32 	%r22, %r19, 23;
	cvt.rn.f32.u32	%f55, %r22;
	add.f32 	%f78, %f76, %f55;
	setp.gt.f32	%p27, %f77, 0f3FAE147B;
	not.pred 	%p28, %p27;
	@%p28 bra 	BB8_11;
	bra.uni 	BB8_10;

BB8_10:
	mul.f32 	%f77, %f77, 0f3F000000;
	add.f32 	%f78, %f78, 0f3F800000;

BB8_11:
	add.f32 	%f57, %f77, 0f3F800000;
	sub.f32 	%f58, %f77, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f56,%f57;
	// inline asm
	neg.f32 	%f59, %f58;
	mul.f32 	%f60, %f59, %f58;
	mul.rn.f32 	%f61, %f56, %f60;
	add.rn.f32 	%f62, %f58, %f61;
	mul.f32 	%f63, %f62, %f62;
	mov.f32 	%f64, 0f3C4C6A36;
	mov.f32 	%f65, 0f3B1E94E6;
	fma.rn.f32 	%f66, %f65, %f63, %f64;
	mov.f32 	%f67, 0f3DAAAB1A;
	fma.rn.f32 	%f68, %f66, %f63, %f67;
	mul.f32 	%f69, %f68, %f63;
	fma.rn.f32 	%f70, %f69, %f62, %f61;
	add.f32 	%f71, %f70, %f58;
	mov.f32 	%f72, 0f3F317218;
	fma.rn.f32 	%f83, %f78, %f72, %f71;
	bra.uni 	BB8_13;

BB8_12:
	lg2.approx.f32 	%f83, %f75;
tmp74:

BB8_13:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:96 		output[ij] = trueLabels[ij] > 0 ? logf(sigmoidScores[ij] + FLT_EPSILON) : logf(1 - sigmoidScores[ij] + FLT_EPSILON);
	.loc	1 96 120
	bra.uni 	BB8_24;

BB8_14:
	cvt.s64.s32	%rd7, %r3;
	shl.b64 	%rd8, %rd7, 2;
	add.s64 	%rd9, %rd1, %rd8;
	ld.f32 	%f29, [%rd9];
	mov.f32 	%f30, 0f3F800000;
	sub.f32 	%f31, %f30, %f29;
	add.f32 	%f79, %f31, 0f34000000;
tmp75:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:96 		output[ij] = trueLabels[ij] > 0 ? logf(sigmoidScores[ij] + FLT_EPSILON) : logf(1 - sigmoidScores[ij] + FLT_EPSILON);
	.loc	1 96 210
	bra.uni	tmp76;
tmp76:

//c:\program files\nvidia gpu computing toolkit\cuda\v7.0\include\math_functions.hpp:1136   return __nv_logf(a);
	.loc	3 1136 10
	setp.gt.f32	%p14, %f79, 0f00000000;
	mov.pred 	%p31, 0;
	not.pred 	%p15, %p14;
	@%p15 bra 	BB8_16;
	bra.uni 	BB8_15;

BB8_15:
	setp.lt.f32	%p31, %f79, 0f7F800000;

BB8_16:
	not.pred 	%p16, %p31;
	@%p16 bra 	BB8_22;
	bra.uni 	BB8_17;

BB8_17:
	setp.lt.f32	%p17, %f79, 0f00800000;
	mov.f32 	%f80, 0fC2FE0000;
	not.pred 	%p18, %p17;
	@%p18 bra 	BB8_19;
	bra.uni 	BB8_18;

BB8_18:
	mul.f32 	%f79, %f79, 0f4B800000;
	mov.f32 	%f80, 0fC3170000;

BB8_19:
	mov.b32 	 %r15, %f79;
	and.b32  	%r16, %r15, 8388607;
	or.b32  	%r17, %r16, 1065353216;
	mov.b32 	 %f81, %r17;
	shr.u32 	%r18, %r15, 23;
	cvt.rn.f32.u32	%f34, %r18;
	add.f32 	%f82, %f80, %f34;
	setp.gt.f32	%p19, %f81, 0f3FAE147B;
	not.pred 	%p20, %p19;
	@%p20 bra 	BB8_21;
	bra.uni 	BB8_20;

BB8_20:
	mul.f32 	%f81, %f81, 0f3F000000;
	add.f32 	%f82, %f82, 0f3F800000;

BB8_21:
	add.f32 	%f36, %f81, 0f3F800000;
	sub.f32 	%f37, %f81, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f35,%f36;
	// inline asm
	neg.f32 	%f38, %f37;
	mul.f32 	%f39, %f38, %f37;
	mul.rn.f32 	%f40, %f35, %f39;
	add.rn.f32 	%f41, %f37, %f40;
	mul.f32 	%f42, %f41, %f41;
	mov.f32 	%f43, 0f3C4C6A36;
	mov.f32 	%f44, 0f3B1E94E6;
	fma.rn.f32 	%f45, %f44, %f42, %f43;
	mov.f32 	%f46, 0f3DAAAB1A;
	fma.rn.f32 	%f47, %f45, %f42, %f46;
	mul.f32 	%f48, %f47, %f42;
	fma.rn.f32 	%f49, %f48, %f41, %f40;
	add.f32 	%f50, %f49, %f37;
	mov.f32 	%f51, 0f3F317218;
	fma.rn.f32 	%f83, %f82, %f51, %f50;
	bra.uni 	BB8_23;

BB8_22:
	lg2.approx.f32 	%f83, %f79;
tmp77:

BB8_23:

BB8_24:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:96 		output[ij] = trueLabels[ij] > 0 ? logf(sigmoidScores[ij] + FLT_EPSILON) : logf(1 - sigmoidScores[ij] + FLT_EPSILON);
	.loc	1 96 210
	cvt.s64.s32	%rd13, %r3;
	shl.b64 	%rd14, %rd13, 2;
	add.s64 	%rd15, %rd3, %rd14;
	st.f32 	[%rd15], %f83;

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:97 		output[ij] *= -1;
	.loc	1 97 1
	cvt.s64.s32	%rd16, %r3;
	shl.b64 	%rd17, %rd16, 2;
	add.s64 	%rd18, %rd3, %rd17;
	ld.f32 	%f73, [%rd18];
	mul.f32 	%f74, %f73, 0fBF800000;
	st.f32 	[%rd18], %f74;
tmp78:

BB8_25:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:99 }
	.loc	1 99 2
	ret;
tmp79:
func_end8:
}

	// .globl	_Z26matrixBellmanErrorAndDerivPfS_S_S_S_S_fS_ii
.visible .entry _Z26matrixBellmanErrorAndDerivPfS_S_S_S_S_fS_ii(
	.param .u64 _Z26matrixBellmanErrorAndDerivPfS_S_S_S_S_fS_ii_param_0,
	.param .u64 _Z26matrixBellmanErrorAndDerivPfS_S_S_S_S_fS_ii_param_1,
	.param .u64 _Z26matrixBellmanErrorAndDerivPfS_S_S_S_S_fS_ii_param_2,
	.param .u64 _Z26matrixBellmanErrorAndDerivPfS_S_S_S_S_fS_ii_param_3,
	.param .u64 _Z26matrixBellmanErrorAndDerivPfS_S_S_S_S_fS_ii_param_4,
	.param .u64 _Z26matrixBellmanErrorAndDerivPfS_S_S_S_S_fS_ii_param_5,
	.param .f32 _Z26matrixBellmanErrorAndDerivPfS_S_S_S_S_fS_ii_param_6,
	.param .u64 _Z26matrixBellmanErrorAndDerivPfS_S_S_S_S_fS_ii_param_7,
	.param .u32 _Z26matrixBellmanErrorAndDerivPfS_S_S_S_S_fS_ii_param_8,
	.param .u32 _Z26matrixBellmanErrorAndDerivPfS_S_S_S_S_fS_ii_param_9
)
{
	.reg .pred 	%p<12>;
	.reg .f32 	%f<15>;
	.reg .s32 	%r<16>;
	.reg .f64 	%fd<5>;
	.reg .s64 	%rd<35>;


	.loc 1 101 1
func_begin9:
	.loc	1 0 0

	.loc 1 101 1

	ld.param.u64 	%rd1, [_Z26matrixBellmanErrorAndDerivPfS_S_S_S_S_fS_ii_param_0];
	ld.param.u64 	%rd2, [_Z26matrixBellmanErrorAndDerivPfS_S_S_S_S_fS_ii_param_1];
	ld.param.u64 	%rd3, [_Z26matrixBellmanErrorAndDerivPfS_S_S_S_S_fS_ii_param_2];
	ld.param.u64 	%rd4, [_Z26matrixBellmanErrorAndDerivPfS_S_S_S_S_fS_ii_param_3];
	ld.param.u64 	%rd5, [_Z26matrixBellmanErrorAndDerivPfS_S_S_S_S_fS_ii_param_4];
	ld.param.u64 	%rd6, [_Z26matrixBellmanErrorAndDerivPfS_S_S_S_S_fS_ii_param_5];
	ld.param.f32 	%f4, [_Z26matrixBellmanErrorAndDerivPfS_S_S_S_S_fS_ii_param_6];
	ld.param.u64 	%rd7, [_Z26matrixBellmanErrorAndDerivPfS_S_S_S_S_fS_ii_param_7];
	ld.param.u32 	%r4, [_Z26matrixBellmanErrorAndDerivPfS_S_S_S_S_fS_ii_param_8];
	ld.param.u32 	%r5, [_Z26matrixBellmanErrorAndDerivPfS_S_S_S_S_fS_ii_param_9];
func_exec_begin9:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:104 	int i = blockDim.x * blockIdx.x + threadIdx.x;
	.loc	1 104 1
tmp80:
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %ctaid.x;
	mul.lo.s32 	%r8, %r6, %r7;
	mov.u32 	%r9, %tid.x;
	add.s32 	%r1, %r8, %r9;
tmp81:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:105 	int j = blockDim.y * blockIdx.y + threadIdx.y;
	.loc	1 105 1
	mov.u32 	%r10, %ntid.y;
	mov.u32 	%r11, %ctaid.y;
	mul.lo.s32 	%r12, %r10, %r11;
	mov.u32 	%r13, %tid.y;
	add.s32 	%r2, %r12, %r13;
tmp82:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:106 	if (i < rows && j < columns)
	.loc	1 106 1
	setp.lt.s32	%p4, %r1, %r4;
	mov.pred 	%p11, 0;
	not.pred 	%p5, %p4;
	@%p5 bra 	BB9_2;
	bra.uni 	BB9_1;

BB9_1:
	setp.lt.s32	%p11, %r2, %r5;

BB9_2:
	not.pred 	%p6, %p11;
	@%p6 bra 	BB9_9;
	bra.uni 	BB9_3;

BB9_3:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:108 		int ij = IDX2C(i, j, rows);
	.loc	1 108 1
tmp83:
	mul.lo.s32 	%r14, %r2, %r4;
	add.s32 	%r3, %r14, %r1;
tmp84:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:109 		float y = isLastEpisode[j] > 0 ? currentRewards[j] : currentRewards[j] + (discount*maxQHatValues[j]);
	.loc	1 109 1
	cvt.s64.s32	%rd8, %r2;
	shl.b64 	%rd9, %rd8, 2;
	add.s64 	%rd10, %rd7, %rd9;
	ld.f32 	%f5, [%rd10];
	setp.gt.f32	%p7, %f5, 0f00000000;
	not.pred 	%p8, %p7;
	@%p8 bra 	BB9_5;
	bra.uni 	BB9_4;

BB9_4:
	cvt.s64.s32	%rd17, %r2;
	shl.b64 	%rd18, %rd17, 2;
	add.s64 	%rd19, %rd4, %rd18;
	ld.f32 	%f14, [%rd19];
	bra.uni 	BB9_6;

BB9_5:
	cvt.s64.s32	%rd11, %r2;
	shl.b64 	%rd12, %rd11, 2;
	add.s64 	%rd13, %rd4, %rd12;
	ld.f32 	%f6, [%rd13];
	cvt.s64.s32	%rd14, %r2;
	shl.b64 	%rd15, %rd14, 2;
	add.s64 	%rd16, %rd2, %rd15;
	ld.f32 	%f7, [%rd16];
	mul.f32 	%f8, %f4, %f7;
	add.f32 	%f14, %f6, %f8;

BB9_6:
tmp85:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:110 		errorDerivative[ij] = 0;
	.loc	1 110 1
	cvt.s64.s32	%rd20, %r3;
	shl.b64 	%rd21, %rd20, 2;
	add.s64 	%rd22, %rd6, %rd21;
	mov.u32 	%r15, 0;
	st.u32 	[%rd22], %r15;

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:113 		if (i == chosenActionIndices[j])
	.loc	1 113 1
tmp86:
	cvt.rn.f32.s32	%f9, %r1;
	cvt.s64.s32	%rd23, %r2;
	shl.b64 	%rd24, %rd23, 2;
	add.s64 	%rd25, %rd3, %rd24;
	ld.f32 	%f10, [%rd25];
	setp.eq.f32	%p9, %f9, %f10;
	not.pred 	%p10, %p9;
	@%p10 bra 	BB9_8;
	bra.uni 	BB9_7;

BB9_7:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:115 			float tmp = predictedQValues[i] - y;
	.loc	1 115 1
tmp87:
	cvt.s64.s32	%rd26, %r1;
	shl.b64 	%rd27, %rd26, 2;
	add.s64 	%rd28, %rd1, %rd27;
	ld.f32 	%f11, [%rd28];
	sub.f32 	%f12, %f11, %f14;
tmp88:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:116 			errorDerivative[ij] = tmp;
	.loc	1 116 1
	cvt.s64.s32	%rd29, %r3;
	shl.b64 	%rd30, %rd29, 2;
	add.s64 	%rd31, %rd6, %rd30;
	st.f32 	[%rd31], %f12;

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:117 			error[j] = 0.5*tmp*tmp;
	.loc	1 117 1
	cvt.f64.f32	%fd1, %f12;
	mul.f64 	%fd2, %fd1, 0d3FE0000000000000;
	cvt.f64.f32	%fd3, %f12;
	mul.f64 	%fd4, %fd2, %fd3;
	cvt.rn.f32.f64	%f13, %fd4;
	cvt.s64.s32	%rd32, %r2;
	shl.b64 	%rd33, %rd32, 2;
	add.s64 	%rd34, %rd5, %rd33;
	st.f32 	[%rd34], %f13;
tmp89:

BB9_8:

BB9_9:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:120 }
	.loc	1 120 2
	ret;
tmp90:
func_end9:
}

	// .globl	_Z21DqnStanfordEvaluationPfS_S_S_S_i
.visible .entry _Z21DqnStanfordEvaluationPfS_S_S_S_i(
	.param .u64 _Z21DqnStanfordEvaluationPfS_S_S_S_i_param_0,
	.param .u64 _Z21DqnStanfordEvaluationPfS_S_S_S_i_param_1,
	.param .u64 _Z21DqnStanfordEvaluationPfS_S_S_S_i_param_2,
	.param .u64 _Z21DqnStanfordEvaluationPfS_S_S_S_i_param_3,
	.param .u64 _Z21DqnStanfordEvaluationPfS_S_S_S_i_param_4,
	.param .u32 _Z21DqnStanfordEvaluationPfS_S_S_S_i_param_5
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<5>;
	.reg .s32 	%r<7>;
	.reg .s64 	%rd<24>;


	.loc 1 122 1
func_begin10:
	.loc	1 0 0

	.loc 1 122 1

	ld.param.u64 	%rd1, [_Z21DqnStanfordEvaluationPfS_S_S_S_i_param_0];
	ld.param.u64 	%rd2, [_Z21DqnStanfordEvaluationPfS_S_S_S_i_param_1];
	ld.param.u64 	%rd3, [_Z21DqnStanfordEvaluationPfS_S_S_S_i_param_2];
	ld.param.u64 	%rd4, [_Z21DqnStanfordEvaluationPfS_S_S_S_i_param_3];
	ld.param.u64 	%rd5, [_Z21DqnStanfordEvaluationPfS_S_S_S_i_param_4];
	ld.param.u32 	%r2, [_Z21DqnStanfordEvaluationPfS_S_S_S_i_param_5];
func_exec_begin10:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:124 	int i = blockDim.x * blockIdx.x + threadIdx.x;
	.loc	1 124 1
tmp91:
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mul.lo.s32 	%r5, %r3, %r4;
	mov.u32 	%r6, %tid.x;
	add.s32 	%r1, %r5, %r6;
tmp92:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:125 	if (i < rows)
	.loc	1 125 1
	setp.lt.s32	%p1, %r1, %r2;
	not.pred 	%p2, %p1;
	@%p2 bra 	BB10_5;
	bra.uni 	BB10_1;

BB10_1:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:127 		if (predictedactionIndices[i] == chosenActionIndices[i])
	.loc	1 127 1
tmp93:
	cvt.s64.s32	%rd6, %r1;
	shl.b64 	%rd7, %rd6, 2;
	add.s64 	%rd8, %rd1, %rd7;
	ld.f32 	%f1, [%rd8];
	cvt.s64.s32	%rd9, %r1;
	shl.b64 	%rd10, %rd9, 2;
	add.s64 	%rd11, %rd2, %rd10;
	ld.f32 	%f2, [%rd11];
	setp.eq.f32	%p3, %f1, %f2;
	not.pred 	%p4, %p3;
	@%p4 bra 	BB10_3;
	bra.uni 	BB10_2;

BB10_2:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:129 			matchPredictRewards[i] = currentRewards[i];
	.loc	1 129 1
tmp94:
	cvt.s64.s32	%rd18, %r1;
	shl.b64 	%rd19, %rd18, 2;
	add.s64 	%rd20, %rd3, %rd19;
	ld.f32 	%f4, [%rd20];
	cvt.s64.s32	%rd21, %r1;
	shl.b64 	%rd22, %rd21, 2;
	add.s64 	%rd23, %rd4, %rd22;
	st.f32 	[%rd23], %f4;
	bra.uni 	BB10_4;
tmp95:

BB10_3:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:133 			nonMatchPredictRewards[i] = currentRewards[i];
	.loc	1 133 1
	cvt.s64.s32	%rd12, %r1;
	shl.b64 	%rd13, %rd12, 2;
	add.s64 	%rd14, %rd3, %rd13;
	ld.f32 	%f3, [%rd14];
	cvt.s64.s32	%rd15, %r1;
	shl.b64 	%rd16, %rd15, 2;
	add.s64 	%rd17, %rd5, %rd16;
	st.f32 	[%rd17], %f3;
tmp96:

BB10_4:

BB10_5:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:136 }
	.loc	1 136 2
	ret;
tmp97:
func_end10:
}

	// .globl	_Z14matrixHadamardPfS_fS_fii
.visible .entry _Z14matrixHadamardPfS_fS_fii(
	.param .u64 _Z14matrixHadamardPfS_fS_fii_param_0,
	.param .u64 _Z14matrixHadamardPfS_fS_fii_param_1,
	.param .f32 _Z14matrixHadamardPfS_fS_fii_param_2,
	.param .u64 _Z14matrixHadamardPfS_fS_fii_param_3,
	.param .f32 _Z14matrixHadamardPfS_fS_fii_param_4,
	.param .u32 _Z14matrixHadamardPfS_fS_fii_param_5,
	.param .u32 _Z14matrixHadamardPfS_fS_fii_param_6
)
{
	.reg .pred 	%p<8>;
	.reg .f32 	%f<10>;
	.reg .s32 	%r<15>;
	.reg .s64 	%rd<16>;


	.loc 1 138 1
func_begin11:
	.loc	1 0 0

	.loc 1 138 1

	ld.param.u64 	%rd1, [_Z14matrixHadamardPfS_fS_fii_param_0];
	ld.param.u64 	%rd2, [_Z14matrixHadamardPfS_fS_fii_param_1];
	ld.param.f32 	%f1, [_Z14matrixHadamardPfS_fS_fii_param_2];
	ld.param.u64 	%rd3, [_Z14matrixHadamardPfS_fS_fii_param_3];
	ld.param.f32 	%f2, [_Z14matrixHadamardPfS_fS_fii_param_4];
	ld.param.u32 	%r3, [_Z14matrixHadamardPfS_fS_fii_param_5];
	ld.param.u32 	%r4, [_Z14matrixHadamardPfS_fS_fii_param_6];
func_exec_begin11:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:140 	int i = blockDim.x * blockIdx.x + threadIdx.x;
	.loc	1 140 1
tmp98:
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %ctaid.x;
	mul.lo.s32 	%r7, %r5, %r6;
	mov.u32 	%r8, %tid.x;
	add.s32 	%r1, %r7, %r8;
tmp99:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:141 	int j = blockDim.y * blockIdx.y + threadIdx.y;
	.loc	1 141 1
	mov.u32 	%r9, %ntid.y;
	mov.u32 	%r10, %ctaid.y;
	mul.lo.s32 	%r11, %r9, %r10;
	mov.u32 	%r12, %tid.y;
	add.s32 	%r2, %r11, %r12;
tmp100:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:142 	if (i < rows && j < columns)
	.loc	1 142 1
	setp.lt.s32	%p4, %r1, %r3;
	mov.pred 	%p7, 0;
	not.pred 	%p5, %p4;
	@%p5 bra 	BB11_2;
	bra.uni 	BB11_1;

BB11_1:
	setp.lt.s32	%p7, %r2, %r4;

BB11_2:
	not.pred 	%p6, %p7;
	@%p6 bra 	BB11_4;
	bra.uni 	BB11_3;

BB11_3:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:144 		int ij = IDX2C(i, j, rows);
	.loc	1 144 1
tmp101:
	mul.lo.s32 	%r13, %r2, %r3;
	add.s32 	%r14, %r13, %r1;
tmp102:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:145 		output[ij] = alpha*input1[ij] * input2[ij] + beta*output[ij];
	.loc	1 145 1
	cvt.s64.s32	%rd4, %r14;
	shl.b64 	%rd5, %rd4, 2;
	add.s64 	%rd6, %rd1, %rd5;
	ld.f32 	%f3, [%rd6];
	mul.f32 	%f4, %f1, %f3;
	cvt.s64.s32	%rd7, %r14;
	shl.b64 	%rd8, %rd7, 2;
	add.s64 	%rd9, %rd2, %rd8;
	ld.f32 	%f5, [%rd9];
	mul.f32 	%f6, %f4, %f5;
	cvt.s64.s32	%rd10, %r14;
	shl.b64 	%rd11, %rd10, 2;
	add.s64 	%rd12, %rd3, %rd11;
	ld.f32 	%f7, [%rd12];
	mul.f32 	%f8, %f2, %f7;
	add.f32 	%f9, %f6, %f8;
	cvt.s64.s32	%rd13, %r14;
	shl.b64 	%rd14, %rd13, 2;
	add.s64 	%rd15, %rd3, %rd14;
	st.f32 	[%rd15], %f9;
tmp103:

BB11_4:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:147 }
	.loc	1 147 2
	ret;
tmp104:
func_end11:
}

	// .globl	_Z13columnwiseMaxPfS_ii
.visible .entry _Z13columnwiseMaxPfS_ii(
	.param .u64 _Z13columnwiseMaxPfS_ii_param_0,
	.param .u64 _Z13columnwiseMaxPfS_ii_param_1,
	.param .u32 _Z13columnwiseMaxPfS_ii_param_2,
	.param .u32 _Z13columnwiseMaxPfS_ii_param_3
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<9>;
	.reg .s32 	%r<16>;
	.reg .s64 	%rd<15>;


	.loc 1 149 1
func_begin12:
	.loc	1 0 0

	.loc 1 149 1

	ld.param.u64 	%rd1, [_Z13columnwiseMaxPfS_ii_param_0];
	ld.param.u64 	%rd2, [_Z13columnwiseMaxPfS_ii_param_1];
	ld.param.u32 	%r6, [_Z13columnwiseMaxPfS_ii_param_2];
	ld.param.u32 	%r7, [_Z13columnwiseMaxPfS_ii_param_3];
func_exec_begin12:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:151 	int j = blockDim.x * blockIdx.x + threadIdx.x;
	.loc	1 151 1
tmp105:
	mov.u32 	%r8, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mul.lo.s32 	%r10, %r8, %r9;
	mov.u32 	%r11, %tid.x;
	add.s32 	%r1, %r10, %r11;
tmp106:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:152 	if (j < columns)
	.loc	1 152 1
	setp.lt.s32	%p1, %r1, %r7;
	not.pred 	%p2, %p1;
	@%p2 bra 	BB12_8;
	bra.uni 	BB12_1;

BB12_1:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:154 		float maxInColumn = input[IDX2C(0, j, rows)];
	.loc	1 154 1
tmp107:
	mul.lo.s32 	%r12, %r1, %r6;
	cvt.s64.s32	%rd3, %r12;
	shl.b64 	%rd4, %rd3, 2;
	add.s64 	%rd5, %rd1, %rd4;
	ld.f32 	%f5, [%rd5];
	mov.f32 	%f8, %f5;
tmp108:
	mov.u32 	%r13, 0;

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:155 		for (int i = 0; i < rows; i++)
	.loc	1 155 1
tmp109:
	mov.b32 	%r15, %r13;
tmp110:

BB12_2:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:155 		for (int i = 0; i < rows; i++)
	.loc	1 155 1
	setp.lt.s32	%p3, %r15, %r6;
tmp111:
	not.pred 	%p4, %p3;
	@%p4 bra 	BB12_7;
	bra.uni 	BB12_3;

BB12_3:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:157 			int ij = IDX2C(i, j, rows);
	.loc	1 157 1
tmp112:
	mul.lo.s32 	%r14, %r1, %r6;
	add.s32 	%r4, %r14, %r15;
tmp113:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:158 			if (input[ij] > maxInColumn)
	.loc	1 158 1
	cvt.s64.s32	%rd9, %r4;
	shl.b64 	%rd10, %rd9, 2;
	add.s64 	%rd11, %rd1, %rd10;
	ld.f32 	%f6, [%rd11];
	setp.gt.f32	%p5, %f6, %f8;
	not.pred 	%p6, %p5;
	@%p6 bra 	BB12_5;
	bra.uni 	BB12_4;

BB12_4:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:160 				maxInColumn = input[ij];
	.loc	1 160 1
tmp114:
	cvt.s64.s32	%rd12, %r4;
	shl.b64 	%rd13, %rd12, 2;
	add.s64 	%rd14, %rd1, %rd13;
	ld.f32 	%f7, [%rd14];
	mov.f32 	%f8, %f7;
tmp115:

BB12_5:


//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:155 		for (int i = 0; i < rows; i++)
	.loc	1 155 20
	add.s32 	%r15, %r15, 1;
tmp116:
	bra.uni 	BB12_2;
tmp117:

BB12_7:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:163 		output[j] = maxInColumn;
	.loc	1 163 1
	cvt.s64.s32	%rd6, %r1;
	shl.b64 	%rd7, %rd6, 2;
	add.s64 	%rd8, %rd2, %rd7;
	st.f32 	[%rd8], %f8;
tmp118:

BB12_8:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:165 }
	.loc	1 165 2
	ret;
tmp119:
func_end12:
}

	// .globl	_Z18columnwiseMaxIndexPfS_ii
.visible .entry _Z18columnwiseMaxIndexPfS_ii(
	.param .u64 _Z18columnwiseMaxIndexPfS_ii_param_0,
	.param .u64 _Z18columnwiseMaxIndexPfS_ii_param_1,
	.param .u32 _Z18columnwiseMaxIndexPfS_ii_param_2,
	.param .u32 _Z18columnwiseMaxIndexPfS_ii_param_3
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<10>;
	.reg .s32 	%r<22>;
	.reg .s64 	%rd<15>;


	.loc 1 167 1
func_begin13:
	.loc	1 0 0

	.loc 1 167 1

	ld.param.u64 	%rd1, [_Z18columnwiseMaxIndexPfS_ii_param_0];
	ld.param.u64 	%rd2, [_Z18columnwiseMaxIndexPfS_ii_param_1];
	ld.param.u32 	%r10, [_Z18columnwiseMaxIndexPfS_ii_param_2];
	ld.param.u32 	%r11, [_Z18columnwiseMaxIndexPfS_ii_param_3];
func_exec_begin13:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:169 	int j = blockDim.x * blockIdx.x + threadIdx.x;
	.loc	1 169 1
tmp120:
	mov.u32 	%r12, %ntid.x;
	mov.u32 	%r13, %ctaid.x;
	mul.lo.s32 	%r14, %r12, %r13;
	mov.u32 	%r15, %tid.x;
	add.s32 	%r1, %r14, %r15;
tmp121:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:170 	if (j < columns)
	.loc	1 170 1
	setp.lt.s32	%p1, %r1, %r11;
	not.pred 	%p2, %p1;
	@%p2 bra 	BB13_8;
	bra.uni 	BB13_1;

BB13_1:
	mov.u32 	%r16, 0;

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:172 		int maxInColumnIndex = 0;
	.loc	1 172 1
tmp122:
	mov.b32 	%r20, %r16;
tmp123:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:173 		float maxInColumn = input[IDX2C(maxInColumnIndex, j, rows)];
	.loc	1 173 1
	mul.lo.s32 	%r17, %r1, %r10;
	add.s32 	%r18, %r17, %r20;
	cvt.s64.s32	%rd3, %r18;
	shl.b64 	%rd4, %rd3, 2;
	add.s64 	%rd5, %rd1, %rd4;
	ld.f32 	%f5, [%rd5];
	mov.f32 	%f9, %f5;
tmp124:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:174 		for (int i = 0; i < rows; i++)
	.loc	1 174 1
	mov.b32 	%r21, %r16;
tmp125:

BB13_2:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:174 		for (int i = 0; i < rows; i++)
	.loc	1 174 1
	setp.lt.s32	%p3, %r21, %r10;
tmp126:
	not.pred 	%p4, %p3;
	@%p4 bra 	BB13_7;
	bra.uni 	BB13_3;

BB13_3:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:176 			int ij = IDX2C(i, j, rows);
	.loc	1 176 1
tmp127:
	mul.lo.s32 	%r19, %r1, %r10;
	add.s32 	%r6, %r19, %r21;
tmp128:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:177 			if (input[ij] > maxInColumn)
	.loc	1 177 1
	cvt.s64.s32	%rd9, %r6;
	shl.b64 	%rd10, %rd9, 2;
	add.s64 	%rd11, %rd1, %rd10;
	ld.f32 	%f7, [%rd11];
	setp.gt.f32	%p5, %f7, %f9;
	not.pred 	%p6, %p5;
	@%p6 bra 	BB13_5;
	bra.uni 	BB13_4;

BB13_4:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:179 				maxInColumn = input[ij];
	.loc	1 179 1
tmp129:
	cvt.s64.s32	%rd12, %r6;
	shl.b64 	%rd13, %rd12, 2;
	add.s64 	%rd14, %rd1, %rd13;
	ld.f32 	%f8, [%rd14];
	mov.f32 	%f9, %f8;
tmp130:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:180 				maxInColumnIndex = i;
	.loc	1 180 1
	mov.b32 	%r20, %r21;
tmp131:

BB13_5:


//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:174 		for (int i = 0; i < rows; i++)
	.loc	1 174 20
	add.s32 	%r21, %r21, 1;
tmp132:
	bra.uni 	BB13_2;
tmp133:

BB13_7:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:183 		output[j] = (float)maxInColumnIndex;
	.loc	1 183 1
	cvt.rn.f32.s32	%f6, %r20;
	cvt.s64.s32	%rd6, %r1;
	shl.b64 	%rd7, %rd6, 2;
	add.s64 	%rd8, %rd2, %rd7;
	st.f32 	[%rd8], %f6;
tmp134:

BB13_8:

//D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu:185 }
	.loc	1 185 2
	ret;
tmp135:
func_end13:
}

	.file	1 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu", 1438991473, 5405
	.file	2 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp", 1424261298, 140584
	.file	3 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp", 1424261299, 98411
	.file	4 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h", 1379564280, 44558

.section .debug_info {
 .b32 6675
 .b8 2
 .b8 0
 .b32 .debug_abbrev
 .b8 8
 .b8 1

 .b8 108
 .b8 103
 .b8 101
 .b8 110
 .b8 102
 .b8 101
 .b8 58
 .b8 32
 .b8 69
 .b8 68
 .b8 71
 .b8 32
 .b8 52
 .b8 46
 .b8 57

 .b8 0
 .b8 4
 .b8 68
 .b8 58
 .b8 47
 .b8 118
 .b8 105
 .b8 110
 .b8 111
 .b8 100
 .b8 115
 .b8 47
 .b8 82
 .b8 101
 .b8 112
 .b8 111
 .b8 115
 .b8 47
 .b8 77
 .b8 83
 .b8 82
 .b8 45
 .b8 68
 .b8 83
 .b8 83
 .b8 77
 .b8 47
 .b8 112
 .b8 114
 .b8 105
 .b8 118
 .b8 97
 .b8 116
 .b8 101
 .b8 47
 .b8 118
 .b8 105
 .b8 110
 .b8 111
 .b8 100
 .b8 115
 .b8 47
 .b8 67
 .b8 117
 .b8 100
 .b8 97
 .b8 108
 .b8 105
 .b8 98
 .b8 77
 .b8 97
 .b8 110
 .b8 97
 .b8 103
 .b8 101
 .b8 100
 .b8 47
 .b8 75
 .b8 101
 .b8 114
 .b8 110
 .b8 101
 .b8 108
 .b8 115
 .b8 47
 .b8 107
 .b8 101
 .b8 114
 .b8 110
 .b8 101
 .b8 108
 .b8 46
 .b8 99
 .b8 117

 .b8 0
 .b64 0
 .b32 .debug_line
 .b8 68
 .b8 58
 .b8 92
 .b8 118
 .b8 105
 .b8 110
 .b8 111
 .b8 100
 .b8 115
 .b8 92
 .b8 82
 .b8 101
 .b8 112
 .b8 111
 .b8 115
 .b8 92
 .b8 77
 .b8 83
 .b8 82
 .b8 45
 .b8 68
 .b8 83
 .b8 83
 .b8 77
 .b8 92
 .b8 112
 .b8 114
 .b8 105
 .b8 118
 .b8 97
 .b8 116
 .b8 101
 .b8 92
 .b8 118
 .b8 105
 .b8 110
 .b8 111
 .b8 100
 .b8 115
 .b8 92
 .b8 67
 .b8 117
 .b8 100
 .b8 97
 .b8 108
 .b8 105
 .b8 98
 .b8 77
 .b8 97
 .b8 110
 .b8 97
 .b8 103
 .b8 101
 .b8 100
 .b8 92
 .b8 75
 .b8 101
 .b8 114
 .b8 110
 .b8 101
 .b8 108
 .b8 115

 .b8 0
 .b8 2

 .b8 102
 .b8 109
 .b8 97
 .b8 120
 .b8 102

 .b8 0
 .b8 102
 .b8 109
 .b8 97
 .b8 120
 .b8 102

 .b8 0
 .b32 2
 .b32 602
 .b32 234
 .b8 1
 .b8 3

 .b8 120

 .b8 0
 .b32 2
 .b32 602
 .b32 234
 .b8 3

 .b8 121

 .b8 0
 .b32 2
 .b32 602
 .b32 234
 .b8 0
 .b8 4

 .b8 102
 .b8 108
 .b8 111
 .b8 97
 .b8 116

 .b8 0
 .b8 4
 .b32 4
 .b8 2

 .b8 102
 .b8 100
 .b8 105
 .b8 118
 .b8 105
 .b8 100
 .b8 101
 .b8 102

 .b8 0
 .b8 102
 .b8 100
 .b8 105
 .b8 118
 .b8 105
 .b8 100
 .b8 101
 .b8 102

 .b8 0
 .b32 2
 .b32 1437
 .b32 234
 .b8 1
 .b8 3

 .b8 97

 .b8 0
 .b32 2
 .b32 1437
 .b32 234
 .b8 3

 .b8 98

 .b8 0
 .b32 2
 .b32 1437
 .b32 234
 .b8 0
 .b8 2

 .b8 116
 .b8 97
 .b8 110
 .b8 104
 .b8 102

 .b8 0
 .b8 116
 .b8 97
 .b8 110
 .b8 104
 .b8 102

 .b8 0
 .b32 3
 .b32 1106
 .b32 234
 .b8 1
 .b8 3

 .b8 97

 .b8 0
 .b32 3
 .b32 1106
 .b32 234
 .b8 0
 .b8 2

 .b8 108
 .b8 111
 .b8 103
 .b8 102

 .b8 0
 .b8 108
 .b8 111
 .b8 103
 .b8 102

 .b8 0
 .b32 3
 .b32 1131
 .b32 234
 .b8 1
 .b8 3

 .b8 97

 .b8 0
 .b32 3
 .b32 1131
 .b32 234
 .b8 0
 .b8 5

 .b8 95
 .b8 90
 .b8 52
 .b8 116
 .b8 97
 .b8 110
 .b8 104
 .b8 102

 .b8 0
 .b8 95
 .b8 90
 .b8 52
 .b8 116
 .b8 97
 .b8 110
 .b8 104
 .b8 102

 .b8 0
 .b32 4
 .b32 1139
 .b32 234
 .b8 1
 .b64 func_begin0
 .b64 func_end0
 .b8 1
 .b8 156
 .b8 6

 .b8 95
 .b8 88

 .b8 0
 .b32 4
 .b32 1139
 .b32 234
 .b8 6
 .b8 144
 .b8 176
 .b8 226
 .b8 152
 .b8 171
 .b8 2
 .b8 2
 .b8 7

 .b64 tmp1
 .b64 tmp3
 .b8 7

 .b64 tmp1
 .b64 tmp3
 .b8 7

 .b64 tmp1
 .b64 tmp3
 .b8 8

 .b32 309
 .b64 tmp1
 .b64 tmp2
 .b32 4
 .b32 1140
 .b8 9

 .b32 335
 .b8 5
 .b8 144
 .b8 177
 .b8 204
 .b8 149
 .b8 1
 .b8 2
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 5

 .b8 95
 .b8 90
 .b8 49
 .b8 54
 .b8 109
 .b8 97
 .b8 116
 .b8 114
 .b8 105
 .b8 120
 .b8 80
 .b8 108
 .b8 117
 .b8 115
 .b8 86
 .b8 101
 .b8 99
 .b8 116
 .b8 111
 .b8 114
 .b8 80
 .b8 102
 .b8 83
 .b8 95
 .b8 83
 .b8 95
 .b8 105
 .b8 105

 .b8 0
 .b8 95
 .b8 90
 .b8 49
 .b8 54
 .b8 109
 .b8 97
 .b8 116
 .b8 114
 .b8 105
 .b8 120
 .b8 80
 .b8 108
 .b8 117
 .b8 115
 .b8 86
 .b8 101
 .b8 99
 .b8 116
 .b8 111
 .b8 114
 .b8 80
 .b8 102
 .b8 83
 .b8 95
 .b8 83
 .b8 95
 .b8 105
 .b8 105

 .b8 0
 .b32 1
 .b32 11
 .b32 962
 .b8 1
 .b64 func_begin1
 .b64 func_end1
 .b8 1
 .b8 156
 .b8 6

 .b8 105
 .b8 110
 .b8 112
 .b8 117
 .b8 116

 .b8 0
 .b32 1
 .b32 11
 .b32 6662
 .b8 9
 .b8 3
 .b64 _Z16matrixPlusVectorPfS_S_ii_param_0
 .b8 7
 .b8 6

 .b8 98
 .b8 105
 .b8 97
 .b8 115

 .b8 0
 .b32 1
 .b32 11
 .b32 6662
 .b8 9
 .b8 3
 .b64 _Z16matrixPlusVectorPfS_S_ii_param_1
 .b8 7
 .b8 6

 .b8 111
 .b8 117
 .b8 116
 .b8 112
 .b8 117
 .b8 116

 .b8 0
 .b32 1
 .b32 11
 .b32 6662
 .b8 9
 .b8 3
 .b64 _Z16matrixPlusVectorPfS_S_ii_param_2
 .b8 7
 .b8 6

 .b8 114
 .b8 111
 .b8 119
 .b8 115

 .b8 0
 .b32 1
 .b32 11
 .b32 6668
 .b8 9
 .b8 3
 .b64 _Z16matrixPlusVectorPfS_S_ii_param_3
 .b8 7
 .b8 6

 .b8 99
 .b8 111
 .b8 108
 .b8 117
 .b8 109
 .b8 110
 .b8 115

 .b8 0
 .b32 1
 .b32 11
 .b32 6668
 .b8 9
 .b8 3
 .b64 _Z16matrixPlusVectorPfS_S_ii_param_4
 .b8 7
 .b8 7

 .b64 tmp4
 .b64 tmp10
 .b8 7

 .b64 tmp4
 .b64 tmp9
 .b8 7

 .b64 tmp4
 .b64 tmp9
 .b8 10

 .b8 105

 .b8 0
 .b32 1
 .b32 13
 .b32 6668
 .b8 5
 .b8 144
 .b8 177
 .b8 228
 .b8 149
 .b8 1
 .b8 2
 .b8 10

 .b8 106

 .b8 0
 .b32 1
 .b32 14
 .b32 6668
 .b8 5
 .b8 144
 .b8 178
 .b8 228
 .b8 149
 .b8 1
 .b8 2
 .b8 7

 .b64 tmp6
 .b64 tmp9
 .b8 7

 .b64 tmp7
 .b64 tmp9
 .b8 10

 .b8 105
 .b8 106

 .b8 0
 .b32 1
 .b32 17
 .b32 6668
 .b8 6
 .b8 144
 .b8 180
 .b8 226
 .b8 200
 .b8 171
 .b8 2
 .b8 2
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 11

 .b8 118
 .b8 111
 .b8 105
 .b8 100

 .b8 0
 .b8 5

 .b8 95
 .b8 90
 .b8 49
 .b8 48
 .b8 109
 .b8 97
 .b8 116
 .b8 114
 .b8 105
 .b8 120
 .b8 84
 .b8 97
 .b8 110
 .b8 104
 .b8 80
 .b8 102
 .b8 83
 .b8 95
 .b8 105
 .b8 105

 .b8 0
 .b8 95
 .b8 90
 .b8 49
 .b8 48
 .b8 109
 .b8 97
 .b8 116
 .b8 114
 .b8 105
 .b8 120
 .b8 84
 .b8 97
 .b8 110
 .b8 104
 .b8 80
 .b8 102
 .b8 83
 .b8 95
 .b8 105
 .b8 105

 .b8 0
 .b32 1
 .b32 22
 .b32 962
 .b8 1
 .b64 func_begin2
 .b64 func_end2
 .b8 1
 .b8 156
 .b8 6

 .b8 105
 .b8 110
 .b8 112
 .b8 117
 .b8 116

 .b8 0
 .b32 1
 .b32 22
 .b32 6662
 .b8 9
 .b8 3
 .b64 _Z10matrixTanhPfS_ii_param_0
 .b8 7
 .b8 6

 .b8 111
 .b8 117
 .b8 116
 .b8 112
 .b8 117
 .b8 116

 .b8 0
 .b32 1
 .b32 22
 .b32 6662
 .b8 9
 .b8 3
 .b64 _Z10matrixTanhPfS_ii_param_1
 .b8 7
 .b8 6

 .b8 114
 .b8 111
 .b8 119
 .b8 115

 .b8 0
 .b32 1
 .b32 22
 .b32 6668
 .b8 9
 .b8 3
 .b64 _Z10matrixTanhPfS_ii_param_2
 .b8 7
 .b8 6

 .b8 99
 .b8 111
 .b8 108
 .b8 117
 .b8 109
 .b8 110
 .b8 115

 .b8 0
 .b32 1
 .b32 22
 .b32 6668
 .b8 9
 .b8 3
 .b64 _Z10matrixTanhPfS_ii_param_3
 .b8 7
 .b8 7

 .b64 tmp11
 .b64 tmp17
 .b8 7

 .b64 tmp11
 .b64 tmp16
 .b8 7

 .b64 tmp11
 .b64 tmp16
 .b8 10

 .b8 105

 .b8 0
 .b32 1
 .b32 24
 .b32 6668
 .b8 5
 .b8 144
 .b8 177
 .b8 228
 .b8 149
 .b8 1
 .b8 2
 .b8 10

 .b8 106

 .b8 0
 .b32 1
 .b32 25
 .b32 6668
 .b8 5
 .b8 144
 .b8 178
 .b8 228
 .b8 149
 .b8 1
 .b8 2
 .b8 7

 .b64 tmp13
 .b64 tmp16
 .b8 7

 .b64 tmp14
 .b64 tmp16
 .b8 10

 .b8 105
 .b8 106

 .b8 0
 .b32 1
 .b32 28
 .b32 6668
 .b8 6
 .b8 144
 .b8 180
 .b8 226
 .b8 200
 .b8 171
 .b8 2
 .b8 2
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 5

 .b8 95
 .b8 90
 .b8 50
 .b8 54
 .b8 109
 .b8 97
 .b8 116
 .b8 114
 .b8 105
 .b8 120
 .b8 73
 .b8 110
 .b8 99
 .b8 111
 .b8 114
 .b8 112
 .b8 111
 .b8 114
 .b8 97
 .b8 116
 .b8 101
 .b8 84
 .b8 97
 .b8 110
 .b8 104
 .b8 68
 .b8 101
 .b8 114
 .b8 105
 .b8 118
 .b8 80
 .b8 102
 .b8 83
 .b8 95
 .b8 83
 .b8 95
 .b8 105
 .b8 105

 .b8 0
 .b8 95
 .b8 90
 .b8 50
 .b8 54
 .b8 109
 .b8 97
 .b8 116
 .b8 114
 .b8 105
 .b8 120
 .b8 73
 .b8 110
 .b8 99
 .b8 111
 .b8 114
 .b8 112
 .b8 111
 .b8 114
 .b8 97
 .b8 116
 .b8 101
 .b8 84
 .b8 97
 .b8 110
 .b8 104
 .b8 68
 .b8 101
 .b8 114
 .b8 105
 .b8 118
 .b8 80
 .b8 102
 .b8 83
 .b8 95
 .b8 83
 .b8 95
 .b8 105
 .b8 105

 .b8 0
 .b32 1
 .b32 33
 .b32 962
 .b8 1
 .b64 func_begin3
 .b64 func_end3
 .b8 1
 .b8 156
 .b8 6

 .b8 98
 .b8 97
 .b8 115
 .b8 101

 .b8 0
 .b32 1
 .b32 33
 .b32 6662
 .b8 9
 .b8 3
 .b64 _Z26matrixIncorporateTanhDerivPfS_S_ii_param_0
 .b8 7
 .b8 6

 .b8 97
 .b8 99
 .b8 116
 .b8 105
 .b8 118
 .b8 97
 .b8 116
 .b8 105
 .b8 111
 .b8 110

 .b8 0
 .b32 1
 .b32 33
 .b32 6662
 .b8 9
 .b8 3
 .b64 _Z26matrixIncorporateTanhDerivPfS_S_ii_param_1
 .b8 7
 .b8 6

 .b8 111
 .b8 117
 .b8 116
 .b8 112
 .b8 117
 .b8 116

 .b8 0
 .b32 1
 .b32 33
 .b32 6662
 .b8 9
 .b8 3
 .b64 _Z26matrixIncorporateTanhDerivPfS_S_ii_param_2
 .b8 7
 .b8 6

 .b8 114
 .b8 111
 .b8 119
 .b8 115

 .b8 0
 .b32 1
 .b32 33
 .b32 6668
 .b8 9
 .b8 3
 .b64 _Z26matrixIncorporateTanhDerivPfS_S_ii_param_3
 .b8 7
 .b8 6

 .b8 99
 .b8 111
 .b8 108
 .b8 117
 .b8 109
 .b8 110
 .b8 115

 .b8 0
 .b32 1
 .b32 33
 .b32 6668
 .b8 9
 .b8 3
 .b64 _Z26matrixIncorporateTanhDerivPfS_S_ii_param_4
 .b8 7
 .b8 7

 .b64 tmp18
 .b64 tmp24
 .b8 7

 .b64 tmp18
 .b64 tmp23
 .b8 7

 .b64 tmp18
 .b64 tmp23
 .b8 10

 .b8 105

 .b8 0
 .b32 1
 .b32 35
 .b32 6668
 .b8 5
 .b8 144
 .b8 177
 .b8 228
 .b8 149
 .b8 1
 .b8 2
 .b8 10

 .b8 106

 .b8 0
 .b32 1
 .b32 36
 .b32 6668
 .b8 5
 .b8 144
 .b8 178
 .b8 228
 .b8 149
 .b8 1
 .b8 2
 .b8 7

 .b64 tmp20
 .b64 tmp23
 .b8 7

 .b64 tmp21
 .b64 tmp23
 .b8 10

 .b8 105
 .b8 106

 .b8 0
 .b32 1
 .b32 39
 .b32 6668
 .b8 6
 .b8 144
 .b8 180
 .b8 226
 .b8 200
 .b8 171
 .b8 2
 .b8 2
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 5

 .b8 95
 .b8 90
 .b8 49
 .b8 48
 .b8 109
 .b8 97
 .b8 116
 .b8 114
 .b8 105
 .b8 120
 .b8 82
 .b8 101
 .b8 76
 .b8 117
 .b8 80
 .b8 102
 .b8 83
 .b8 95
 .b8 105
 .b8 105

 .b8 0
 .b8 95
 .b8 90
 .b8 49
 .b8 48
 .b8 109
 .b8 97
 .b8 116
 .b8 114
 .b8 105
 .b8 120
 .b8 82
 .b8 101
 .b8 76
 .b8 117
 .b8 80
 .b8 102
 .b8 83
 .b8 95
 .b8 105
 .b8 105

 .b8 0
 .b32 1
 .b32 44
 .b32 962
 .b8 1
 .b64 func_begin4
 .b64 func_end4
 .b8 1
 .b8 156
 .b8 6

 .b8 105
 .b8 110
 .b8 112
 .b8 117
 .b8 116

 .b8 0
 .b32 1
 .b32 44
 .b32 6662
 .b8 9
 .b8 3
 .b64 _Z10matrixReLuPfS_ii_param_0
 .b8 7
 .b8 6

 .b8 111
 .b8 117
 .b8 116
 .b8 112
 .b8 117
 .b8 116

 .b8 0
 .b32 1
 .b32 44
 .b32 6662
 .b8 9
 .b8 3
 .b64 _Z10matrixReLuPfS_ii_param_1
 .b8 7
 .b8 6

 .b8 114
 .b8 111
 .b8 119
 .b8 115

 .b8 0
 .b32 1
 .b32 44
 .b32 6668
 .b8 9
 .b8 3
 .b64 _Z10matrixReLuPfS_ii_param_2
 .b8 7
 .b8 6

 .b8 99
 .b8 111
 .b8 108
 .b8 117
 .b8 109
 .b8 110
 .b8 115

 .b8 0
 .b32 1
 .b32 44
 .b32 6668
 .b8 9
 .b8 3
 .b64 _Z10matrixReLuPfS_ii_param_3
 .b8 7
 .b8 7

 .b64 tmp25
 .b64 tmp35
 .b8 7

 .b64 tmp25
 .b64 tmp34
 .b8 7

 .b64 tmp25
 .b64 tmp34
 .b8 10

 .b8 105

 .b8 0
 .b32 1
 .b32 46
 .b32 6668
 .b8 5
 .b8 144
 .b8 177
 .b8 228
 .b8 149
 .b8 1
 .b8 2
 .b8 10

 .b8 106

 .b8 0
 .b32 1
 .b32 47
 .b32 6668
 .b8 5
 .b8 144
 .b8 178
 .b8 228
 .b8 149
 .b8 1
 .b8 2
 .b8 7

 .b64 tmp27
 .b64 tmp34
 .b8 7

 .b64 tmp28
 .b64 tmp34
 .b8 10

 .b8 105
 .b8 106

 .b8 0
 .b32 1
 .b32 50
 .b32 6668
 .b8 6
 .b8 144
 .b8 180
 .b8 226
 .b8 200
 .b8 171
 .b8 2
 .b8 2
 .b8 8

 .b32 177
 .b64 tmp32
 .b64 tmp33
 .b32 1
 .b32 51
 .b8 9

 .b32 203
 .b8 5
 .b8 144
 .b8 178
 .b8 204
 .b8 149
 .b8 1
 .b8 2
 .b8 9

 .b32 218
 .b8 5
 .b8 144
 .b8 180
 .b8 204
 .b8 149
 .b8 1
 .b8 2
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 5

 .b8 95
 .b8 90
 .b8 50
 .b8 54
 .b8 109
 .b8 97
 .b8 116
 .b8 114
 .b8 105
 .b8 120
 .b8 73
 .b8 110
 .b8 99
 .b8 111
 .b8 114
 .b8 112
 .b8 111
 .b8 114
 .b8 97
 .b8 116
 .b8 101
 .b8 82
 .b8 101
 .b8 76
 .b8 117
 .b8 68
 .b8 101
 .b8 114
 .b8 105
 .b8 118
 .b8 80
 .b8 102
 .b8 83
 .b8 95
 .b8 83
 .b8 95
 .b8 105
 .b8 105

 .b8 0
 .b8 95
 .b8 90
 .b8 50
 .b8 54
 .b8 109
 .b8 97
 .b8 116
 .b8 114
 .b8 105
 .b8 120
 .b8 73
 .b8 110
 .b8 99
 .b8 111
 .b8 114
 .b8 112
 .b8 111
 .b8 114
 .b8 97
 .b8 116
 .b8 101
 .b8 82
 .b8 101
 .b8 76
 .b8 117
 .b8 68
 .b8 101
 .b8 114
 .b8 105
 .b8 118
 .b8 80
 .b8 102
 .b8 83
 .b8 95
 .b8 83
 .b8 95
 .b8 105
 .b8 105

 .b8 0
 .b32 1
 .b32 55
 .b32 962
 .b8 1
 .b64 func_begin5
 .b64 func_end5
 .b8 1
 .b8 156
 .b8 6

 .b8 98
 .b8 97
 .b8 115
 .b8 101

 .b8 0
 .b32 1
 .b32 55
 .b32 6662
 .b8 9
 .b8 3
 .b64 _Z26matrixIncorporateReLuDerivPfS_S_ii_param_0
 .b8 7
 .b8 6

 .b8 97
 .b8 99
 .b8 116
 .b8 105
 .b8 118
 .b8 97
 .b8 116
 .b8 105
 .b8 111
 .b8 110

 .b8 0
 .b32 1
 .b32 55
 .b32 6662
 .b8 9
 .b8 3
 .b64 _Z26matrixIncorporateReLuDerivPfS_S_ii_param_1
 .b8 7
 .b8 6

 .b8 111
 .b8 117
 .b8 116
 .b8 112
 .b8 117
 .b8 116

 .b8 0
 .b32 1
 .b32 55
 .b32 6662
 .b8 9
 .b8 3
 .b64 _Z26matrixIncorporateReLuDerivPfS_S_ii_param_2
 .b8 7
 .b8 6

 .b8 114
 .b8 111
 .b8 119
 .b8 115

 .b8 0
 .b32 1
 .b32 55
 .b32 6668
 .b8 9
 .b8 3
 .b64 _Z26matrixIncorporateReLuDerivPfS_S_ii_param_3
 .b8 7
 .b8 6

 .b8 99
 .b8 111
 .b8 108
 .b8 117
 .b8 109
 .b8 110
 .b8 115

 .b8 0
 .b32 1
 .b32 55
 .b32 6668
 .b8 9
 .b8 3
 .b64 _Z26matrixIncorporateReLuDerivPfS_S_ii_param_4
 .b8 7
 .b8 7

 .b64 tmp36
 .b64 tmp42
 .b8 7

 .b64 tmp36
 .b64 tmp41
 .b8 7

 .b64 tmp36
 .b64 tmp41
 .b8 10

 .b8 106

 .b8 0
 .b32 1
 .b32 57
 .b32 6668
 .b8 5
 .b8 144
 .b8 177
 .b8 228
 .b8 149
 .b8 1
 .b8 2
 .b8 10

 .b8 105

 .b8 0
 .b32 1
 .b32 58
 .b32 6668
 .b8 5
 .b8 144
 .b8 178
 .b8 228
 .b8 149
 .b8 1
 .b8 2
 .b8 7

 .b64 tmp38
 .b64 tmp41
 .b8 7

 .b64 tmp39
 .b64 tmp41
 .b8 10

 .b8 105
 .b8 106

 .b8 0
 .b32 1
 .b32 61
 .b32 6668
 .b8 5
 .b8 144
 .b8 179
 .b8 228
 .b8 149
 .b8 1
 .b8 2
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 5

 .b8 95
 .b8 90
 .b8 49
 .b8 51
 .b8 109
 .b8 97
 .b8 116
 .b8 114
 .b8 105
 .b8 120
 .b8 83
 .b8 105
 .b8 103
 .b8 109
 .b8 111
 .b8 105
 .b8 100
 .b8 80
 .b8 102
 .b8 83
 .b8 95
 .b8 105
 .b8 105

 .b8 0
 .b8 95
 .b8 90
 .b8 49
 .b8 51
 .b8 109
 .b8 97
 .b8 116
 .b8 114
 .b8 105
 .b8 120
 .b8 83
 .b8 105
 .b8 103
 .b8 109
 .b8 111
 .b8 105
 .b8 100
 .b8 80
 .b8 102
 .b8 83
 .b8 95
 .b8 105
 .b8 105

 .b8 0
 .b32 1
 .b32 66
 .b32 962
 .b8 1
 .b64 func_begin6
 .b64 func_end6
 .b8 1
 .b8 156
 .b8 6

 .b8 105
 .b8 110
 .b8 112
 .b8 117
 .b8 116

 .b8 0
 .b32 1
 .b32 66
 .b32 6662
 .b8 9
 .b8 3
 .b64 _Z13matrixSigmoidPfS_ii_param_0
 .b8 7
 .b8 6

 .b8 111
 .b8 117
 .b8 116
 .b8 112
 .b8 117
 .b8 116

 .b8 0
 .b32 1
 .b32 66
 .b32 6662
 .b8 9
 .b8 3
 .b64 _Z13matrixSigmoidPfS_ii_param_1
 .b8 7
 .b8 6

 .b8 114
 .b8 111
 .b8 119
 .b8 115

 .b8 0
 .b32 1
 .b32 66
 .b32 6668
 .b8 9
 .b8 3
 .b64 _Z13matrixSigmoidPfS_ii_param_2
 .b8 7
 .b8 6

 .b8 99
 .b8 111
 .b8 108
 .b8 117
 .b8 109
 .b8 110
 .b8 115

 .b8 0
 .b32 1
 .b32 66
 .b32 6668
 .b8 9
 .b8 3
 .b64 _Z13matrixSigmoidPfS_ii_param_3
 .b8 7
 .b8 7

 .b64 tmp43
 .b64 tmp59
 .b8 7

 .b64 tmp43
 .b64 tmp58
 .b8 7

 .b64 tmp43
 .b64 tmp58
 .b8 10

 .b8 105

 .b8 0
 .b32 1
 .b32 68
 .b32 6668
 .b8 5
 .b8 144
 .b8 177
 .b8 228
 .b8 149
 .b8 1
 .b8 2
 .b8 10

 .b8 106

 .b8 0
 .b32 1
 .b32 69
 .b32 6668
 .b8 5
 .b8 144
 .b8 178
 .b8 228
 .b8 149
 .b8 1
 .b8 2
 .b8 7

 .b64 tmp45
 .b64 tmp58
 .b8 7

 .b64 tmp46
 .b64 tmp58
 .b8 10

 .b8 105
 .b8 106

 .b8 0
 .b32 1
 .b32 72
 .b32 6668
 .b8 5
 .b8 144
 .b8 179
 .b8 228
 .b8 149
 .b8 1
 .b8 2
 .b8 8

 .b32 246
 .b64 tmp50
 .b64 tmp51
 .b32 1
 .b32 74
 .b8 9

 .b32 278
 .b8 6
 .b8 144
 .b8 177
 .b8 226
 .b8 152
 .b8 171
 .b8 2
 .b8 2
 .b8 9

 .b32 293
 .b8 6
 .b8 144
 .b8 179
 .b8 226
 .b8 152
 .b8 171
 .b8 2
 .b8 2
 .b8 0
 .b8 8

 .b32 309
 .b64 tmp52
 .b64 tmp53
 .b32 1
 .b32 74
 .b8 6

 .b8 97

 .b8 0
 .b32 3
 .b32 1106
 .b32 234
 .b8 5
 .b8 144
 .b8 177
 .b8 204
 .b8 149
 .b8 1
 .b8 2
 .b8 0
 .b8 8

 .b32 246
 .b64 tmp56
 .b64 tmp57
 .b32 1
 .b32 74
 .b8 9

 .b32 278
 .b8 6
 .b8 144
 .b8 176
 .b8 232
 .b8 152
 .b8 171
 .b8 2
 .b8 2
 .b8 9

 .b32 293
 .b8 6
 .b8 144
 .b8 178
 .b8 232
 .b8 152
 .b8 171
 .b8 2
 .b8 2
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 5

 .b8 95
 .b8 90
 .b8 50
 .b8 57
 .b8 109
 .b8 97
 .b8 116
 .b8 114
 .b8 105
 .b8 120
 .b8 73
 .b8 110
 .b8 99
 .b8 111
 .b8 114
 .b8 112
 .b8 111
 .b8 114
 .b8 97
 .b8 116
 .b8 101
 .b8 83
 .b8 105
 .b8 103
 .b8 109
 .b8 111
 .b8 105
 .b8 100
 .b8 68
 .b8 101
 .b8 114
 .b8 105
 .b8 118
 .b8 80
 .b8 102
 .b8 83
 .b8 95
 .b8 83
 .b8 95
 .b8 105
 .b8 105

 .b8 0
 .b8 95
 .b8 90
 .b8 50
 .b8 57
 .b8 109
 .b8 97
 .b8 116
 .b8 114
 .b8 105
 .b8 120
 .b8 73
 .b8 110
 .b8 99
 .b8 111
 .b8 114
 .b8 112
 .b8 111
 .b8 114
 .b8 97
 .b8 116
 .b8 101
 .b8 83
 .b8 105
 .b8 103
 .b8 109
 .b8 111
 .b8 105
 .b8 100
 .b8 68
 .b8 101
 .b8 114
 .b8 105
 .b8 118
 .b8 80
 .b8 102
 .b8 83
 .b8 95
 .b8 83
 .b8 95
 .b8 105
 .b8 105

 .b8 0
 .b32 1
 .b32 78
 .b32 962
 .b8 1
 .b64 func_begin7
 .b64 func_end7
 .b8 1
 .b8 156
 .b8 6

 .b8 98
 .b8 97
 .b8 115
 .b8 101

 .b8 0
 .b32 1
 .b32 78
 .b32 6662
 .b8 9
 .b8 3
 .b64 _Z29matrixIncorporateSigmoidDerivPfS_S_ii_param_0
 .b8 7
 .b8 6

 .b8 97
 .b8 99
 .b8 116
 .b8 105
 .b8 118
 .b8 97
 .b8 116
 .b8 105
 .b8 111
 .b8 110

 .b8 0
 .b32 1
 .b32 78
 .b32 6662
 .b8 9
 .b8 3
 .b64 _Z29matrixIncorporateSigmoidDerivPfS_S_ii_param_1
 .b8 7
 .b8 6

 .b8 111
 .b8 117
 .b8 116
 .b8 112
 .b8 117
 .b8 116

 .b8 0
 .b32 1
 .b32 78
 .b32 6662
 .b8 9
 .b8 3
 .b64 _Z29matrixIncorporateSigmoidDerivPfS_S_ii_param_2
 .b8 7
 .b8 6

 .b8 114
 .b8 111
 .b8 119
 .b8 115

 .b8 0
 .b32 1
 .b32 78
 .b32 6668
 .b8 9
 .b8 3
 .b64 _Z29matrixIncorporateSigmoidDerivPfS_S_ii_param_3
 .b8 7
 .b8 6

 .b8 99
 .b8 111
 .b8 108
 .b8 117
 .b8 109
 .b8 110
 .b8 115

 .b8 0
 .b32 1
 .b32 78
 .b32 6668
 .b8 9
 .b8 3
 .b64 _Z29matrixIncorporateSigmoidDerivPfS_S_ii_param_4
 .b8 7
 .b8 7

 .b64 tmp60
 .b64 tmp66
 .b8 7

 .b64 tmp60
 .b64 tmp65
 .b8 7

 .b64 tmp60
 .b64 tmp65
 .b8 10

 .b8 105

 .b8 0
 .b32 1
 .b32 80
 .b32 6668
 .b8 5
 .b8 144
 .b8 177
 .b8 228
 .b8 149
 .b8 1
 .b8 2
 .b8 10

 .b8 106

 .b8 0
 .b32 1
 .b32 81
 .b32 6668
 .b8 5
 .b8 144
 .b8 178
 .b8 228
 .b8 149
 .b8 1
 .b8 2
 .b8 7

 .b64 tmp62
 .b64 tmp65
 .b8 7

 .b64 tmp63
 .b64 tmp65
 .b8 10

 .b8 105
 .b8 106

 .b8 0
 .b32 1
 .b32 84
 .b32 6668
 .b8 6
 .b8 144
 .b8 180
 .b8 226
 .b8 200
 .b8 171
 .b8 2
 .b8 2
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 5

 .b8 95
 .b8 90
 .b8 50
 .b8 51
 .b8 109
 .b8 97
 .b8 116
 .b8 114
 .b8 105
 .b8 120
 .b8 67
 .b8 114
 .b8 111
 .b8 115
 .b8 115
 .b8 69
 .b8 110
 .b8 116
 .b8 114
 .b8 111
 .b8 112
 .b8 121
 .b8 69
 .b8 114
 .b8 114
 .b8 111
 .b8 114
 .b8 80
 .b8 102
 .b8 83
 .b8 95
 .b8 83
 .b8 95
 .b8 105
 .b8 105

 .b8 0
 .b8 95
 .b8 90
 .b8 50
 .b8 51
 .b8 109
 .b8 97
 .b8 116
 .b8 114
 .b8 105
 .b8 120
 .b8 67
 .b8 114
 .b8 111
 .b8 115
 .b8 115
 .b8 69
 .b8 110
 .b8 116
 .b8 114
 .b8 111
 .b8 112
 .b8 121
 .b8 69
 .b8 114
 .b8 114
 .b8 111
 .b8 114
 .b8 80
 .b8 102
 .b8 83
 .b8 95
 .b8 83
 .b8 95
 .b8 105
 .b8 105

 .b8 0
 .b32 1
 .b32 89
 .b32 962
 .b8 1
 .b64 func_begin8
 .b64 func_end8
 .b8 1
 .b8 156
 .b8 6

 .b8 115
 .b8 105
 .b8 103
 .b8 109
 .b8 111
 .b8 105
 .b8 100
 .b8 83
 .b8 99
 .b8 111
 .b8 114
 .b8 101
 .b8 115

 .b8 0
 .b32 1
 .b32 89
 .b32 6662
 .b8 9
 .b8 3
 .b64 _Z23matrixCrossEntropyErrorPfS_S_ii_param_0
 .b8 7
 .b8 6

 .b8 116
 .b8 114
 .b8 117
 .b8 101
 .b8 76
 .b8 97
 .b8 98
 .b8 101
 .b8 108
 .b8 115

 .b8 0
 .b32 1
 .b32 89
 .b32 6662
 .b8 9
 .b8 3
 .b64 _Z23matrixCrossEntropyErrorPfS_S_ii_param_1
 .b8 7
 .b8 6

 .b8 111
 .b8 117
 .b8 116
 .b8 112
 .b8 117
 .b8 116

 .b8 0
 .b32 1
 .b32 89
 .b32 6662
 .b8 9
 .b8 3
 .b64 _Z23matrixCrossEntropyErrorPfS_S_ii_param_2
 .b8 7
 .b8 6

 .b8 114
 .b8 111
 .b8 119
 .b8 115

 .b8 0
 .b32 1
 .b32 89
 .b32 6668
 .b8 9
 .b8 3
 .b64 _Z23matrixCrossEntropyErrorPfS_S_ii_param_3
 .b8 7
 .b8 6

 .b8 99
 .b8 111
 .b8 108
 .b8 117
 .b8 109
 .b8 110
 .b8 115

 .b8 0
 .b32 1
 .b32 89
 .b32 6668
 .b8 9
 .b8 3
 .b64 _Z23matrixCrossEntropyErrorPfS_S_ii_param_4
 .b8 7
 .b8 7

 .b64 tmp67
 .b64 tmp79
 .b8 7

 .b64 tmp67
 .b64 tmp78
 .b8 7

 .b64 tmp67
 .b64 tmp78
 .b8 10

 .b8 105

 .b8 0
 .b32 1
 .b32 91
 .b32 6668
 .b8 5
 .b8 144
 .b8 177
 .b8 228
 .b8 149
 .b8 1
 .b8 2
 .b8 10

 .b8 106

 .b8 0
 .b32 1
 .b32 92
 .b32 6668
 .b8 5
 .b8 144
 .b8 178
 .b8 228
 .b8 149
 .b8 1
 .b8 2
 .b8 7

 .b64 tmp69
 .b64 tmp78
 .b8 7

 .b64 tmp70
 .b64 tmp78
 .b8 10

 .b8 105
 .b8 106

 .b8 0
 .b32 1
 .b32 95
 .b32 6668
 .b8 5
 .b8 144
 .b8 179
 .b8 228
 .b8 149
 .b8 1
 .b8 2
 .b8 8

 .b32 351
 .b64 tmp73
 .b64 tmp74
 .b32 1
 .b32 96
 .b8 9

 .b32 375
 .b8 6
 .b8 144
 .b8 181
 .b8 238
 .b8 152
 .b8 171
 .b8 2
 .b8 2
 .b8 0
 .b8 8

 .b32 351
 .b64 tmp76
 .b64 tmp77
 .b32 1
 .b32 96
 .b8 9

 .b32 375
 .b8 6
 .b8 144
 .b8 185
 .b8 238
 .b8 152
 .b8 171
 .b8 2
 .b8 2
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 5

 .b8 95
 .b8 90
 .b8 50
 .b8 54
 .b8 109
 .b8 97
 .b8 116
 .b8 114
 .b8 105
 .b8 120
 .b8 66
 .b8 101
 .b8 108
 .b8 108
 .b8 109
 .b8 97
 .b8 110
 .b8 69
 .b8 114
 .b8 114
 .b8 111
 .b8 114
 .b8 65
 .b8 110
 .b8 100
 .b8 68
 .b8 101
 .b8 114
 .b8 105
 .b8 118
 .b8 80
 .b8 102
 .b8 83
 .b8 95
 .b8 83
 .b8 95
 .b8 83
 .b8 95
 .b8 83
 .b8 95
 .b8 83
 .b8 95
 .b8 102
 .b8 83
 .b8 95
 .b8 105
 .b8 105

 .b8 0
 .b8 95
 .b8 90
 .b8 50
 .b8 54
 .b8 109
 .b8 97
 .b8 116
 .b8 114
 .b8 105
 .b8 120
 .b8 66
 .b8 101
 .b8 108
 .b8 108
 .b8 109
 .b8 97
 .b8 110
 .b8 69
 .b8 114
 .b8 114
 .b8 111
 .b8 114
 .b8 65
 .b8 110
 .b8 100
 .b8 68
 .b8 101
 .b8 114
 .b8 105
 .b8 118
 .b8 80
 .b8 102
 .b8 83
 .b8 95
 .b8 83
 .b8 95
 .b8 83
 .b8 95
 .b8 83
 .b8 95
 .b8 83
 .b8 95
 .b8 102
 .b8 83
 .b8 95
 .b8 105
 .b8 105

 .b8 0
 .b32 1
 .b32 101
 .b32 962
 .b8 1
 .b64 func_begin9
 .b64 func_end9
 .b8 1
 .b8 156
 .b8 6

 .b8 112
 .b8 114
 .b8 101
 .b8 100
 .b8 105
 .b8 99
 .b8 116
 .b8 101
 .b8 100
 .b8 81
 .b8 86
 .b8 97
 .b8 108
 .b8 117
 .b8 101
 .b8 115

 .b8 0
 .b32 1
 .b32 101
 .b32 6662
 .b8 9
 .b8 3
 .b64 _Z26matrixBellmanErrorAndDerivPfS_S_S_S_S_fS_ii_param_0
 .b8 7
 .b8 6

 .b8 109
 .b8 97
 .b8 120
 .b8 81
 .b8 72
 .b8 97
 .b8 116
 .b8 86
 .b8 97
 .b8 108
 .b8 117
 .b8 101
 .b8 115

 .b8 0
 .b32 1
 .b32 101
 .b32 6662
 .b8 9
 .b8 3
 .b64 _Z26matrixBellmanErrorAndDerivPfS_S_S_S_S_fS_ii_param_1
 .b8 7
 .b8 6

 .b8 99
 .b8 104
 .b8 111
 .b8 115
 .b8 101
 .b8 110
 .b8 65
 .b8 99
 .b8 116
 .b8 105
 .b8 111
 .b8 110
 .b8 73
 .b8 110
 .b8 100
 .b8 105
 .b8 99
 .b8 101
 .b8 115

 .b8 0
 .b32 1
 .b32 101
 .b32 6662
 .b8 9
 .b8 3
 .b64 _Z26matrixBellmanErrorAndDerivPfS_S_S_S_S_fS_ii_param_2
 .b8 7
 .b8 6

 .b8 99
 .b8 117
 .b8 114
 .b8 114
 .b8 101
 .b8 110
 .b8 116
 .b8 82
 .b8 101
 .b8 119
 .b8 97
 .b8 114
 .b8 100
 .b8 115

 .b8 0
 .b32 1
 .b32 101
 .b32 6662
 .b8 9
 .b8 3
 .b64 _Z26matrixBellmanErrorAndDerivPfS_S_S_S_S_fS_ii_param_3
 .b8 7
 .b8 6

 .b8 101
 .b8 114
 .b8 114
 .b8 111
 .b8 114

 .b8 0
 .b32 1
 .b32 101
 .b32 6662
 .b8 9
 .b8 3
 .b64 _Z26matrixBellmanErrorAndDerivPfS_S_S_S_S_fS_ii_param_4
 .b8 7
 .b8 6

 .b8 101
 .b8 114
 .b8 114
 .b8 111
 .b8 114
 .b8 68
 .b8 101
 .b8 114
 .b8 105
 .b8 118
 .b8 97
 .b8 116
 .b8 105
 .b8 118
 .b8 101

 .b8 0
 .b32 1
 .b32 101
 .b32 6662
 .b8 9
 .b8 3
 .b64 _Z26matrixBellmanErrorAndDerivPfS_S_S_S_S_fS_ii_param_5
 .b8 7
 .b8 6

 .b8 100
 .b8 105
 .b8 115
 .b8 99
 .b8 111
 .b8 117
 .b8 110
 .b8 116

 .b8 0
 .b32 1
 .b32 102
 .b32 234
 .b8 5
 .b8 144
 .b8 180
 .b8 204
 .b8 149
 .b8 1
 .b8 2
 .b8 6

 .b8 105
 .b8 115
 .b8 76
 .b8 97
 .b8 115
 .b8 116
 .b8 69
 .b8 112
 .b8 105
 .b8 115
 .b8 111
 .b8 100
 .b8 101

 .b8 0
 .b32 1
 .b32 102
 .b32 6662
 .b8 9
 .b8 3
 .b64 _Z26matrixBellmanErrorAndDerivPfS_S_S_S_S_fS_ii_param_7
 .b8 7
 .b8 6

 .b8 114
 .b8 111
 .b8 119
 .b8 115

 .b8 0
 .b32 1
 .b32 102
 .b32 6668
 .b8 9
 .b8 3
 .b64 _Z26matrixBellmanErrorAndDerivPfS_S_S_S_S_fS_ii_param_8
 .b8 7
 .b8 6

 .b8 99
 .b8 111
 .b8 108
 .b8 117
 .b8 109
 .b8 110
 .b8 115

 .b8 0
 .b32 1
 .b32 102
 .b32 6668
 .b8 9
 .b8 3
 .b64 _Z26matrixBellmanErrorAndDerivPfS_S_S_S_S_fS_ii_param_9
 .b8 7
 .b8 7

 .b64 tmp80
 .b64 tmp90
 .b8 7

 .b64 tmp80
 .b64 tmp89
 .b8 7

 .b64 tmp80
 .b64 tmp89
 .b8 10

 .b8 105

 .b8 0
 .b32 1
 .b32 104
 .b32 6668
 .b8 5
 .b8 144
 .b8 177
 .b8 228
 .b8 149
 .b8 1
 .b8 2
 .b8 10

 .b8 106

 .b8 0
 .b32 1
 .b32 105
 .b32 6668
 .b8 5
 .b8 144
 .b8 178
 .b8 228
 .b8 149
 .b8 1
 .b8 2
 .b8 7

 .b64 tmp82
 .b64 tmp89
 .b8 7

 .b64 tmp83
 .b64 tmp89
 .b8 10

 .b8 105
 .b8 106

 .b8 0
 .b32 1
 .b32 108
 .b32 6668
 .b8 5
 .b8 144
 .b8 179
 .b8 228
 .b8 149
 .b8 1
 .b8 2
 .b8 10

 .b8 121

 .b8 0
 .b32 1
 .b32 109
 .b32 234
 .b8 6
 .b8 144
 .b8 180
 .b8 226
 .b8 152
 .b8 171
 .b8 2
 .b8 2
 .b8 7

 .b64 tmp86
 .b64 tmp89
 .b8 7

 .b64 tmp87
 .b64 tmp89
 .b8 10

 .b8 116
 .b8 109
 .b8 112

 .b8 0
 .b32 1
 .b32 115
 .b32 234
 .b8 6
 .b8 144
 .b8 178
 .b8 226
 .b8 152
 .b8 171
 .b8 2
 .b8 2
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 5

 .b8 95
 .b8 90
 .b8 50
 .b8 49
 .b8 68
 .b8 113
 .b8 110
 .b8 83
 .b8 116
 .b8 97
 .b8 110
 .b8 102
 .b8 111
 .b8 114
 .b8 100
 .b8 69
 .b8 118
 .b8 97
 .b8 108
 .b8 117
 .b8 97
 .b8 116
 .b8 105
 .b8 111
 .b8 110
 .b8 80
 .b8 102
 .b8 83
 .b8 95
 .b8 83
 .b8 95
 .b8 83
 .b8 95
 .b8 83
 .b8 95
 .b8 105

 .b8 0
 .b8 95
 .b8 90
 .b8 50
 .b8 49
 .b8 68
 .b8 113
 .b8 110
 .b8 83
 .b8 116
 .b8 97
 .b8 110
 .b8 102
 .b8 111
 .b8 114
 .b8 100
 .b8 69
 .b8 118
 .b8 97
 .b8 108
 .b8 117
 .b8 97
 .b8 116
 .b8 105
 .b8 111
 .b8 110
 .b8 80
 .b8 102
 .b8 83
 .b8 95
 .b8 83
 .b8 95
 .b8 83
 .b8 95
 .b8 83
 .b8 95
 .b8 105

 .b8 0
 .b32 1
 .b32 122
 .b32 962
 .b8 1
 .b64 func_begin10
 .b64 func_end10
 .b8 1
 .b8 156
 .b8 6

 .b8 112
 .b8 114
 .b8 101
 .b8 100
 .b8 105
 .b8 99
 .b8 116
 .b8 101
 .b8 100
 .b8 97
 .b8 99
 .b8 116
 .b8 105
 .b8 111
 .b8 110
 .b8 73
 .b8 110
 .b8 100
 .b8 105
 .b8 99
 .b8 101
 .b8 115

 .b8 0
 .b32 1
 .b32 122
 .b32 6662
 .b8 9
 .b8 3
 .b64 _Z21DqnStanfordEvaluationPfS_S_S_S_i_param_0
 .b8 7
 .b8 6

 .b8 99
 .b8 104
 .b8 111
 .b8 115
 .b8 101
 .b8 110
 .b8 65
 .b8 99
 .b8 116
 .b8 105
 .b8 111
 .b8 110
 .b8 73
 .b8 110
 .b8 100
 .b8 105
 .b8 99
 .b8 101
 .b8 115

 .b8 0
 .b32 1
 .b32 122
 .b32 6662
 .b8 9
 .b8 3
 .b64 _Z21DqnStanfordEvaluationPfS_S_S_S_i_param_1
 .b8 7
 .b8 6

 .b8 99
 .b8 117
 .b8 114
 .b8 114
 .b8 101
 .b8 110
 .b8 116
 .b8 82
 .b8 101
 .b8 119
 .b8 97
 .b8 114
 .b8 100
 .b8 115

 .b8 0
 .b32 1
 .b32 122
 .b32 6662
 .b8 9
 .b8 3
 .b64 _Z21DqnStanfordEvaluationPfS_S_S_S_i_param_2
 .b8 7
 .b8 6

 .b8 109
 .b8 97
 .b8 116
 .b8 99
 .b8 104
 .b8 80
 .b8 114
 .b8 101
 .b8 100
 .b8 105
 .b8 99
 .b8 116
 .b8 82
 .b8 101
 .b8 119
 .b8 97
 .b8 114
 .b8 100
 .b8 115

 .b8 0
 .b32 1
 .b32 122
 .b32 6662
 .b8 9
 .b8 3
 .b64 _Z21DqnStanfordEvaluationPfS_S_S_S_i_param_3
 .b8 7
 .b8 6

 .b8 110
 .b8 111
 .b8 110
 .b8 77
 .b8 97
 .b8 116
 .b8 99
 .b8 104
 .b8 80
 .b8 114
 .b8 101
 .b8 100
 .b8 105
 .b8 99
 .b8 116
 .b8 82
 .b8 101
 .b8 119
 .b8 97
 .b8 114
 .b8 100
 .b8 115

 .b8 0
 .b32 1
 .b32 122
 .b32 6662
 .b8 9
 .b8 3
 .b64 _Z21DqnStanfordEvaluationPfS_S_S_S_i_param_4
 .b8 7
 .b8 6

 .b8 114
 .b8 111
 .b8 119
 .b8 115

 .b8 0
 .b32 1
 .b32 122
 .b32 6668
 .b8 9
 .b8 3
 .b64 _Z21DqnStanfordEvaluationPfS_S_S_S_i_param_5
 .b8 7
 .b8 7

 .b64 tmp91
 .b64 tmp97
 .b8 7

 .b64 tmp91
 .b64 tmp96
 .b8 7

 .b64 tmp91
 .b64 tmp96
 .b8 10

 .b8 105

 .b8 0
 .b32 1
 .b32 124
 .b32 6668
 .b8 5
 .b8 144
 .b8 177
 .b8 228
 .b8 149
 .b8 1
 .b8 2
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 5

 .b8 95
 .b8 90
 .b8 49
 .b8 52
 .b8 109
 .b8 97
 .b8 116
 .b8 114
 .b8 105
 .b8 120
 .b8 72
 .b8 97
 .b8 100
 .b8 97
 .b8 109
 .b8 97
 .b8 114
 .b8 100
 .b8 80
 .b8 102
 .b8 83
 .b8 95
 .b8 102
 .b8 83
 .b8 95
 .b8 102
 .b8 105
 .b8 105

 .b8 0
 .b8 95
 .b8 90
 .b8 49
 .b8 52
 .b8 109
 .b8 97
 .b8 116
 .b8 114
 .b8 105
 .b8 120
 .b8 72
 .b8 97
 .b8 100
 .b8 97
 .b8 109
 .b8 97
 .b8 114
 .b8 100
 .b8 80
 .b8 102
 .b8 83
 .b8 95
 .b8 102
 .b8 83
 .b8 95
 .b8 102
 .b8 105
 .b8 105

 .b8 0
 .b32 1
 .b32 138
 .b32 962
 .b8 1
 .b64 func_begin11
 .b64 func_end11
 .b8 1
 .b8 156
 .b8 6

 .b8 105
 .b8 110
 .b8 112
 .b8 117
 .b8 116
 .b8 49

 .b8 0
 .b32 1
 .b32 138
 .b32 6662
 .b8 9
 .b8 3
 .b64 _Z14matrixHadamardPfS_fS_fii_param_0
 .b8 7
 .b8 6

 .b8 105
 .b8 110
 .b8 112
 .b8 117
 .b8 116
 .b8 50

 .b8 0
 .b32 1
 .b32 138
 .b32 6662
 .b8 9
 .b8 3
 .b64 _Z14matrixHadamardPfS_fS_fii_param_1
 .b8 7
 .b8 6

 .b8 97
 .b8 108
 .b8 112
 .b8 104
 .b8 97

 .b8 0
 .b32 1
 .b32 138
 .b32 234
 .b8 5
 .b8 144
 .b8 177
 .b8 204
 .b8 149
 .b8 1
 .b8 2
 .b8 6

 .b8 111
 .b8 117
 .b8 116
 .b8 112
 .b8 117
 .b8 116

 .b8 0
 .b32 1
 .b32 138
 .b32 6662
 .b8 9
 .b8 3
 .b64 _Z14matrixHadamardPfS_fS_fii_param_3
 .b8 7
 .b8 6

 .b8 98
 .b8 101
 .b8 116
 .b8 97

 .b8 0
 .b32 1
 .b32 138
 .b32 234
 .b8 5
 .b8 144
 .b8 178
 .b8 204
 .b8 149
 .b8 1
 .b8 2
 .b8 6

 .b8 114
 .b8 111
 .b8 119
 .b8 115

 .b8 0
 .b32 1
 .b32 138
 .b32 6668
 .b8 9
 .b8 3
 .b64 _Z14matrixHadamardPfS_fS_fii_param_5
 .b8 7
 .b8 6

 .b8 99
 .b8 111
 .b8 108
 .b8 117
 .b8 109
 .b8 110
 .b8 115

 .b8 0
 .b32 1
 .b32 138
 .b32 6668
 .b8 9
 .b8 3
 .b64 _Z14matrixHadamardPfS_fS_fii_param_6
 .b8 7
 .b8 7

 .b64 tmp98
 .b64 tmp104
 .b8 7

 .b64 tmp98
 .b64 tmp103
 .b8 7

 .b64 tmp98
 .b64 tmp103
 .b8 10

 .b8 105

 .b8 0
 .b32 1
 .b32 140
 .b32 6668
 .b8 5
 .b8 144
 .b8 177
 .b8 228
 .b8 149
 .b8 1
 .b8 2
 .b8 10

 .b8 106

 .b8 0
 .b32 1
 .b32 141
 .b32 6668
 .b8 5
 .b8 144
 .b8 178
 .b8 228
 .b8 149
 .b8 1
 .b8 2
 .b8 7

 .b64 tmp100
 .b64 tmp103
 .b8 7

 .b64 tmp101
 .b64 tmp103
 .b8 10

 .b8 105
 .b8 106

 .b8 0
 .b32 1
 .b32 144
 .b32 6668
 .b8 6
 .b8 144
 .b8 180
 .b8 226
 .b8 200
 .b8 171
 .b8 2
 .b8 2
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 5

 .b8 95
 .b8 90
 .b8 49
 .b8 51
 .b8 99
 .b8 111
 .b8 108
 .b8 117
 .b8 109
 .b8 110
 .b8 119
 .b8 105
 .b8 115
 .b8 101
 .b8 77
 .b8 97
 .b8 120
 .b8 80
 .b8 102
 .b8 83
 .b8 95
 .b8 105
 .b8 105

 .b8 0
 .b8 95
 .b8 90
 .b8 49
 .b8 51
 .b8 99
 .b8 111
 .b8 108
 .b8 117
 .b8 109
 .b8 110
 .b8 119
 .b8 105
 .b8 115
 .b8 101
 .b8 77
 .b8 97
 .b8 120
 .b8 80
 .b8 102
 .b8 83
 .b8 95
 .b8 105
 .b8 105

 .b8 0
 .b32 1
 .b32 149
 .b32 962
 .b8 1
 .b64 func_begin12
 .b64 func_end12
 .b8 1
 .b8 156
 .b8 6

 .b8 105
 .b8 110
 .b8 112
 .b8 117
 .b8 116

 .b8 0
 .b32 1
 .b32 149
 .b32 6662
 .b8 9
 .b8 3
 .b64 _Z13columnwiseMaxPfS_ii_param_0
 .b8 7
 .b8 6

 .b8 111
 .b8 117
 .b8 116
 .b8 112
 .b8 117
 .b8 116

 .b8 0
 .b32 1
 .b32 149
 .b32 6662
 .b8 9
 .b8 3
 .b64 _Z13columnwiseMaxPfS_ii_param_1
 .b8 7
 .b8 6

 .b8 114
 .b8 111
 .b8 119
 .b8 115

 .b8 0
 .b32 1
 .b32 149
 .b32 6668
 .b8 9
 .b8 3
 .b64 _Z13columnwiseMaxPfS_ii_param_2
 .b8 7
 .b8 6

 .b8 99
 .b8 111
 .b8 108
 .b8 117
 .b8 109
 .b8 110
 .b8 115

 .b8 0
 .b32 1
 .b32 149
 .b32 6668
 .b8 9
 .b8 3
 .b64 _Z13columnwiseMaxPfS_ii_param_3
 .b8 7
 .b8 7

 .b64 tmp105
 .b64 tmp119
 .b8 7

 .b64 tmp105
 .b64 tmp118
 .b8 7

 .b64 tmp105
 .b64 tmp118
 .b8 10

 .b8 106

 .b8 0
 .b32 1
 .b32 151
 .b32 6668
 .b8 5
 .b8 144
 .b8 177
 .b8 228
 .b8 149
 .b8 1
 .b8 2
 .b8 7

 .b64 tmp106
 .b64 tmp118
 .b8 7

 .b64 tmp107
 .b64 tmp118
 .b8 12

 .b8 109
 .b8 97
 .b8 120
 .b8 73
 .b8 110
 .b8 67
 .b8 111
 .b8 108
 .b8 117
 .b8 109
 .b8 110

 .b8 0
 .b32 1
 .b32 154
 .b32 234
 .b32 .debug_loc
 .b8 7

 .b64 tmp109
 .b64 tmp117
 .b8 12

 .b8 105

 .b8 0
 .b32 1
 .b32 155
 .b32 6668
 .b32 .debug_loc+108
 .b8 7

 .b64 tmp110
 .b64 tmp117
 .b8 7

 .b64 tmp110
 .b64 tmp117
 .b8 7

 .b64 tmp112
 .b64 tmp117
 .b8 7

 .b64 tmp112
 .b64 tmp115
 .b8 10

 .b8 105
 .b8 106

 .b8 0
 .b32 1
 .b32 157
 .b32 6668
 .b8 5
 .b8 144
 .b8 180
 .b8 228
 .b8 149
 .b8 1
 .b8 2
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 5

 .b8 95
 .b8 90
 .b8 49
 .b8 56
 .b8 99
 .b8 111
 .b8 108
 .b8 117
 .b8 109
 .b8 110
 .b8 119
 .b8 105
 .b8 115
 .b8 101
 .b8 77
 .b8 97
 .b8 120
 .b8 73
 .b8 110
 .b8 100
 .b8 101
 .b8 120
 .b8 80
 .b8 102
 .b8 83
 .b8 95
 .b8 105
 .b8 105

 .b8 0
 .b8 95
 .b8 90
 .b8 49
 .b8 56
 .b8 99
 .b8 111
 .b8 108
 .b8 117
 .b8 109
 .b8 110
 .b8 119
 .b8 105
 .b8 115
 .b8 101
 .b8 77
 .b8 97
 .b8 120
 .b8 73
 .b8 110
 .b8 100
 .b8 101
 .b8 120
 .b8 80
 .b8 102
 .b8 83
 .b8 95
 .b8 105
 .b8 105

 .b8 0
 .b32 1
 .b32 167
 .b32 962
 .b8 1
 .b64 func_begin13
 .b64 func_end13
 .b8 1
 .b8 156
 .b8 6

 .b8 105
 .b8 110
 .b8 112
 .b8 117
 .b8 116

 .b8 0
 .b32 1
 .b32 167
 .b32 6662
 .b8 9
 .b8 3
 .b64 _Z18columnwiseMaxIndexPfS_ii_param_0
 .b8 7
 .b8 6

 .b8 111
 .b8 117
 .b8 116
 .b8 112
 .b8 117
 .b8 116

 .b8 0
 .b32 1
 .b32 167
 .b32 6662
 .b8 9
 .b8 3
 .b64 _Z18columnwiseMaxIndexPfS_ii_param_1
 .b8 7
 .b8 6

 .b8 114
 .b8 111
 .b8 119
 .b8 115

 .b8 0
 .b32 1
 .b32 167
 .b32 6668
 .b8 9
 .b8 3
 .b64 _Z18columnwiseMaxIndexPfS_ii_param_2
 .b8 7
 .b8 6

 .b8 99
 .b8 111
 .b8 108
 .b8 117
 .b8 109
 .b8 110
 .b8 115

 .b8 0
 .b32 1
 .b32 167
 .b32 6668
 .b8 9
 .b8 3
 .b64 _Z18columnwiseMaxIndexPfS_ii_param_3
 .b8 7
 .b8 7

 .b64 tmp120
 .b64 tmp135
 .b8 7

 .b64 tmp120
 .b64 tmp134
 .b8 7

 .b64 tmp120
 .b64 tmp134
 .b8 10

 .b8 106

 .b8 0
 .b32 1
 .b32 169
 .b32 6668
 .b8 5
 .b8 144
 .b8 177
 .b8 228
 .b8 149
 .b8 1
 .b8 2
 .b8 7

 .b64 tmp121
 .b64 tmp134
 .b8 7

 .b64 tmp122
 .b64 tmp134
 .b8 12

 .b8 109
 .b8 97
 .b8 120
 .b8 73
 .b8 110
 .b8 67
 .b8 111
 .b8 108
 .b8 117
 .b8 109
 .b8 110
 .b8 73
 .b8 110
 .b8 100
 .b8 101
 .b8 120

 .b8 0
 .b32 1
 .b32 172
 .b32 6668
 .b32 .debug_loc+196
 .b8 12

 .b8 109
 .b8 97
 .b8 120
 .b8 73
 .b8 110
 .b8 67
 .b8 111
 .b8 108
 .b8 117
 .b8 109
 .b8 110

 .b8 0
 .b32 1
 .b32 173
 .b32 234
 .b32 .debug_loc+308
 .b8 7

 .b64 tmp124
 .b64 tmp133
 .b8 12

 .b8 105

 .b8 0
 .b32 1
 .b32 174
 .b32 6668
 .b32 .debug_loc+416
 .b8 7

 .b64 tmp125
 .b64 tmp133
 .b8 7

 .b64 tmp125
 .b64 tmp133
 .b8 7

 .b64 tmp127
 .b64 tmp133
 .b8 7

 .b64 tmp127
 .b64 tmp131
 .b8 10

 .b8 105
 .b8 106

 .b8 0
 .b32 1
 .b32 176
 .b32 6668
 .b8 5
 .b8 144
 .b8 182
 .b8 228
 .b8 149
 .b8 1
 .b8 2
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 13

 .b32 234
 .b8 12
 .b8 4

 .b8 105
 .b8 110
 .b8 116

 .b8 0
 .b8 5
 .b32 4
 .b8 0
}
.section .debug_abbrev {
 .b8 1

 .b8 17

 .b8 1

 .b8 37

 .b8 8

 .b8 19

 .b8 11

 .b8 3

 .b8 8

 .b8 17

 .b8 1

 .b8 16

 .b8 6

 .b8 27

 .b8 8

 .b8 0

 .b8 0

 .b8 2

 .b8 46

 .b8 1

 .b8 135
 .b8 64

 .b8 8

 .b8 3

 .b8 8

 .b8 58

 .b8 6

 .b8 59

 .b8 6

 .b8 73

 .b8 19

 .b8 32

 .b8 11

 .b8 0

 .b8 0

 .b8 3

 .b8 5

 .b8 0

 .b8 3

 .b8 8

 .b8 58

 .b8 6

 .b8 59

 .b8 6

 .b8 73

 .b8 19

 .b8 0

 .b8 0

 .b8 4

 .b8 36

 .b8 0

 .b8 3

 .b8 8

 .b8 62

 .b8 11

 .b8 11

 .b8 6

 .b8 0

 .b8 0

 .b8 5

 .b8 46

 .b8 1

 .b8 135
 .b8 64

 .b8 8

 .b8 3

 .b8 8

 .b8 58

 .b8 6

 .b8 59

 .b8 6

 .b8 73

 .b8 19

 .b8 63

 .b8 12

 .b8 17

 .b8 1

 .b8 18

 .b8 1

 .b8 64

 .b8 10

 .b8 0

 .b8 0

 .b8 6

 .b8 5

 .b8 0

 .b8 3

 .b8 8

 .b8 58

 .b8 6

 .b8 59

 .b8 6

 .b8 73

 .b8 19

 .b8 2

 .b8 10

 .b8 51

 .b8 11

 .b8 0

 .b8 0

 .b8 7

 .b8 11

 .b8 1

 .b8 17

 .b8 1

 .b8 18

 .b8 1

 .b8 0

 .b8 0

 .b8 8

 .b8 29

 .b8 1

 .b8 49

 .b8 19

 .b8 17

 .b8 1

 .b8 18

 .b8 1

 .b8 88

 .b8 6

 .b8 89

 .b8 6

 .b8 0

 .b8 0

 .b8 9

 .b8 5

 .b8 0

 .b8 49

 .b8 19

 .b8 2

 .b8 10

 .b8 51

 .b8 11

 .b8 0

 .b8 0

 .b8 10

 .b8 52

 .b8 0

 .b8 3

 .b8 8

 .b8 58

 .b8 6

 .b8 59

 .b8 6

 .b8 73

 .b8 19

 .b8 2

 .b8 10

 .b8 51

 .b8 11

 .b8 0

 .b8 0

 .b8 11

 .b8 59

 .b8 0

 .b8 3

 .b8 8

 .b8 0

 .b8 0

 .b8 12

 .b8 52

 .b8 0

 .b8 3

 .b8 8

 .b8 58

 .b8 6

 .b8 59

 .b8 6

 .b8 73

 .b8 19

 .b8 2

 .b8 6

 .b8 0

 .b8 0

 .b8 13

 .b8 15

 .b8 0

 .b8 73

 .b8 19

 .b8 51

 .b8 11

 .b8 0

 .b8 0

 .b8 0

}
.section .debug_loc {
 .b64 tmp108
 .b64 tmp111
 .b8 5
 .b8 0
 .b8 144
 .b8 184
 .b8 204
 .b8 149
 .b8 1
 .b64 tmp111
 .b64 tmp115
 .b8 5
 .b8 0
 .b8 144
 .b8 184
 .b8 204
 .b8 149
 .b8 1
 .b64 tmp115
 .b64 tmp115
 .b8 5
 .b8 0
 .b8 144
 .b8 184
 .b8 204
 .b8 149
 .b8 1
 .b64 tmp115
 .b64 func_end12
 .b8 5
 .b8 0
 .b8 144
 .b8 184
 .b8 204
 .b8 149
 .b8 1
 .b64 0
 .b64 0
 .b64 tmp110
 .b64 tmp110
 .b8 6
 .b8 0
 .b8 144
 .b8 181
 .b8 226
 .b8 200
 .b8 171
 .b8 2
 .b64 tmp110
 .b64 tmp116
 .b8 6
 .b8 0
 .b8 144
 .b8 181
 .b8 226
 .b8 200
 .b8 171
 .b8 2
 .b64 tmp116
 .b64 func_end12
 .b8 6
 .b8 0
 .b8 144
 .b8 181
 .b8 226
 .b8 200
 .b8 171
 .b8 2
 .b64 0
 .b64 0
 .b64 tmp123
 .b64 tmp126
 .b8 6
 .b8 0
 .b8 144
 .b8 176
 .b8 228
 .b8 200
 .b8 171
 .b8 2
 .b64 tmp126
 .b64 tmp131
 .b8 6
 .b8 0
 .b8 144
 .b8 176
 .b8 228
 .b8 200
 .b8 171
 .b8 2
 .b64 tmp131
 .b64 tmp131
 .b8 6
 .b8 0
 .b8 144
 .b8 176
 .b8 228
 .b8 200
 .b8 171
 .b8 2
 .b64 tmp131
 .b64 func_end13
 .b8 6
 .b8 0
 .b8 144
 .b8 176
 .b8 228
 .b8 200
 .b8 171
 .b8 2
 .b64 0
 .b64 0
 .b64 tmp124
 .b64 tmp126
 .b8 5
 .b8 0
 .b8 144
 .b8 185
 .b8 204
 .b8 149
 .b8 1
 .b64 tmp126
 .b64 tmp130
 .b8 5
 .b8 0
 .b8 144
 .b8 185
 .b8 204
 .b8 149
 .b8 1
 .b64 tmp130
 .b64 tmp131
 .b8 5
 .b8 0
 .b8 144
 .b8 185
 .b8 204
 .b8 149
 .b8 1
 .b64 tmp131
 .b64 func_end13
 .b8 5
 .b8 0
 .b8 144
 .b8 185
 .b8 204
 .b8 149
 .b8 1
 .b64 0
 .b64 0
 .b64 tmp125
 .b64 tmp125
 .b8 6
 .b8 0
 .b8 144
 .b8 177
 .b8 228
 .b8 200
 .b8 171
 .b8 2
 .b64 tmp125
 .b64 tmp132
 .b8 6
 .b8 0
 .b8 144
 .b8 177
 .b8 228
 .b8 200
 .b8 171
 .b8 2
 .b64 tmp132
 .b64 func_end13
 .b8 6
 .b8 0
 .b8 144
 .b8 177
 .b8 228
 .b8 200
 .b8 171
 .b8 2
 .b64 0
 .b64 0
}
.section .debug_ranges {
}
.section .debug_pubnames {
 .b32 539
 .b8 2
 .b8 0
 .b32 .debug_info
 .b32 6675
 .b32 6142
 .b8 95
 .b8 90
 .b8 49
 .b8 56
 .b8 99
 .b8 111
 .b8 108
 .b8 117
 .b8 109
 .b8 110
 .b8 119
 .b8 105
 .b8 115
 .b8 101
 .b8 77
 .b8 97
 .b8 120
 .b8 73
 .b8 110
 .b8 100
 .b8 101
 .b8 120
 .b8 80
 .b8 102
 .b8 83
 .b8 95
 .b8 105
 .b8 105
 .b8 0

 .b32 246
 .b8 102
 .b8 100
 .b8 105
 .b8 118
 .b8 105
 .b8 100
 .b8 101
 .b8 102
 .b8 0

 .b32 1748
 .b8 95
 .b8 90
 .b8 49
 .b8 48
 .b8 109
 .b8 97
 .b8 116
 .b8 114
 .b8 105
 .b8 120
 .b8 82
 .b8 101
 .b8 76
 .b8 117
 .b8 80
 .b8 102
 .b8 83
 .b8 95
 .b8 105
 .b8 105
 .b8 0

 .b32 4049
 .b8 95
 .b8 90
 .b8 50
 .b8 54
 .b8 109
 .b8 97
 .b8 116
 .b8 114
 .b8 105
 .b8 120
 .b8 66
 .b8 101
 .b8 108
 .b8 108
 .b8 109
 .b8 97
 .b8 110
 .b8 69
 .b8 114
 .b8 114
 .b8 111
 .b8 114
 .b8 65
 .b8 110
 .b8 100
 .b8 68
 .b8 101
 .b8 114
 .b8 105
 .b8 118
 .b8 80
 .b8 102
 .b8 83
 .b8 95
 .b8 83
 .b8 95
 .b8 83
 .b8 95
 .b8 83
 .b8 95
 .b8 83
 .b8 95
 .b8 102
 .b8 83
 .b8 95
 .b8 105
 .b8 105
 .b8 0

 .b32 3536
 .b8 95
 .b8 90
 .b8 50
 .b8 51
 .b8 109
 .b8 97
 .b8 116
 .b8 114
 .b8 105
 .b8 120
 .b8 67
 .b8 114
 .b8 111
 .b8 115
 .b8 115
 .b8 69
 .b8 110
 .b8 116
 .b8 114
 .b8 111
 .b8 112
 .b8 121
 .b8 69
 .b8 114
 .b8 114
 .b8 111
 .b8 114
 .b8 80
 .b8 102
 .b8 83
 .b8 95
 .b8 83
 .b8 95
 .b8 105
 .b8 105
 .b8 0

 .b32 5666
 .b8 95
 .b8 90
 .b8 49
 .b8 51
 .b8 99
 .b8 111
 .b8 108
 .b8 117
 .b8 109
 .b8 110
 .b8 119
 .b8 105
 .b8 115
 .b8 101
 .b8 77
 .b8 97
 .b8 120
 .b8 80
 .b8 102
 .b8 83
 .b8 95
 .b8 105
 .b8 105
 .b8 0

 .b32 351
 .b8 108
 .b8 111
 .b8 103
 .b8 102
 .b8 0

 .b32 1323
 .b8 95
 .b8 90
 .b8 50
 .b8 54
 .b8 109
 .b8 97
 .b8 116
 .b8 114
 .b8 105
 .b8 120
 .b8 73
 .b8 110
 .b8 99
 .b8 111
 .b8 114
 .b8 112
 .b8 111
 .b8 114
 .b8 97
 .b8 116
 .b8 101
 .b8 84
 .b8 97
 .b8 110
 .b8 104
 .b8 68
 .b8 101
 .b8 114
 .b8 105
 .b8 118
 .b8 80
 .b8 102
 .b8 83
 .b8 95
 .b8 83
 .b8 95
 .b8 105
 .b8 105
 .b8 0

 .b32 3105
 .b8 95
 .b8 90
 .b8 50
 .b8 57
 .b8 109
 .b8 97
 .b8 116
 .b8 114
 .b8 105
 .b8 120
 .b8 73
 .b8 110
 .b8 99
 .b8 111
 .b8 114
 .b8 112
 .b8 111
 .b8 114
 .b8 97
 .b8 116
 .b8 101
 .b8 83
 .b8 105
 .b8 103
 .b8 109
 .b8 111
 .b8 105
 .b8 100
 .b8 68
 .b8 101
 .b8 114
 .b8 105
 .b8 118
 .b8 80
 .b8 102
 .b8 83
 .b8 95
 .b8 83
 .b8 95
 .b8 105
 .b8 105
 .b8 0

 .b32 177
 .b8 102
 .b8 109
 .b8 97
 .b8 120
 .b8 102
 .b8 0

 .b32 309
 .b8 116
 .b8 97
 .b8 110
 .b8 104
 .b8 102
 .b8 0

 .b32 968
 .b8 95
 .b8 90
 .b8 49
 .b8 48
 .b8 109
 .b8 97
 .b8 116
 .b8 114
 .b8 105
 .b8 120
 .b8 84
 .b8 97
 .b8 110
 .b8 104
 .b8 80
 .b8 102
 .b8 83
 .b8 95
 .b8 105
 .b8 105
 .b8 0

 .b32 562
 .b8 95
 .b8 90
 .b8 49
 .b8 54
 .b8 109
 .b8 97
 .b8 116
 .b8 114
 .b8 105
 .b8 120
 .b8 80
 .b8 108
 .b8 117
 .b8 115
 .b8 86
 .b8 101
 .b8 99
 .b8 116
 .b8 111
 .b8 114
 .b8 80
 .b8 102
 .b8 83
 .b8 95
 .b8 83
 .b8 95
 .b8 105
 .b8 105
 .b8 0

 .b32 2581
 .b8 95
 .b8 90
 .b8 49
 .b8 51
 .b8 109
 .b8 97
 .b8 116
 .b8 114
 .b8 105
 .b8 120
 .b8 83
 .b8 105
 .b8 103
 .b8 109
 .b8 111
 .b8 105
 .b8 100
 .b8 80
 .b8 102
 .b8 83
 .b8 95
 .b8 105
 .b8 105
 .b8 0

 .b32 2157
 .b8 95
 .b8 90
 .b8 50
 .b8 54
 .b8 109
 .b8 97
 .b8 116
 .b8 114
 .b8 105
 .b8 120
 .b8 73
 .b8 110
 .b8 99
 .b8 111
 .b8 114
 .b8 112
 .b8 111
 .b8 114
 .b8 97
 .b8 116
 .b8 101
 .b8 82
 .b8 101
 .b8 76
 .b8 117
 .b8 68
 .b8 101
 .b8 114
 .b8 105
 .b8 118
 .b8 80
 .b8 102
 .b8 83
 .b8 95
 .b8 83
 .b8 95
 .b8 105
 .b8 105
 .b8 0

 .b32 5212
 .b8 95
 .b8 90
 .b8 49
 .b8 52
 .b8 109
 .b8 97
 .b8 116
 .b8 114
 .b8 105
 .b8 120
 .b8 72
 .b8 97
 .b8 100
 .b8 97
 .b8 109
 .b8 97
 .b8 114
 .b8 100
 .b8 80
 .b8 102
 .b8 83
 .b8 95
 .b8 102
 .b8 83
 .b8 95
 .b8 102
 .b8 105
 .b8 105
 .b8 0

 .b32 391
 .b8 95
 .b8 90
 .b8 52
 .b8 116
 .b8 97
 .b8 110
 .b8 104
 .b8 102
 .b8 0

 .b32 4779
 .b8 95
 .b8 90
 .b8 50
 .b8 49
 .b8 68
 .b8 113
 .b8 110
 .b8 83
 .b8 116
 .b8 97
 .b8 110
 .b8 102
 .b8 111
 .b8 114
 .b8 100
 .b8 69
 .b8 118
 .b8 97
 .b8 108
 .b8 117
 .b8 97
 .b8 116
 .b8 105
 .b8 111
 .b8 110
 .b8 80
 .b8 102
 .b8 83
 .b8 95
 .b8 83
 .b8 95
 .b8 83
 .b8 95
 .b8 83
 .b8 95
 .b8 105
 .b8 0

 .b32 0
}
