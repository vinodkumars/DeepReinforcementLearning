#line 1 "x64/Debug/kernel.cudafe1.cpp"
#line 1 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
#pragma section("__nv_managed_data__")
#line 1 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
static char __nv_inited_managed_rt = 0; static void **__nv_fatbinhandle_for_managed_rt; static void __nv_save_fatbinhandle_for_managed_rt(void **in){__nv_fatbinhandle_for_managed_rt = in;} static char __nv_init_managed_rt_with_module(void **); static inline void __nv_init_managed_rt(void) { __nv_inited_managed_rt = (__nv_inited_managed_rt ? __nv_inited_managed_rt                 : __nv_init_managed_rt_with_module(__nv_fatbinhandle_for_managed_rt));}
#line 1 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
#line 717 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\sal.h"
#pragma region Input Buffer SAL 1 compatibility macros
#line 1481 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\sal.h"
#pragma endregion Input Buffer SAL 1 compatibility macros
#line 72 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
#pragma pack ( push, 8 )
#line 28 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\vadefs.h"
#pragma pack ( push, 8 )
#line 48 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\vadefs.h"
extern "C" { typedef unsigned __int64 uintptr_t; }
#line 59 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\vadefs.h"
extern "C" { typedef char *va_list; }
#line 119 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\vadefs.h"
extern "C" { extern void __cdecl __va_start(va_list *, ...); } 
#line 144 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\vadefs.h"
#pragma pack ( pop )
#line 494 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
typedef unsigned __int64 size_t; 
#line 1 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\crt/host_runtime.h"






























































#line 64 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\crt/host_runtime.h"



#line 68 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\crt/host_runtime.h"

#line 1 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\builtin_types.h"























































#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_types.h"




















































#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\host_defines.h"


























































































#line 92 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\host_defines.h"










#line 103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\host_defines.h"








































#line 144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\host_defines.h"










#line 155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\host_defines.h"











#line 167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\host_defines.h"










#line 179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\host_defines.h"













        














#line 208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\host_defines.h"
























#line 233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\host_defines.h"


#line 236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\host_defines.h"
#line 54 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_types.h"







enum  cudaRoundMode
{
    cudaRoundNearest,
    cudaRoundZero,
    cudaRoundPosInf,
    cudaRoundMinInf
};

#line 70 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_types.h"
#line 57 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\builtin_types.h"


#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"




















































#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\host_defines.h"










































































































































































































































#line 236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\host_defines.h"
#line 54 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"





















































































#line 140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"










enum  cudaError
{
    




    cudaSuccess                           =      0,
  
    



    cudaErrorMissingConfiguration         =      1,
  
    



    cudaErrorMemoryAllocation             =      2,
  
    



    cudaErrorInitializationError          =      3,
  
    







    cudaErrorLaunchFailure                =      4,
  
    






    cudaErrorPriorLaunchFailure           =      5,
  
    







    cudaErrorLaunchTimeout                =      6,
  
    






    cudaErrorLaunchOutOfResources         =      7,
  
    



    cudaErrorInvalidDeviceFunction        =      8,
  
    






    cudaErrorInvalidConfiguration         =      9,
  
    



    cudaErrorInvalidDevice                =     10,
  
    



    cudaErrorInvalidValue                 =     11,
  
    



    cudaErrorInvalidPitchValue            =     12,
  
    



    cudaErrorInvalidSymbol                =     13,
  
    


    cudaErrorMapBufferObjectFailed        =     14,
  
    


    cudaErrorUnmapBufferObjectFailed      =     15,
  
    



    cudaErrorInvalidHostPointer           =     16,
  
    



    cudaErrorInvalidDevicePointer         =     17,
  
    



    cudaErrorInvalidTexture               =     18,
  
    



    cudaErrorInvalidTextureBinding        =     19,
  
    




    cudaErrorInvalidChannelDescriptor     =     20,
  
    



    cudaErrorInvalidMemcpyDirection       =     21,
  
    







    cudaErrorAddressOfConstant            =     22,
  
    






    cudaErrorTextureFetchFailed           =     23,
  
    






    cudaErrorTextureNotBound              =     24,
  
    






    cudaErrorSynchronizationError         =     25,
  
    



    cudaErrorInvalidFilterSetting         =     26,
  
    



    cudaErrorInvalidNormSetting           =     27,
  
    





    cudaErrorMixedDeviceExecution         =     28,
  
    




    cudaErrorCudartUnloading              =     29,
  
    


    cudaErrorUnknown                      =     30,

    





    cudaErrorNotYetImplemented            =     31,
  
    






    cudaErrorMemoryValueTooLarge          =     32,
  
    




    cudaErrorInvalidResourceHandle        =     33,
  
    





    cudaErrorNotReady                     =     34,
  
    




    cudaErrorInsufficientDriver           =     35,
  
    










    cudaErrorSetOnActiveProcess           =     36,
  
    



    cudaErrorInvalidSurface               =     37,
  
    



    cudaErrorNoDevice                     =     38,
  
    



    cudaErrorECCUncorrectable             =     39,
  
    


    cudaErrorSharedObjectSymbolNotFound   =     40,
  
    


    cudaErrorSharedObjectInitFailed       =     41,
  
    



    cudaErrorUnsupportedLimit             =     42,
  
    



    cudaErrorDuplicateVariableName        =     43,
  
    



    cudaErrorDuplicateTextureName         =     44,
  
    



    cudaErrorDuplicateSurfaceName         =     45,
  
    







    cudaErrorDevicesUnavailable           =     46,
  
    


    cudaErrorInvalidKernelImage           =     47,
  
    





    cudaErrorNoKernelImageForDevice       =     48,
  
    










    cudaErrorIncompatibleDriverContext    =     49,
      
    




    cudaErrorPeerAccessAlreadyEnabled     =     50,
    
    




    cudaErrorPeerAccessNotEnabled         =     51,
    
    



    cudaErrorDeviceAlreadyInUse           =     54,

    




    cudaErrorProfilerDisabled             =     55,

    





    cudaErrorProfilerNotInitialized       =     56,

    




    cudaErrorProfilerAlreadyStarted       =     57,

    




     cudaErrorProfilerAlreadyStopped       =    58,

    





    cudaErrorAssert                        =    59,
  
    




    cudaErrorTooManyPeers                 =     60,
  
    



    cudaErrorHostMemoryAlreadyRegistered  =     61,
        
    



    cudaErrorHostMemoryNotRegistered      =     62,

    


    cudaErrorOperatingSystem              =     63,

    



    cudaErrorPeerAccessUnsupported        =     64,

    




    cudaErrorLaunchMaxDepthExceeded       =     65,

    





    cudaErrorLaunchFileScopedTex          =     66,

    





    cudaErrorLaunchFileScopedSurf         =     67,

    












    cudaErrorSyncDepthExceeded            =     68,

    









    cudaErrorLaunchPendingCountExceeded   =     69,
    
    


    cudaErrorNotPermitted                 =     70,

    



    cudaErrorNotSupported                 =     71,

    






    cudaErrorHardwareStackError           =     72,

    





    cudaErrorIllegalInstruction           =     73,

    






    cudaErrorMisalignedAddress            =     74,

    








    cudaErrorInvalidAddressSpace          =     75,

    





    cudaErrorInvalidPc                    =     76,

    





    cudaErrorIllegalAddress               =     77,

    



    cudaErrorInvalidPtx                   =     78,

    


    cudaErrorInvalidGraphicsContext       =     79,


    


    cudaErrorStartupFailure               =   0x7f,

    





    cudaErrorApiFailureBase               =  10000
};




enum  cudaChannelFormatKind
{
    cudaChannelFormatKindSigned           =   0,      
    cudaChannelFormatKindUnsigned         =   1,      
    cudaChannelFormatKindFloat            =   2,      
    cudaChannelFormatKindNone             =   3       
};




struct  cudaChannelFormatDesc
{
    int                        x; 
    int                        y; 
    int                        z; 
    int                        w; 
    enum cudaChannelFormatKind f; 
};




typedef struct cudaArray *cudaArray_t;




typedef const struct cudaArray *cudaArray_const_t;

struct cudaArray;




typedef struct cudaMipmappedArray *cudaMipmappedArray_t;




typedef const struct cudaMipmappedArray *cudaMipmappedArray_const_t;

struct cudaMipmappedArray;




enum  cudaMemoryType
{
    cudaMemoryTypeHost   = 1, 
    cudaMemoryTypeDevice = 2  
};




enum  cudaMemcpyKind
{
    cudaMemcpyHostToHost          =   0,      
    cudaMemcpyHostToDevice        =   1,      
    cudaMemcpyDeviceToHost        =   2,      
    cudaMemcpyDeviceToDevice      =   3,      
    cudaMemcpyDefault             =   4       
};






struct  cudaPitchedPtr
{
    void   *ptr;      
    size_t  pitch;    
    size_t  xsize;    
    size_t  ysize;    
};






struct  cudaExtent
{
    size_t width;     
    size_t height;    
    size_t depth;     
};






struct  cudaPos
{
    size_t x;     
    size_t y;     
    size_t z;     
};




struct  cudaMemcpy3DParms
{
    cudaArray_t            srcArray;  
    struct cudaPos         srcPos;    
    struct cudaPitchedPtr  srcPtr;    
  
    cudaArray_t            dstArray;  
    struct cudaPos         dstPos;    
    struct cudaPitchedPtr  dstPtr;    
  
    struct cudaExtent      extent;    
    enum cudaMemcpyKind    kind;      
};




struct  cudaMemcpy3DPeerParms
{
    cudaArray_t            srcArray;  
    struct cudaPos         srcPos;    
    struct cudaPitchedPtr  srcPtr;    
    int                    srcDevice; 
  
    cudaArray_t            dstArray;  
    struct cudaPos         dstPos;    
    struct cudaPitchedPtr  dstPtr;    
    int                    dstDevice; 
  
    struct cudaExtent      extent;    
};




struct cudaGraphicsResource;




enum  cudaGraphicsRegisterFlags
{
    cudaGraphicsRegisterFlagsNone             = 0,  
    cudaGraphicsRegisterFlagsReadOnly         = 1,   
    cudaGraphicsRegisterFlagsWriteDiscard     = 2,  
    cudaGraphicsRegisterFlagsSurfaceLoadStore = 4,  
    cudaGraphicsRegisterFlagsTextureGather    = 8   
};




enum  cudaGraphicsMapFlags
{
    cudaGraphicsMapFlagsNone         = 0,  
    cudaGraphicsMapFlagsReadOnly     = 1,  
    cudaGraphicsMapFlagsWriteDiscard = 2   
};




enum  cudaGraphicsCubeFace 
{
    cudaGraphicsCubeFacePositiveX = 0x00, 
    cudaGraphicsCubeFaceNegativeX = 0x01, 
    cudaGraphicsCubeFacePositiveY = 0x02, 
    cudaGraphicsCubeFaceNegativeY = 0x03, 
    cudaGraphicsCubeFacePositiveZ = 0x04, 
    cudaGraphicsCubeFaceNegativeZ = 0x05  
};




enum  cudaResourceType
{
    cudaResourceTypeArray          = 0x00, 
    cudaResourceTypeMipmappedArray = 0x01, 
    cudaResourceTypeLinear         = 0x02, 
    cudaResourceTypePitch2D        = 0x03  
};




enum  cudaResourceViewFormat
{
    cudaResViewFormatNone                      = 0x00, 
    cudaResViewFormatUnsignedChar1             = 0x01, 
    cudaResViewFormatUnsignedChar2             = 0x02, 
    cudaResViewFormatUnsignedChar4             = 0x03, 
    cudaResViewFormatSignedChar1               = 0x04, 
    cudaResViewFormatSignedChar2               = 0x05, 
    cudaResViewFormatSignedChar4               = 0x06, 
    cudaResViewFormatUnsignedShort1            = 0x07, 
    cudaResViewFormatUnsignedShort2            = 0x08, 
    cudaResViewFormatUnsignedShort4            = 0x09, 
    cudaResViewFormatSignedShort1              = 0x0a, 
    cudaResViewFormatSignedShort2              = 0x0b, 
    cudaResViewFormatSignedShort4              = 0x0c, 
    cudaResViewFormatUnsignedInt1              = 0x0d, 
    cudaResViewFormatUnsignedInt2              = 0x0e, 
    cudaResViewFormatUnsignedInt4              = 0x0f, 
    cudaResViewFormatSignedInt1                = 0x10, 
    cudaResViewFormatSignedInt2                = 0x11, 
    cudaResViewFormatSignedInt4                = 0x12, 
    cudaResViewFormatHalf1                     = 0x13, 
    cudaResViewFormatHalf2                     = 0x14, 
    cudaResViewFormatHalf4                     = 0x15, 
    cudaResViewFormatFloat1                    = 0x16, 
    cudaResViewFormatFloat2                    = 0x17, 
    cudaResViewFormatFloat4                    = 0x18, 
    cudaResViewFormatUnsignedBlockCompressed1  = 0x19, 
    cudaResViewFormatUnsignedBlockCompressed2  = 0x1a, 
    cudaResViewFormatUnsignedBlockCompressed3  = 0x1b, 
    cudaResViewFormatUnsignedBlockCompressed4  = 0x1c, 
    cudaResViewFormatSignedBlockCompressed4    = 0x1d, 
    cudaResViewFormatUnsignedBlockCompressed5  = 0x1e, 
    cudaResViewFormatSignedBlockCompressed5    = 0x1f, 
    cudaResViewFormatUnsignedBlockCompressed6H = 0x20, 
    cudaResViewFormatSignedBlockCompressed6H   = 0x21, 
    cudaResViewFormatUnsignedBlockCompressed7  = 0x22  
};




struct  cudaResourceDesc {
	enum cudaResourceType resType;             
	
	union {
		struct {
			cudaArray_t array;                 
		} array;
        struct {
            cudaMipmappedArray_t mipmap;       
        } mipmap;
		struct {
			void *devPtr;                      
			struct cudaChannelFormatDesc desc; 
			size_t sizeInBytes;                
		} linear;
		struct {
			void *devPtr;                      
			struct cudaChannelFormatDesc desc; 
			size_t width;                      
			size_t height;                     
			size_t pitchInBytes;               
		} pitch2D;
	} res;
};




struct  cudaResourceViewDesc
{
    enum cudaResourceViewFormat format;           
    size_t                      width;            
    size_t                      height;           
    size_t                      depth;            
    unsigned int                firstMipmapLevel; 
    unsigned int                lastMipmapLevel;  
    unsigned int                firstLayer;       
    unsigned int                lastLayer;        
};




struct  cudaPointerAttributes
{
    



    enum cudaMemoryType memoryType;

    








    int device;

    



    void *devicePointer;

    



    void *hostPointer;

    


    int isManaged;
};




struct  cudaFuncAttributes
{
   




   size_t sharedSizeBytes;

   



   size_t constSizeBytes;

   


   size_t localSizeBytes;

   




   int maxThreadsPerBlock;

   


   int numRegs;

   




   int ptxVersion;

   




   int binaryVersion;

   



   int cacheModeCA;
};




enum  cudaFuncCache
{
    cudaFuncCachePreferNone   = 0,    
    cudaFuncCachePreferShared = 1,    
    cudaFuncCachePreferL1     = 2,    
    cudaFuncCachePreferEqual  = 3     
};





enum  cudaSharedMemConfig
{
    cudaSharedMemBankSizeDefault   = 0,
    cudaSharedMemBankSizeFourByte  = 1,
    cudaSharedMemBankSizeEightByte = 2
};




enum  cudaComputeMode
{
    cudaComputeModeDefault          = 0,  
    cudaComputeModeExclusive        = 1,  
    cudaComputeModeProhibited       = 2,  
    cudaComputeModeExclusiveProcess = 3   
};




enum  cudaLimit
{
    cudaLimitStackSize                    = 0x00, 
    cudaLimitPrintfFifoSize               = 0x01, 
    cudaLimitMallocHeapSize               = 0x02, 
    cudaLimitDevRuntimeSyncDepth          = 0x03, 
    cudaLimitDevRuntimePendingLaunchCount = 0x04  
};




enum  cudaOutputMode
{
    cudaKeyValuePair    = 0x00, 
    cudaCSV             = 0x01  
};




enum  cudaDeviceAttr
{
    cudaDevAttrMaxThreadsPerBlock             = 1,  
    cudaDevAttrMaxBlockDimX                   = 2,  
    cudaDevAttrMaxBlockDimY                   = 3,  
    cudaDevAttrMaxBlockDimZ                   = 4,  
    cudaDevAttrMaxGridDimX                    = 5,  
    cudaDevAttrMaxGridDimY                    = 6,  
    cudaDevAttrMaxGridDimZ                    = 7,  
    cudaDevAttrMaxSharedMemoryPerBlock        = 8,  
    cudaDevAttrTotalConstantMemory            = 9,  
    cudaDevAttrWarpSize                       = 10, 
    cudaDevAttrMaxPitch                       = 11, 
    cudaDevAttrMaxRegistersPerBlock           = 12, 
    cudaDevAttrClockRate                      = 13, 
    cudaDevAttrTextureAlignment               = 14, 
    cudaDevAttrGpuOverlap                     = 15, 
    cudaDevAttrMultiProcessorCount            = 16, 
    cudaDevAttrKernelExecTimeout              = 17, 
    cudaDevAttrIntegrated                     = 18, 
    cudaDevAttrCanMapHostMemory               = 19, 
    cudaDevAttrComputeMode                    = 20, 
    cudaDevAttrMaxTexture1DWidth              = 21, 
    cudaDevAttrMaxTexture2DWidth              = 22, 
    cudaDevAttrMaxTexture2DHeight             = 23, 
    cudaDevAttrMaxTexture3DWidth              = 24, 
    cudaDevAttrMaxTexture3DHeight             = 25, 
    cudaDevAttrMaxTexture3DDepth              = 26, 
    cudaDevAttrMaxTexture2DLayeredWidth       = 27, 
    cudaDevAttrMaxTexture2DLayeredHeight      = 28, 
    cudaDevAttrMaxTexture2DLayeredLayers      = 29, 
    cudaDevAttrSurfaceAlignment               = 30, 
    cudaDevAttrConcurrentKernels              = 31, 
    cudaDevAttrEccEnabled                     = 32, 
    cudaDevAttrPciBusId                       = 33, 
    cudaDevAttrPciDeviceId                    = 34, 
    cudaDevAttrTccDriver                      = 35, 
    cudaDevAttrMemoryClockRate                = 36, 
    cudaDevAttrGlobalMemoryBusWidth           = 37, 
    cudaDevAttrL2CacheSize                    = 38, 
    cudaDevAttrMaxThreadsPerMultiProcessor    = 39, 
    cudaDevAttrAsyncEngineCount               = 40, 
    cudaDevAttrUnifiedAddressing              = 41,     
    cudaDevAttrMaxTexture1DLayeredWidth       = 42, 
    cudaDevAttrMaxTexture1DLayeredLayers      = 43, 
    cudaDevAttrMaxTexture2DGatherWidth        = 45, 
    cudaDevAttrMaxTexture2DGatherHeight       = 46, 
    cudaDevAttrMaxTexture3DWidthAlt           = 47, 
    cudaDevAttrMaxTexture3DHeightAlt          = 48, 
    cudaDevAttrMaxTexture3DDepthAlt           = 49, 
    cudaDevAttrPciDomainId                    = 50, 
    cudaDevAttrTexturePitchAlignment          = 51, 
    cudaDevAttrMaxTextureCubemapWidth         = 52, 
    cudaDevAttrMaxTextureCubemapLayeredWidth  = 53, 
    cudaDevAttrMaxTextureCubemapLayeredLayers = 54, 
    cudaDevAttrMaxSurface1DWidth              = 55, 
    cudaDevAttrMaxSurface2DWidth              = 56, 
    cudaDevAttrMaxSurface2DHeight             = 57, 
    cudaDevAttrMaxSurface3DWidth              = 58, 
    cudaDevAttrMaxSurface3DHeight             = 59, 
    cudaDevAttrMaxSurface3DDepth              = 60, 
    cudaDevAttrMaxSurface1DLayeredWidth       = 61, 
    cudaDevAttrMaxSurface1DLayeredLayers      = 62, 
    cudaDevAttrMaxSurface2DLayeredWidth       = 63, 
    cudaDevAttrMaxSurface2DLayeredHeight      = 64, 
    cudaDevAttrMaxSurface2DLayeredLayers      = 65, 
    cudaDevAttrMaxSurfaceCubemapWidth         = 66, 
    cudaDevAttrMaxSurfaceCubemapLayeredWidth  = 67, 
    cudaDevAttrMaxSurfaceCubemapLayeredLayers = 68, 
    cudaDevAttrMaxTexture1DLinearWidth        = 69, 
    cudaDevAttrMaxTexture2DLinearWidth        = 70, 
    cudaDevAttrMaxTexture2DLinearHeight       = 71, 
    cudaDevAttrMaxTexture2DLinearPitch        = 72, 
    cudaDevAttrMaxTexture2DMipmappedWidth     = 73, 
    cudaDevAttrMaxTexture2DMipmappedHeight    = 74, 
    cudaDevAttrComputeCapabilityMajor         = 75,  
    cudaDevAttrComputeCapabilityMinor         = 76, 
    cudaDevAttrMaxTexture1DMipmappedWidth     = 77, 
    cudaDevAttrStreamPrioritiesSupported      = 78, 
    cudaDevAttrGlobalL1CacheSupported         = 79, 
    cudaDevAttrLocalL1CacheSupported          = 80, 
    cudaDevAttrMaxSharedMemoryPerMultiprocessor = 81, 
    cudaDevAttrMaxRegistersPerMultiprocessor  = 82, 
    cudaDevAttrManagedMemory                  = 83, 
    cudaDevAttrIsMultiGpuBoard                = 84, 
    cudaDevAttrMultiGpuBoardGroupID           = 85  
};




struct  cudaDeviceProp
{
    char   name[256];                  
    size_t totalGlobalMem;             
    size_t sharedMemPerBlock;          
    int    regsPerBlock;               
    int    warpSize;                   
    size_t memPitch;                   
    int    maxThreadsPerBlock;         
    int    maxThreadsDim[3];           
    int    maxGridSize[3];             
    int    clockRate;                  
    size_t totalConstMem;              
    int    major;                      
    int    minor;                      
    size_t textureAlignment;           
    size_t texturePitchAlignment;      
    int    deviceOverlap;              
    int    multiProcessorCount;        
    int    kernelExecTimeoutEnabled;   
    int    integrated;                 
    int    canMapHostMemory;           
    int    computeMode;                
    int    maxTexture1D;               
    int    maxTexture1DMipmap;         
    int    maxTexture1DLinear;         
    int    maxTexture2D[2];            
    int    maxTexture2DMipmap[2];      
    int    maxTexture2DLinear[3];      
    int    maxTexture2DGather[2];      
    int    maxTexture3D[3];            
    int    maxTexture3DAlt[3];         
    int    maxTextureCubemap;          
    int    maxTexture1DLayered[2];     
    int    maxTexture2DLayered[3];     
    int    maxTextureCubemapLayered[2];
    int    maxSurface1D;               
    int    maxSurface2D[2];            
    int    maxSurface3D[3];            
    int    maxSurface1DLayered[2];     
    int    maxSurface2DLayered[3];     
    int    maxSurfaceCubemap;          
    int    maxSurfaceCubemapLayered[2];
    size_t surfaceAlignment;           
    int    concurrentKernels;          
    int    ECCEnabled;                 
    int    pciBusID;                   
    int    pciDeviceID;                
    int    pciDomainID;                
    int    tccDriver;                  
    int    asyncEngineCount;           
    int    unifiedAddressing;          
    int    memoryClockRate;            
    int    memoryBusWidth;             
    int    l2CacheSize;                
    int    maxThreadsPerMultiProcessor;
    int    streamPrioritiesSupported;  
    int    globalL1CacheSupported;     
    int    localL1CacheSupported;      
    size_t sharedMemPerMultiprocessor; 
    int    regsPerMultiprocessor;      
    int    managedMemory;              
    int    isMultiGpuBoard;            
    int    multiGpuBoardGroupID;       
};











































































typedef  struct  cudaIpcEventHandle_st
{
    char reserved[64];
}cudaIpcEventHandle_t;




typedef  struct  cudaIpcMemHandle_st 
{
    char reserved[64];
}cudaIpcMemHandle_t;










typedef  enum cudaError cudaError_t;




typedef  struct CUstream_st *cudaStream_t;




typedef  struct CUevent_st *cudaEvent_t;




typedef  struct cudaGraphicsResource *cudaGraphicsResource_t;




typedef  struct CUuuid_st cudaUUID_t;




typedef  enum cudaOutputMode cudaOutputMode_t;


 

#line 1450 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"

#line 60 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\builtin_types.h"

#line 62 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\builtin_types.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_types.h"


























































#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"








































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 1450 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"

#line 60 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_types.h"
























enum  cudaSurfaceBoundaryMode
{
    cudaBoundaryModeZero  = 0,    
    cudaBoundaryModeClamp = 1,    
    cudaBoundaryModeTrap  = 2     
};




enum   cudaSurfaceFormatMode
{
    cudaFormatModeForced = 0,     
    cudaFormatModeAuto = 1        
};




struct  surfaceReference
{
    


    struct cudaChannelFormatDesc channelDesc;
};




typedef  unsigned long long cudaSurfaceObject_t;


 

#line 120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_types.h"
#line 63 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\builtin_types.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_types.h"


























































#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"








































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 1450 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"

#line 60 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_types.h"
























enum  cudaTextureAddressMode
{
    cudaAddressModeWrap   = 0,    
    cudaAddressModeClamp  = 1,    
    cudaAddressModeMirror = 2,    
    cudaAddressModeBorder = 3     
};




enum  cudaTextureFilterMode
{
    cudaFilterModePoint  = 0,     
    cudaFilterModeLinear = 1      
};




enum  cudaTextureReadMode
{
    cudaReadModeElementType     = 0,  
    cudaReadModeNormalizedFloat = 1   
};




struct  textureReference
{
    


    int                          normalized;
    


    enum cudaTextureFilterMode   filterMode;
    


    enum cudaTextureAddressMode  addressMode[3];
    


    struct cudaChannelFormatDesc channelDesc;
    


    int                          sRGB;
    


    unsigned int                 maxAnisotropy;
    


    enum cudaTextureFilterMode   mipmapFilterMode;
    


    float                        mipmapLevelBias;
    


    float                        minMipmapLevelClamp;
    


    float                        maxMipmapLevelClamp;
    int                          __cudaReserved[15];
};




struct  cudaTextureDesc
{
    


    enum cudaTextureAddressMode addressMode[3];
    


    enum cudaTextureFilterMode  filterMode;
    


    enum cudaTextureReadMode    readMode;
    


    int                         sRGB;
    


    int                         normalizedCoords;
    


    unsigned int                maxAnisotropy;
    


    enum cudaTextureFilterMode  mipmapFilterMode;
    


    float                       mipmapLevelBias;
    


    float                       minMipmapLevelClamp;
    


    float                       maxMipmapLevelClamp;
};




typedef  unsigned long long cudaTextureObject_t;


 

#line 214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_types.h"
#line 64 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\builtin_types.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"




























































#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\builtin_types.h"























































#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_types.h"




































































#line 70 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_types.h"
#line 57 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\builtin_types.h"


#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"








































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 1450 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"

#line 60 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\builtin_types.h"

#line 62 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\builtin_types.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_types.h"






















































































































#line 120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_types.h"
#line 63 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\builtin_types.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_types.h"




















































































































































































































#line 214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_types.h"
#line 64 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\builtin_types.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"














































































































































































































































































































































































































































#line 432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 65 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\builtin_types.h"
#line 62 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"

#line 64 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\host_defines.h"










































































































































































































































#line 236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\host_defines.h"
#line 65 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"






















#line 89 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"







#line 97 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"

struct  char1
{
    signed char x;
};

struct  uchar1
{
    unsigned char x;
};


struct  __declspec(align(2)) char2
{
    signed char x, y;
};

struct  __declspec(align(2)) uchar2
{
    unsigned char x, y;
};

struct  char3
{
    signed char x, y, z;
};

struct  uchar3
{
    unsigned char x, y, z;
};

struct  __declspec(align(4)) char4
{
    signed char x, y, z, w;
};

struct  __declspec(align(4)) uchar4
{
    unsigned char x, y, z, w;
};

struct  short1
{
    short x;
};

struct  ushort1
{
    unsigned short x;
};

struct  __declspec(align(4)) short2
{
    short x, y;
};

struct  __declspec(align(4)) ushort2
{
    unsigned short x, y;
};

struct  short3
{
    short x, y, z;
};

struct  ushort3
{
    unsigned short x, y, z;
};

struct  __declspec(align(8)) short4 { short x; short y; short z; short w; };
struct  __declspec(align(8)) ushort4 { unsigned short x; unsigned short y; unsigned short z; unsigned short w; };

struct  int1
{
    int x;
};

struct  uint1
{
    unsigned int x;
};

struct  __declspec(align(8)) int2 { int x; int y; };
struct  __declspec(align(8)) uint2 { unsigned int x; unsigned int y; };

struct  int3
{
    int x, y, z;
};

struct  uint3
{
    unsigned int x, y, z;
};

struct  __declspec(align(16)) int4
{
    int x, y, z, w;
};

struct  __declspec(align(16)) uint4
{
    unsigned int x, y, z, w;
};

struct  long1
{
    long int x;
};

struct  ulong1
{
    unsigned long x;
};


struct  __declspec(align(8)) long2 { long int x; long int y; };
struct  __declspec(align(8)) ulong2 { unsigned long int x; unsigned long int y; };












#line 231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"

struct  long3
{
    long int x, y, z;
};

struct  ulong3
{
    unsigned long int x, y, z;
};

struct  __declspec(align(16)) long4
{
    long int x, y, z, w;
};

struct  __declspec(align(16)) ulong4
{
    unsigned long int x, y, z, w;
};

struct  float1
{
    float x;
};















#line 273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"

struct  __declspec(align(8)) float2 { float x; float y; };

#line 277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"


struct  float3
{
    float x, y, z;
};

struct  __declspec(align(16)) float4
{
    float x, y, z, w;
};

struct  longlong1
{
    long long int x;
};

struct  ulonglong1
{
    unsigned long long int x;
};

struct  __declspec(align(16)) longlong2
{
    long long int x, y;
};

struct  __declspec(align(16)) ulonglong2
{
    unsigned long long int x, y;
};

struct  longlong3
{
    long long int x, y, z;
};

struct  ulonglong3
{
    unsigned long long int x, y, z;
};

struct  __declspec(align(16)) longlong4
{
    long long int x, y, z ,w;
};

struct  __declspec(align(16)) ulonglong4
{
    unsigned long long int x, y, z, w;
};

struct  double1
{
    double x;
};

struct  __declspec(align(16)) double2
{
    double x, y;
};

struct  double3
{
    double x, y, z;
};

struct  __declspec(align(16)) double4
{
    double x, y, z, w;
};





#line 355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"







typedef  struct char1 char1;
typedef  struct uchar1 uchar1;
typedef  struct char2 char2;
typedef  struct uchar2 uchar2;
typedef  struct char3 char3;
typedef  struct uchar3 uchar3;
typedef  struct char4 char4;
typedef  struct uchar4 uchar4;
typedef  struct short1 short1;
typedef  struct ushort1 ushort1;
typedef  struct short2 short2;
typedef  struct ushort2 ushort2;
typedef  struct short3 short3;
typedef  struct ushort3 ushort3;
typedef  struct short4 short4;
typedef  struct ushort4 ushort4;
typedef  struct int1 int1;
typedef  struct uint1 uint1;
typedef  struct int2 int2;
typedef  struct uint2 uint2;
typedef  struct int3 int3;
typedef  struct uint3 uint3;
typedef  struct int4 int4;
typedef  struct uint4 uint4;
typedef  struct long1 long1;
typedef  struct ulong1 ulong1;
typedef  struct long2 long2;
typedef  struct ulong2 ulong2;
typedef  struct long3 long3;
typedef  struct ulong3 ulong3;
typedef  struct long4 long4;
typedef  struct ulong4 ulong4;
typedef  struct float1 float1;
typedef  struct float2 float2;
typedef  struct float3 float3;
typedef  struct float4 float4;
typedef  struct longlong1 longlong1;
typedef  struct ulonglong1 ulonglong1;
typedef  struct longlong2 longlong2;
typedef  struct ulonglong2 ulonglong2;
typedef  struct longlong3 longlong3;
typedef  struct ulonglong3 ulonglong3;
typedef  struct longlong4 longlong4;
typedef  struct ulonglong4 ulonglong4;
typedef  struct double1 double1;
typedef  struct double2 double2;
typedef  struct double3 double3;
typedef  struct double4 double4;







struct  dim3
{
    unsigned int x, y, z;

      dim3(unsigned int vx = 1, unsigned int vy = 1, unsigned int vz = 1) : x(vx), y(vy), z(vz) {}
      dim3(uint3 v) : x(v.x), y(v.y), z(v.z) {}
      operator uint3(void) { uint3 t; t.x = x; t.y = y; t.z = z; return t; }
#line 425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
};

typedef  struct dim3 dim3;



#line 432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 65 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\builtin_types.h"
#line 70 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\crt/host_runtime.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\crt\\storage_class.h"










































#line 44 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\crt\\storage_class.h"






#line 51 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\crt\\storage_class.h"



#line 55 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\crt\\storage_class.h"



#line 59 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\crt\\storage_class.h"



#line 63 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\crt\\storage_class.h"



#line 67 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\crt\\storage_class.h"



#line 71 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\crt\\storage_class.h"



#line 75 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\crt\\storage_class.h"



#line 79 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\crt\\storage_class.h"



#line 83 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\crt\\storage_class.h"



#line 87 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\crt\\storage_class.h"



#line 91 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\crt\\storage_class.h"



#line 95 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\crt\\storage_class.h"



#line 99 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\crt\\storage_class.h"



#line 103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\crt\\storage_class.h"



#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\crt\\storage_class.h"



#line 111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\crt\\storage_class.h"



#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\crt\\storage_class.h"



#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\crt\\storage_class.h"



#line 123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\crt\\storage_class.h"



#line 127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\crt\\storage_class.h"



#line 131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\crt\\storage_class.h"



#line 135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\crt\\storage_class.h"



#line 139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\crt\\storage_class.h"



#line 143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\crt\\storage_class.h"



#line 147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\crt\\storage_class.h"

#line 149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\crt\\storage_class.h"
#line 71 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\crt/host_runtime.h"







































































































































































































#line 271 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\crt/host_runtime.h"
#line 496 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
#line 503 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
extern "C" { typedef size_t rsize_t; }
#line 510 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
extern "C" { typedef __int64 intptr_t; }
#line 528 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
extern "C" { typedef __int64 ptrdiff_t; }
#line 541 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
extern "C" { typedef unsigned short wint_t; }
#line 542 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
extern "C" { typedef unsigned short wctype_t; }
#line 563 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
extern "C" { typedef int errno_t; }
#line 567 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
extern "C" { typedef long __time32_t; }
#line 572 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
extern "C" { typedef __int64 __time64_t; }
#line 580 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
extern "C" { typedef __time64_t time_t; }
#line 635 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
extern "C" { __declspec(dllimport) void __cdecl _invalid_parameter(const __wchar_t *, const __wchar_t *, const __wchar_t *, unsigned, uintptr_t); } 
#line 642 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
extern "C" { 
#line 641 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
__declspec(dllimport) __declspec(noreturn) void __cdecl 
#line 642 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
_invoke_watson(const __wchar_t *, const __wchar_t *, const __wchar_t *, unsigned, uintptr_t); } 
#line 2072 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
struct threadlocaleinfostruct; 
#line 2073 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
struct threadmbcinfostruct; 
#line 2074 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
extern "C" { typedef threadlocaleinfostruct *pthreadlocinfo; }
#line 2075 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
extern "C" { typedef threadmbcinfostruct *pthreadmbcinfo; }
#line 2076 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
struct __lc_time_data; 
#line 2082 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
extern "C" { typedef 
#line 2078 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
struct localeinfo_struct { 
#line 2080 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
pthreadlocinfo locinfo; 
#line 2081 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
pthreadmbcinfo mbcinfo; 
#line 2082 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
} _locale_tstruct, *_locale_t; }
#line 2090 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
extern "C" { typedef 
#line 2085 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
struct localerefcount { 
#line 2086 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
char *locale; 
#line 2087 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
__wchar_t *wlocale; 
#line 2088 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
int *refcount; 
#line 2089 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
int *wrefcount; 
#line 2090 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
} locrefcount; }
#line 2111 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
extern "C" { typedef 
#line 2092 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
struct threadlocaleinfostruct { 
#line 2093 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
int refcount; 
#line 2094 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
unsigned lc_codepage; 
#line 2095 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
unsigned lc_collate_cp; 
#line 2096 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
unsigned lc_time_cp; 
#line 2097 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
locrefcount lc_category[6]; 
#line 2098 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
int lc_clike; 
#line 2099 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
int mb_cur_max; 
#line 2100 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
int *lconv_intl_refcount; 
#line 2101 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
int *lconv_num_refcount; 
#line 2102 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
int *lconv_mon_refcount; 
#line 2103 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
struct lconv *lconv; 
#line 2104 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
int *ctype1_refcount; 
#line 2105 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
unsigned short *ctype1; 
#line 2106 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
const unsigned short *pctype; 
#line 2107 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
const unsigned char *pclmap; 
#line 2108 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
const unsigned char *pcumap; 
#line 2109 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
__lc_time_data *lc_time_curr; 
#line 2110 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
__wchar_t *locale_name[6]; 
#line 2111 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
} threadlocinfo; }
#line 2148 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\crtdefs.h"
#pragma pack ( pop )
#line 61 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_types.h"













#line 75 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_types.h"
#line 36 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stddef.h"
namespace std { typedef decltype((__nullptr)) nullptr_t; }
#line 37 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stddef.h"
using std::nullptr_t;
#line 43 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stddef.h"
extern "C" { __declspec(dllimport) extern int *__cdecl _errno(); } 
#line 46 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stddef.h"
extern "C" { errno_t __cdecl _set_errno(int _Value); } 
#line 47 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stddef.h"
extern "C" { errno_t __cdecl _get_errno(int * _Value); } 
#line 69 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stddef.h"
extern "C" { __declspec(dllimport) extern unsigned long __cdecl __threadid(); } 
#line 71 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stddef.h"
extern "C" { __declspec(dllimport) extern uintptr_t __cdecl __threadhandle(); } 
#line 150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"





































































































































































#line 316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"
#line 740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"













#line 754 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"
#line 751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"















#line 767 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"
#line 763 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"
typedef struct cudaArray *cudaArray_t; 
#line 768 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"
typedef const cudaArray *cudaArray_const_t; 
#line 770 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"
struct cudaArray; 
#line 775 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"
typedef struct cudaMipmappedArray *cudaMipmappedArray_t; 
#line 780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"
typedef const cudaMipmappedArray *cudaMipmappedArray_const_t; 
#line 782 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"
struct cudaMipmappedArray; 
#line 787 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"









#line 797 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"
#line 796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"















#line 812 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"
#line 810 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"













#line 824 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"
#line 823 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"











#line 835 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"
#line 835 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"











#line 847 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"
#line 845 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"





















#line 867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"
#line 862 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"























#line 886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"
#line 880 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"
struct cudaGraphicsResource; 
#line 885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"















#line 901 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"
#line 897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"











#line 909 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"
#line 907 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"

















#line 925 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"
#line 920 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"













#line 934 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"
#line 931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"











































































#line 1007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"
#line 973 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"















































#line 1021 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"
#line 1001 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"





















#line 1023 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"
#line 1016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"















#line 1032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"
#line 1056 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"





















#line 1078 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"
#line 1112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"













#line 1126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"
#line 1124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"











#line 1136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"
#line 1134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"













#line 1148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"
#line 1145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"















#line 1161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"
#line 1157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"









#line 1167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"
#line 1166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"













































































































































































#line 1340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"
#line 1257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"

































































































































#line 1387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"
#line 1400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"








#line 1409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"
#line 1408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"








#line 1417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"
#line 1419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"




#line 1424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"
#line 1424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"




#line 1429 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"
#line 1429 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"




#line 1434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"
#line 1434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"




#line 1439 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"
#line 1439 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"




#line 1444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"
#line 1444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"




#line 1449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_types.h"
#line 84 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_types.h"











#line 96 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_types.h"
#line 94 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_types.h"









#line 104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_types.h"
#line 103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_types.h"







#line 111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_types.h"
#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_types.h"




#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_types.h"
#line 84 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_types.h"













#line 98 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_types.h"
#line 95 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_types.h"









#line 105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_types.h"
#line 104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_types.h"









#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_types.h"
#line 113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_types.h"



























#line 141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_types.h"
#line 161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_types.h"

























#line 187 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_types.h"
#line 208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_types.h"




#line 213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_types.h"
#line 98 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"







#line 106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"







#line 111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"







#line 117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"







#line 122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"







#line 127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"







#line 132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"







#line 137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"







#line 142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"







#line 147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"







#line 152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"







#line 157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"







#line 162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"







#line 167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"







#line 172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"



#line 173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"



#line 174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"







#line 180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"







#line 185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"



#line 186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"



#line 187 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"







#line 193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"







#line 198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"







#line 203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"







#line 208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"







#line 213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"







#line 218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"



#line 220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"



#line 221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"







#line 240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"







#line 245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"







#line 250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"







#line 255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"







#line 260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"



#line 278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"







#line 287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"







#line 292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"







#line 297 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"







#line 302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"







#line 307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"







#line 312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"







#line 317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"







#line 322 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 319 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"







#line 327 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"







#line 332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"







#line 337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"







#line 342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"







#line 347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"







#line 352 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"




#line 367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"




#line 368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"




#line 369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"




#line 370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"




#line 371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"




#line 372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"




#line 373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"




#line 374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"




#line 375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"




#line 376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"




#line 377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"




#line 378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"




#line 379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"




#line 380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"




#line 381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"




#line 382 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"




#line 383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"




#line 384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"




#line 385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"




#line 386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 382 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"




#line 387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"




#line 388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"




#line 389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"




#line 390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"




#line 391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"




#line 392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"




#line 393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"




#line 394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"




#line 395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"




#line 396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"




#line 397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"




#line 398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"




#line 399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"




#line 400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"




#line 401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"




#line 402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"




#line 403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"




#line 404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"




#line 405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"




#line 406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"




#line 407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"




#line 408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"




#line 409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"




#line 410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"




#line 411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"




#line 412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"




#line 413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"




#line 414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"







#line 425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"




#line 432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_types.h"
#line 106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceGetAttribute(int * value, cudaDeviceAttr attr, int device); } 
#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceGetLimit(size_t * pValue, cudaLimit limit); } 
#line 108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceGetCacheConfig(cudaFuncCache * pCacheConfig); } 
#line 109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceGetSharedMemConfig(cudaSharedMemConfig * pConfig); } 
#line 110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceSynchronize(); } 
#line 111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetLastError(); } 
#line 112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaPeekAtLastError(); } 
#line 113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_device_runtime_api.h"
extern "C" { extern const char *__stdcall cudaGetErrorString(cudaError_t error); } 
#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_device_runtime_api.h"
extern "C" { extern const char *__stdcall cudaGetErrorName(cudaError_t error); } 
#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetDeviceCount(int * count); } 
#line 116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetDevice(int * device); } 
#line 117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamCreateWithFlags(cudaStream_t * pStream, unsigned flags); } 
#line 118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamDestroy(cudaStream_t stream); } 
#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamWaitEvent(cudaStream_t stream, cudaEvent_t event, unsigned flags); } 
#line 120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamWaitEvent_ptsz(cudaStream_t stream, cudaEvent_t event, unsigned flags); } 
#line 121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaEventCreateWithFlags(cudaEvent_t * event, unsigned flags); } 
#line 122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaEventRecord(cudaEvent_t event, cudaStream_t stream); } 
#line 123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaEventRecord_ptsz(cudaEvent_t event, cudaStream_t stream); } 
#line 124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaEventDestroy(cudaEvent_t event); } 
#line 125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaFuncGetAttributes(cudaFuncAttributes * attr, const void * func); } 
#line 126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaFree(void * devPtr); } 
#line 127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMalloc(void ** devPtr, size_t size); } 
#line 128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyAsync(void * dst, const void * src, size_t count, cudaMemcpyKind kind, cudaStream_t stream); } 
#line 129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyAsync_ptsz(void * dst, const void * src, size_t count, cudaMemcpyKind kind, cudaStream_t stream); } 
#line 130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy2DAsync(void * dst, size_t dpitch, const void * src, size_t spitch, size_t width, size_t height, cudaMemcpyKind kind, cudaStream_t stream); } 
#line 131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy2DAsync_ptsz(void * dst, size_t dpitch, const void * src, size_t spitch, size_t width, size_t height, cudaMemcpyKind kind, cudaStream_t stream); } 
#line 132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy3DAsync(const cudaMemcpy3DParms * p, cudaStream_t stream); } 
#line 133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy3DAsync_ptsz(const cudaMemcpy3DParms * p, cudaStream_t stream); } 
#line 134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemsetAsync(void * devPtr, int value, size_t count, cudaStream_t stream); } 
#line 135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemsetAsync_ptsz(void * devPtr, int value, size_t count, cudaStream_t stream); } 
#line 136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemset2DAsync(void * devPtr, size_t pitch, int value, size_t width, size_t height, cudaStream_t stream); } 
#line 137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemset2DAsync_ptsz(void * devPtr, size_t pitch, int value, size_t width, size_t height, cudaStream_t stream); } 
#line 138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemset3DAsync(cudaPitchedPtr pitchedDevPtr, int value, cudaExtent extent, cudaStream_t stream); } 
#line 139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemset3DAsync_ptsz(cudaPitchedPtr pitchedDevPtr, int value, cudaExtent extent, cudaStream_t stream); } 
#line 140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaRuntimeGetVersion(int * runtimeVersion); } 
#line 161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_device_runtime_api.h"
extern "C" { extern void *__stdcall cudaGetParameterBuffer(size_t alignment, size_t size); } 
#line 189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_device_runtime_api.h"
extern "C" { extern void *__stdcall cudaGetParameterBufferV2(void * func, dim3 gridDimension, dim3 blockDimension, unsigned sharedMemSize); } 
#line 190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaLaunchDevice_ptsz(void * func, void * parameterBuffer, dim3 gridDimension, dim3 blockDimension, unsigned sharedMemSize, cudaStream_t stream); } 
#line 191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaLaunchDeviceV2_ptsz(void * parameterBuffer, cudaStream_t stream); } 
#line 209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaLaunchDevice(void * func, void * parameterBuffer, dim3 gridDimension, dim3 blockDimension, unsigned sharedMemSize, cudaStream_t stream); } 
#line 210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaLaunchDeviceV2(void * parameterBuffer, cudaStream_t stream); } 
#line 213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaOccupancyMaxActiveBlocksPerMultiprocessor(int * numBlocks, const void * func, int blockSize, size_t dynamicSmemSize); } 
#line 214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int * numBlocks, const void * func, int blockSize, size_t dynamicSmemSize, unsigned flags); } 
#line 218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_device_runtime_api.h"
template< class T> static __inline cudaError_t cudaMalloc(T ** devPtr, size_t size); 
#line 219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_device_runtime_api.h"
template< class T> static __inline cudaError_t cudaFuncGetAttributes(cudaFuncAttributes * attr, T * entry); 
#line 220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_device_runtime_api.h"
template< class T> static __inline cudaError_t cudaOccupancyMaxActiveBlocksPerMultiprocessor(int * numBlocks, T func, int blockSize, size_t dynamicSmemSize); 
#line 221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_device_runtime_api.h"
template< class T> static __inline cudaError_t cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int * numBlocks, T func, int blockSize, size_t dynamicSmemSize, unsigned flags); 
#line 257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceReset(); } 
#line 274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceSynchronize(); } 
#line 349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceSetLimit(cudaLimit limit, size_t value); } 
#line 378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceGetLimit(size_t * pValue, cudaLimit limit); } 
#line 409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceGetCacheConfig(cudaFuncCache * pCacheConfig); } 
#line 444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceGetStreamPriorityRange(int * leastPriority, int * greatestPriority); } 
#line 486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceSetCacheConfig(cudaFuncCache cacheConfig); } 
#line 515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceGetSharedMemConfig(cudaSharedMemConfig * pConfig); } 
#line 557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceSetSharedMemConfig(cudaSharedMemConfig config); } 
#line 580 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceGetByPCIBusId(int * device, const char * pciBusId); } 
#line 607 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceGetPCIBusId(char * pciBusId, int len, int device); } 
#line 649 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaIpcGetEventHandle(cudaIpcEventHandle_t * handle, cudaEvent_t event); } 
#line 684 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaIpcOpenEventHandle(cudaEvent_t * event, cudaIpcEventHandle_t handle); } 
#line 722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaIpcGetMemHandle(cudaIpcMemHandle_t * handle, void * devPtr); } 
#line 772 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaIpcOpenMemHandle(void ** devPtr, cudaIpcMemHandle_t handle, unsigned flags); } 
#line 802 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaIpcCloseMemHandle(void * devPtr); } 
#line 842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaThreadExit(); } 
#line 866 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaThreadSynchronize(); } 
#line 913 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaThreadSetLimit(cudaLimit limit, size_t value); } 
#line 944 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaThreadGetLimit(size_t * pValue, cudaLimit limit); } 
#line 979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaThreadGetCacheConfig(cudaFuncCache * pCacheConfig); } 
#line 1025 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaThreadSetCacheConfig(cudaFuncCache cacheConfig); } 
#line 1079 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetLastError(); } 
#line 1120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaPeekAtLastError(); } 
#line 1135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern const char *__stdcall cudaGetErrorName(cudaError_t error); } 
#line 1150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern const char *__stdcall cudaGetErrorString(cudaError_t error); } 
#line 1180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetDeviceCount(int * count); } 
#line 1416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetDeviceProperties(cudaDeviceProp * prop, int device); } 
#line 1576 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceGetAttribute(int * value, cudaDeviceAttr attr, int device); } 
#line 1595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaChooseDevice(int * device, const cudaDeviceProp * prop); } 
#line 1629 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaSetDevice(int device); } 
#line 1646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetDevice(int * device); } 
#line 1675 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaSetValidDevices(int * device_arr, int len); } 
#line 1737 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaSetDeviceFlags(unsigned flags); } 
#line 1778 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetDeviceFlags(unsigned * flags); } 
#line 1815 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamCreate(cudaStream_t * pStream); } 
#line 1844 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamCreateWithFlags(cudaStream_t * pStream, unsigned flags); } 
#line 1887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamCreateWithPriority(cudaStream_t * pStream, unsigned flags, int priority); } 
#line 1911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamGetPriority(cudaStream_t hStream, int * priority); } 
#line 1932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamGetFlags(cudaStream_t hStream, unsigned * flags); } 
#line 1953 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamDestroy(cudaStream_t stream); } 
#line 1985 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamWaitEvent(cudaStream_t stream, cudaEvent_t event, unsigned flags); } 
#line 1999 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { typedef void (__stdcall *cudaStreamCallback_t)(cudaStream_t stream, cudaError_t status, void * userData); }
#line 2056 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamAddCallback(cudaStream_t stream, cudaStreamCallback_t callback, void * userData, unsigned flags); } 
#line 2076 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamSynchronize(cudaStream_t stream); } 
#line 2097 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamQuery(cudaStream_t stream); } 
#line 2163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamAttachMemAsync(cudaStream_t stream, void * devPtr, size_t length, unsigned flags); } 
#line 2199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaEventCreate(cudaEvent_t * event); } 
#line 2233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaEventCreateWithFlags(cudaEvent_t * event, unsigned flags); } 
#line 2264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaEventRecord(cudaEvent_t event, cudaStream_t stream = 0); } 
#line 2296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaEventQuery(cudaEvent_t event); } 
#line 2328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaEventSynchronize(cudaEvent_t event); } 
#line 2353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaEventDestroy(cudaEvent_t event); } 
#line 2394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaEventElapsedTime(float * ms, cudaEvent_t start, cudaEvent_t end); } 
#line 2450 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaLaunchKernel(const void * func, dim3 gridDim, dim3 blockDim, void ** args, size_t sharedMem, cudaStream_t stream); } 
#line 2499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaFuncSetCacheConfig(const void * func, cudaFuncCache cacheConfig); } 
#line 2550 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaFuncSetSharedMemConfig(const void * func, cudaSharedMemConfig config); } 
#line 2583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaFuncGetAttributes(cudaFuncAttributes * attr, const void * func); } 
#line 2604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaSetDoubleForDevice(double * d); } 
#line 2625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaSetDoubleForHost(double * d); } 
#line 2681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaOccupancyMaxActiveBlocksPerMultiprocessor(int * numBlocks, const void * func, int blockSize, size_t dynamicSMemSize); } 
#line 2725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int * numBlocks, const void * func, int blockSize, size_t dynamicSMemSize, unsigned flags); } 
#line 2776 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaConfigureCall(dim3 gridDim, dim3 blockDim, size_t sharedMem = 0, cudaStream_t stream = 0); } 
#line 2805 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaSetupArgument(const void * arg, size_t size, size_t offset); } 
#line 2842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaLaunch(const void * func); } 
#line 2931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMallocManaged(void ** devPtr, size_t size, unsigned flags); } 
#line 2957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMalloc(void ** devPtr, size_t size); } 
#line 2986 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMallocHost(void ** ptr, size_t size); } 
#line 3025 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMallocPitch(void ** devPtr, size_t * pitch, size_t width, size_t height); } 
#line 3067 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMallocArray(cudaArray_t * array, const cudaChannelFormatDesc * desc, size_t width, size_t height = 0, unsigned flags = 0); } 
#line 3094 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaFree(void * devPtr); } 
#line 3114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaFreeHost(void * ptr); } 
#line 3136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaFreeArray(cudaArray_t array); } 
#line 3158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaFreeMipmappedArray(cudaMipmappedArray_t mipmappedArray); } 
#line 3217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaHostAlloc(void ** pHost, size_t size, unsigned flags); } 
#line 3274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaHostRegister(void * ptr, size_t size, unsigned flags); } 
#line 3293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaHostUnregister(void * ptr); } 
#line 3320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaHostGetDevicePointer(void ** pDevice, void * pHost, unsigned flags); } 
#line 3339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaHostGetFlags(unsigned * pFlags, void * pHost); } 
#line 3374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMalloc3D(cudaPitchedPtr * pitchedDevPtr, cudaExtent extent); } 
#line 3509 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMalloc3DArray(cudaArray_t * array, const cudaChannelFormatDesc * desc, cudaExtent extent, unsigned flags = 0); } 
#line 3630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMallocMipmappedArray(cudaMipmappedArray_t * mipmappedArray, const cudaChannelFormatDesc * desc, cudaExtent extent, unsigned numLevels, unsigned flags = 0); } 
#line 3656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetMipmappedArrayLevel(cudaArray_t * levelArray, cudaMipmappedArray_const_t mipmappedArray, unsigned level); } 
#line 3753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy3D(const cudaMemcpy3DParms * p); } 
#line 3781 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy3DPeer(const cudaMemcpy3DPeerParms * p); } 
#line 3889 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy3DAsync(const cudaMemcpy3DParms * p, cudaStream_t stream = 0); } 
#line 3912 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy3DPeerAsync(const cudaMemcpy3DPeerParms * p, cudaStream_t stream = 0); } 
#line 3931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemGetInfo(size_t * free, size_t * total); } 
#line 3952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaArrayGetInfo(cudaChannelFormatDesc * desc, cudaExtent * extent, unsigned * flags, cudaArray_t array); } 
#line 3987 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy(void * dst, const void * src, size_t count, cudaMemcpyKind kind); } 
#line 4019 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyPeer(void * dst, int dstDevice, const void * src, int srcDevice, size_t count); } 
#line 4053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyToArray(cudaArray_t dst, size_t wOffset, size_t hOffset, const void * src, size_t count, cudaMemcpyKind kind); } 
#line 4087 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyFromArray(void * dst, cudaArray_const_t src, size_t wOffset, size_t hOffset, size_t count, cudaMemcpyKind kind); } 
#line 4122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyArrayToArray(cudaArray_t dst, size_t wOffsetDst, size_t hOffsetDst, cudaArray_const_t src, size_t wOffsetSrc, size_t hOffsetSrc, size_t count, cudaMemcpyKind kind = cudaMemcpyDeviceToDevice); } 
#line 4164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy2D(void * dst, size_t dpitch, const void * src, size_t spitch, size_t width, size_t height, cudaMemcpyKind kind); } 
#line 4206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy2DToArray(cudaArray_t dst, size_t wOffset, size_t hOffset, const void * src, size_t spitch, size_t width, size_t height, cudaMemcpyKind kind); } 
#line 4248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy2DFromArray(void * dst, size_t dpitch, cudaArray_const_t src, size_t wOffset, size_t hOffset, size_t width, size_t height, cudaMemcpyKind kind); } 
#line 4288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy2DArrayToArray(cudaArray_t dst, size_t wOffsetDst, size_t hOffsetDst, cudaArray_const_t src, size_t wOffsetSrc, size_t hOffsetSrc, size_t width, size_t height, cudaMemcpyKind kind = cudaMemcpyDeviceToDevice); } 
#line 4323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyToSymbol(const void * symbol, const void * src, size_t count, size_t offset = 0, cudaMemcpyKind kind = cudaMemcpyHostToDevice); } 
#line 4358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyFromSymbol(void * dst, const void * symbol, size_t count, size_t offset = 0, cudaMemcpyKind kind = cudaMemcpyDeviceToHost); } 
#line 4404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyAsync(void * dst, const void * src, size_t count, cudaMemcpyKind kind, cudaStream_t stream = 0); } 
#line 4436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyPeerAsync(void * dst, int dstDevice, const void * src, int srcDevice, size_t count, cudaStream_t stream = 0); } 
#line 4478 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyToArrayAsync(cudaArray_t dst, size_t wOffset, size_t hOffset, const void * src, size_t count, cudaMemcpyKind kind, cudaStream_t stream = 0); } 
#line 4520 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyFromArrayAsync(void * dst, cudaArray_const_t src, size_t wOffset, size_t hOffset, size_t count, cudaMemcpyKind kind, cudaStream_t stream = 0); } 
#line 4575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy2DAsync(void * dst, size_t dpitch, const void * src, size_t spitch, size_t width, size_t height, cudaMemcpyKind kind, cudaStream_t stream = 0); } 
#line 4626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy2DToArrayAsync(cudaArray_t dst, size_t wOffset, size_t hOffset, const void * src, size_t spitch, size_t width, size_t height, cudaMemcpyKind kind, cudaStream_t stream = 0); } 
#line 4676 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy2DFromArrayAsync(void * dst, size_t dpitch, cudaArray_const_t src, size_t wOffset, size_t hOffset, size_t width, size_t height, cudaMemcpyKind kind, cudaStream_t stream = 0); } 
#line 4719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyToSymbolAsync(const void * symbol, const void * src, size_t count, size_t offset, cudaMemcpyKind kind, cudaStream_t stream = 0); } 
#line 4762 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyFromSymbolAsync(void * dst, const void * symbol, size_t count, size_t offset, cudaMemcpyKind kind, cudaStream_t stream = 0); } 
#line 4788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemset(void * devPtr, int value, size_t count); } 
#line 4818 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemset2D(void * devPtr, size_t pitch, int value, size_t width, size_t height); } 
#line 4861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemset3D(cudaPitchedPtr pitchedDevPtr, int value, cudaExtent extent); } 
#line 4893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemsetAsync(void * devPtr, int value, size_t count, cudaStream_t stream = 0); } 
#line 4930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemset2DAsync(void * devPtr, size_t pitch, int value, size_t width, size_t height, cudaStream_t stream = 0); } 
#line 4980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemset3DAsync(cudaPitchedPtr pitchedDevPtr, int value, cudaExtent extent, cudaStream_t stream = 0); } 
#line 5003 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetSymbolAddress(void ** devPtr, const void * symbol); } 
#line 5025 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetSymbolSize(size_t * size, const void * symbol); } 
#line 5178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaPointerGetAttributes(cudaPointerAttributes * attributes, const void * ptr); } 
#line 5216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceCanAccessPeer(int * canAccessPeer, int device, int peerDevice); } 
#line 5253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceEnablePeerAccess(int peerDevice, unsigned flags); } 
#line 5272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceDisablePeerAccess(int peerDevice); } 
#line 5330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGraphicsUnregisterResource(cudaGraphicsResource_t resource); } 
#line 5362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGraphicsResourceSetMapFlags(cudaGraphicsResource_t resource, unsigned flags); } 
#line 5398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGraphicsMapResources(int count, cudaGraphicsResource_t * resources, cudaStream_t stream = 0); } 
#line 5430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGraphicsUnmapResources(int count, cudaGraphicsResource_t * resources, cudaStream_t stream = 0); } 
#line 5459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGraphicsResourceGetMappedPointer(void ** devPtr, size_t * size, cudaGraphicsResource_t resource); } 
#line 5493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGraphicsSubResourceGetMappedArray(cudaArray_t * array, cudaGraphicsResource_t resource, unsigned arrayIndex, unsigned mipLevel); } 
#line 5518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGraphicsResourceGetMappedMipmappedArray(cudaMipmappedArray_t * mipmappedArray, cudaGraphicsResource_t resource); } 
#line 5558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetChannelDesc(cudaChannelFormatDesc * desc, cudaArray_const_t array); } 
#line 5593 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaChannelFormatDesc __stdcall cudaCreateChannelDesc(int x, int y, int z, int w, cudaChannelFormatKind f); } 
#line 5640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaBindTexture(size_t * offset, const textureReference * texref, const void * devPtr, const cudaChannelFormatDesc * desc, size_t size = 4294967295U); } 
#line 5691 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaBindTexture2D(size_t * offset, const textureReference * texref, const void * devPtr, const cudaChannelFormatDesc * desc, size_t width, size_t height, size_t pitch); } 
#line 5719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaBindTextureToArray(const textureReference * texref, cudaArray_const_t array, const cudaChannelFormatDesc * desc); } 
#line 5747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaBindTextureToMipmappedArray(const textureReference * texref, cudaMipmappedArray_const_t mipmappedArray, const cudaChannelFormatDesc * desc); } 
#line 5768 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaUnbindTexture(const textureReference * texref); } 
#line 5793 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetTextureAlignmentOffset(size_t * offset, const textureReference * texref); } 
#line 5818 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetTextureReference(const textureReference ** texref, const void * symbol); } 
#line 5858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaBindSurfaceToArray(const surfaceReference * surfref, cudaArray_const_t array, const cudaChannelFormatDesc * desc); } 
#line 5877 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetSurfaceReference(const surfaceReference ** surfref, const void * symbol); } 
#line 6094 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaCreateTextureObject(cudaTextureObject_t * pTexObject, const cudaResourceDesc * pResDesc, const cudaTextureDesc * pTexDesc, const cudaResourceViewDesc * pResViewDesc); } 
#line 6109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDestroyTextureObject(cudaTextureObject_t texObject); } 
#line 6125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetTextureObjectResourceDesc(cudaResourceDesc * pResDesc, cudaTextureObject_t texObject); } 
#line 6141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetTextureObjectTextureDesc(cudaTextureDesc * pTexDesc, cudaTextureObject_t texObject); } 
#line 6158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetTextureObjectResourceViewDesc(cudaResourceViewDesc * pResViewDesc, cudaTextureObject_t texObject); } 
#line 6197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaCreateSurfaceObject(cudaSurfaceObject_t * pSurfObject, const cudaResourceDesc * pResDesc); } 
#line 6212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDestroySurfaceObject(cudaSurfaceObject_t surfObject); } 
#line 6227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetSurfaceObjectResourceDesc(cudaResourceDesc * pResDesc, cudaSurfaceObject_t surfObject); } 
#line 6254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDriverGetVersion(int * driverVersion); } 
#line 6271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaRuntimeGetVersion(int * runtimeVersion); } 
#line 6276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetExportTable(const void ** ppExportTable, const cudaUUID_t * pExportTableId); } 
#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
template< class T> __inline ::cudaChannelFormatDesc cudaCreateChannelDesc() 
#line 108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
{ 
#line 109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(0, 0, 0, 0, cudaChannelFormatKindNone); 
#line 110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
} 
#line 112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
static __inline cudaChannelFormatDesc cudaCreateChannelDescHalf() 
#line 113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
{ 
#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8); 
#line 116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat); 
#line 117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
} 
#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
static __inline cudaChannelFormatDesc cudaCreateChannelDescHalf1() 
#line 120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
{ 
#line 121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8); 
#line 123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat); 
#line 124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
} 
#line 126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
static __inline cudaChannelFormatDesc cudaCreateChannelDescHalf2() 
#line 127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
{ 
#line 128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8); 
#line 130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindFloat); 
#line 131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
} 
#line 133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
static __inline cudaChannelFormatDesc cudaCreateChannelDescHalf4() 
#line 134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
{ 
#line 135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8); 
#line 137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindFloat); 
#line 138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
} 
#line 140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< char> () 
#line 141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
{ 
#line 142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
int e = (((int)sizeof(char)) * 8); 
#line 147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned); 
#line 149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
} 
#line 151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< signed char> () 
#line 152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
{ 
#line 153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8); 
#line 155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned); 
#line 156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
} 
#line 158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned char> () 
#line 159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
{ 
#line 160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8); 
#line 162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned); 
#line 163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
} 
#line 165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< char1> () 
#line 166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
{ 
#line 167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8); 
#line 169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned); 
#line 170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
} 
#line 172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar1> () 
#line 173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
{ 
#line 174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8); 
#line 176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned); 
#line 177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
} 
#line 179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< char2> () 
#line 180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
{ 
#line 181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8); 
#line 183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned); 
#line 184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
} 
#line 186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar2> () 
#line 187 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
{ 
#line 188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8); 
#line 190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned); 
#line 191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
} 
#line 193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< char4> () 
#line 194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
{ 
#line 195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8); 
#line 197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned); 
#line 198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
} 
#line 200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar4> () 
#line 201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
{ 
#line 202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8); 
#line 204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned); 
#line 205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
} 
#line 207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< short> () 
#line 208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
{ 
#line 209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
int e = (((int)sizeof(short)) * 8); 
#line 211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned); 
#line 212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
} 
#line 214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned short> () 
#line 215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
{ 
#line 216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8); 
#line 218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned); 
#line 219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
} 
#line 221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< short1> () 
#line 222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
{ 
#line 223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
int e = (((int)sizeof(short)) * 8); 
#line 225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned); 
#line 226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
} 
#line 228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort1> () 
#line 229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
{ 
#line 230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8); 
#line 232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned); 
#line 233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
} 
#line 235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< short2> () 
#line 236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
{ 
#line 237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
int e = (((int)sizeof(short)) * 8); 
#line 239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned); 
#line 240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
} 
#line 242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort2> () 
#line 243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
{ 
#line 244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8); 
#line 246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned); 
#line 247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
} 
#line 249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< short4> () 
#line 250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
{ 
#line 251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
int e = (((int)sizeof(short)) * 8); 
#line 253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned); 
#line 254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
} 
#line 256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort4> () 
#line 257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
{ 
#line 258 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8); 
#line 260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned); 
#line 261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
} 
#line 263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< int> () 
#line 264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
{ 
#line 265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
int e = (((int)sizeof(int)) * 8); 
#line 267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned); 
#line 268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
} 
#line 270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned> () 
#line 271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
{ 
#line 272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8); 
#line 274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned); 
#line 275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
} 
#line 277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< int1> () 
#line 278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
{ 
#line 279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
int e = (((int)sizeof(int)) * 8); 
#line 281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned); 
#line 282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
} 
#line 284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< uint1> () 
#line 285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
{ 
#line 286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8); 
#line 288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned); 
#line 289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
} 
#line 291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< int2> () 
#line 292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
{ 
#line 293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
int e = (((int)sizeof(int)) * 8); 
#line 295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned); 
#line 296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
} 
#line 298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< uint2> () 
#line 299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
{ 
#line 300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8); 
#line 302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned); 
#line 303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
} 
#line 305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< int4> () 
#line 306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
{ 
#line 307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
int e = (((int)sizeof(int)) * 8); 
#line 309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned); 
#line 310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
} 
#line 312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< uint4> () 
#line 313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
{ 
#line 314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8); 
#line 316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned); 
#line 317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
} 
#line 321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< long> () 
#line 322 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
{ 
#line 323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
int e = (((int)sizeof(long)) * 8); 
#line 325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned); 
#line 326 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
} 
#line 328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned long> () 
#line 329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
{ 
#line 330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned long)) * 8); 
#line 332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned); 
#line 333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
} 
#line 335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< long1> () 
#line 336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
{ 
#line 337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
int e = (((int)sizeof(long)) * 8); 
#line 339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned); 
#line 340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
} 
#line 342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< ulong1> () 
#line 343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
{ 
#line 344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned long)) * 8); 
#line 346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned); 
#line 347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
} 
#line 349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< long2> () 
#line 350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
{ 
#line 351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
int e = (((int)sizeof(long)) * 8); 
#line 353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned); 
#line 354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
} 
#line 356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< ulong2> () 
#line 357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
{ 
#line 358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned long)) * 8); 
#line 360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned); 
#line 361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
} 
#line 363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< long4> () 
#line 364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
{ 
#line 365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
int e = (((int)sizeof(long)) * 8); 
#line 367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned); 
#line 368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
} 
#line 370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< ulong4> () 
#line 371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
{ 
#line 372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned long)) * 8); 
#line 374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned); 
#line 375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
} 
#line 379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< float> () 
#line 380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
{ 
#line 381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
int e = (((int)sizeof(float)) * 8); 
#line 383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat); 
#line 384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
} 
#line 386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< float1> () 
#line 387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
{ 
#line 388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
int e = (((int)sizeof(float)) * 8); 
#line 390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat); 
#line 391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
} 
#line 393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< float2> () 
#line 394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
{ 
#line 395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
int e = (((int)sizeof(float)) * 8); 
#line 397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindFloat); 
#line 398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
} 
#line 400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< float4> () 
#line 401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
{ 
#line 402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
int e = (((int)sizeof(float)) * 8); 
#line 404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindFloat); 
#line 405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\channel_descriptor.h"
} 
#line 79 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_functions.h"
static __inline cudaPitchedPtr make_cudaPitchedPtr(void *d, size_t p, size_t xsz, size_t ysz) 
#line 80 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_functions.h"
{ 
#line 81 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_functions.h"
cudaPitchedPtr s; 
#line 83 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_functions.h"
(s.ptr) = d; 
#line 84 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_functions.h"
(s.pitch) = p; 
#line 85 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_functions.h"
(s.xsize) = xsz; 
#line 86 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_functions.h"
(s.ysize) = ysz; 
#line 88 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_functions.h"
return s; 
#line 89 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_functions.h"
} 
#line 106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_functions.h"
static __inline cudaPos make_cudaPos(size_t x, size_t y, size_t z) 
#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_functions.h"
{ 
#line 108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_functions.h"
cudaPos p; 
#line 110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_functions.h"
(p.x) = x; 
#line 111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_functions.h"
(p.y) = y; 
#line 112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_functions.h"
(p.z) = z; 
#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_functions.h"
return p; 
#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_functions.h"
} 
#line 132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_functions.h"
static __inline cudaExtent make_cudaExtent(size_t w, size_t h, size_t d) 
#line 133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_functions.h"
{ 
#line 134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_functions.h"
cudaExtent e; 
#line 136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_functions.h"
(e.width) = w; 
#line 137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_functions.h"
(e.height) = h; 
#line 138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_functions.h"
(e.depth) = d; 
#line 140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_functions.h"
return e; 
#line 141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\driver_functions.h"
} 
#line 75 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.h"
static __inline char1 make_char1(signed char x); 
#line 77 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.h"
static __inline uchar1 make_uchar1(unsigned char x); 
#line 79 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.h"
static __inline char2 make_char2(signed char x, signed char y); 
#line 81 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.h"
static __inline uchar2 make_uchar2(unsigned char x, unsigned char y); 
#line 83 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.h"
static __inline char3 make_char3(signed char x, signed char y, signed char z); 
#line 85 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.h"
static __inline uchar3 make_uchar3(unsigned char x, unsigned char y, unsigned char z); 
#line 87 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.h"
static __inline char4 make_char4(signed char x, signed char y, signed char z, signed char w); 
#line 89 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.h"
static __inline uchar4 make_uchar4(unsigned char x, unsigned char y, unsigned char z, unsigned char w); 
#line 91 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.h"
static __inline short1 make_short1(short x); 
#line 93 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.h"
static __inline ushort1 make_ushort1(unsigned short x); 
#line 95 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.h"
static __inline short2 make_short2(short x, short y); 
#line 97 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.h"
static __inline ushort2 make_ushort2(unsigned short x, unsigned short y); 
#line 99 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.h"
static __inline short3 make_short3(short x, short y, short z); 
#line 101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.h"
static __inline ushort3 make_ushort3(unsigned short x, unsigned short y, unsigned short z); 
#line 103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.h"
static __inline short4 make_short4(short x, short y, short z, short w); 
#line 105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.h"
static __inline ushort4 make_ushort4(unsigned short x, unsigned short y, unsigned short z, unsigned short w); 
#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.h"
static __inline int1 make_int1(int x); 
#line 109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.h"
static __inline uint1 make_uint1(unsigned x); 
#line 111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.h"
static __inline int2 make_int2(int x, int y); 
#line 113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.h"
static __inline uint2 make_uint2(unsigned x, unsigned y); 
#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.h"
static __inline int3 make_int3(int x, int y, int z); 
#line 117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.h"
static __inline uint3 make_uint3(unsigned x, unsigned y, unsigned z); 
#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.h"
static __inline int4 make_int4(int x, int y, int z, int w); 
#line 121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.h"
static __inline uint4 make_uint4(unsigned x, unsigned y, unsigned z, unsigned w); 
#line 123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.h"
static __inline long1 make_long1(long x); 
#line 125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.h"
static __inline ulong1 make_ulong1(unsigned long x); 
#line 127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.h"
static __inline long2 make_long2(long x, long y); 
#line 129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.h"
static __inline ulong2 make_ulong2(unsigned long x, unsigned long y); 
#line 131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.h"
static __inline long3 make_long3(long x, long y, long z); 
#line 133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.h"
static __inline ulong3 make_ulong3(unsigned long x, unsigned long y, unsigned long z); 
#line 135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.h"
static __inline long4 make_long4(long x, long y, long z, long w); 
#line 137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.h"
static __inline ulong4 make_ulong4(unsigned long x, unsigned long y, unsigned long z, unsigned long w); 
#line 139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.h"
static __inline float1 make_float1(float x); 
#line 141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.h"
static __inline float2 make_float2(float x, float y); 
#line 143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.h"
static __inline float3 make_float3(float x, float y, float z); 
#line 145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.h"
static __inline float4 make_float4(float x, float y, float z, float w); 
#line 147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.h"
static __inline longlong1 make_longlong1(__int64 x); 
#line 149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.h"
static __inline ulonglong1 make_ulonglong1(unsigned __int64 x); 
#line 151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.h"
static __inline longlong2 make_longlong2(__int64 x, __int64 y); 
#line 153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.h"
static __inline ulonglong2 make_ulonglong2(unsigned __int64 x, unsigned __int64 y); 
#line 155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.h"
static __inline longlong3 make_longlong3(__int64 x, __int64 y, __int64 z); 
#line 157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.h"
static __inline ulonglong3 make_ulonglong3(unsigned __int64 x, unsigned __int64 y, unsigned __int64 z); 
#line 159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.h"
static __inline longlong4 make_longlong4(__int64 x, __int64 y, __int64 z, __int64 w); 
#line 161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.h"
static __inline ulonglong4 make_ulonglong4(unsigned __int64 x, unsigned __int64 y, unsigned __int64 z, unsigned __int64 w); 
#line 163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.h"
static __inline double1 make_double1(double x); 
#line 165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.h"
static __inline double2 make_double2(double x, double y); 
#line 167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.h"
static __inline double3 make_double3(double x, double y, double z); 
#line 169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.h"
static __inline double4 make_double4(double x, double y, double z, double w); 
#line 75 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
static __inline char1 make_char1(signed char x) 
#line 76 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
{ 
#line 77 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
char1 t; (t.x) = x; return t; 
#line 78 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
} 
#line 80 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
static __inline uchar1 make_uchar1(unsigned char x) 
#line 81 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
{ 
#line 82 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
uchar1 t; (t.x) = x; return t; 
#line 83 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
} 
#line 85 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
static __inline char2 make_char2(signed char x, signed char y) 
#line 86 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
{ 
#line 87 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
char2 t; (t.x) = x; (t.y) = y; return t; 
#line 88 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
} 
#line 90 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
static __inline uchar2 make_uchar2(unsigned char x, unsigned char y) 
#line 91 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
{ 
#line 92 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
uchar2 t; (t.x) = x; (t.y) = y; return t; 
#line 93 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
} 
#line 95 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
static __inline char3 make_char3(signed char x, signed char y, signed char z) 
#line 96 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
{ 
#line 97 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
char3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 98 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
} 
#line 100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
static __inline uchar3 make_uchar3(unsigned char x, unsigned char y, unsigned char z) 
#line 101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
{ 
#line 102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
uchar3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
} 
#line 105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
static __inline char4 make_char4(signed char x, signed char y, signed char z, signed char w) 
#line 106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
{ 
#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
char4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
} 
#line 110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
static __inline uchar4 make_uchar4(unsigned char x, unsigned char y, unsigned char z, unsigned char w) 
#line 111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
{ 
#line 112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
uchar4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
} 
#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
static __inline short1 make_short1(short x) 
#line 116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
{ 
#line 117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
short1 t; (t.x) = x; return t; 
#line 118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
} 
#line 120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
static __inline ushort1 make_ushort1(unsigned short x) 
#line 121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
{ 
#line 122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
ushort1 t; (t.x) = x; return t; 
#line 123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
} 
#line 125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
static __inline short2 make_short2(short x, short y) 
#line 126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
{ 
#line 127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
short2 t; (t.x) = x; (t.y) = y; return t; 
#line 128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
} 
#line 130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
static __inline ushort2 make_ushort2(unsigned short x, unsigned short y) 
#line 131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
{ 
#line 132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
ushort2 t; (t.x) = x; (t.y) = y; return t; 
#line 133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
} 
#line 135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
static __inline short3 make_short3(short x, short y, short z) 
#line 136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
{ 
#line 137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
short3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
} 
#line 140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
static __inline ushort3 make_ushort3(unsigned short x, unsigned short y, unsigned short z) 
#line 141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
{ 
#line 142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
ushort3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
} 
#line 145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
static __inline short4 make_short4(short x, short y, short z, short w) 
#line 146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
{ 
#line 147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
short4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
} 
#line 150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
static __inline ushort4 make_ushort4(unsigned short x, unsigned short y, unsigned short z, unsigned short w) 
#line 151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
{ 
#line 152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
ushort4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
} 
#line 155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
static __inline int1 make_int1(int x) 
#line 156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
{ 
#line 157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
int1 t; (t.x) = x; return t; 
#line 158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
} 
#line 160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
static __inline uint1 make_uint1(unsigned x) 
#line 161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
{ 
#line 162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
uint1 t; (t.x) = x; return t; 
#line 163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
} 
#line 165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
static __inline int2 make_int2(int x, int y) 
#line 166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
{ 
#line 167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
int2 t; (t.x) = x; (t.y) = y; return t; 
#line 168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
} 
#line 170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
static __inline uint2 make_uint2(unsigned x, unsigned y) 
#line 171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
{ 
#line 172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
uint2 t; (t.x) = x; (t.y) = y; return t; 
#line 173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
} 
#line 175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
static __inline int3 make_int3(int x, int y, int z) 
#line 176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
{ 
#line 177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
int3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
} 
#line 180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
static __inline uint3 make_uint3(unsigned x, unsigned y, unsigned z) 
#line 181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
{ 
#line 182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
uint3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
} 
#line 185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
static __inline int4 make_int4(int x, int y, int z, int w) 
#line 186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
{ 
#line 187 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
int4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
} 
#line 190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
static __inline uint4 make_uint4(unsigned x, unsigned y, unsigned z, unsigned w) 
#line 191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
{ 
#line 192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
uint4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
} 
#line 195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
static __inline long1 make_long1(long x) 
#line 196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
{ 
#line 197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
long1 t; (t.x) = x; return t; 
#line 198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
} 
#line 200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
static __inline ulong1 make_ulong1(unsigned long x) 
#line 201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
{ 
#line 202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
ulong1 t; (t.x) = x; return t; 
#line 203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
} 
#line 205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
static __inline long2 make_long2(long x, long y) 
#line 206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
{ 
#line 207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
long2 t; (t.x) = x; (t.y) = y; return t; 
#line 208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
} 
#line 210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
static __inline ulong2 make_ulong2(unsigned long x, unsigned long y) 
#line 211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
{ 
#line 212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
ulong2 t; (t.x) = x; (t.y) = y; return t; 
#line 213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
} 
#line 215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
static __inline long3 make_long3(long x, long y, long z) 
#line 216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
{ 
#line 217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
long3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
} 
#line 220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
static __inline ulong3 make_ulong3(unsigned long x, unsigned long y, unsigned long z) 
#line 221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
{ 
#line 222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
ulong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
} 
#line 225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
static __inline long4 make_long4(long x, long y, long z, long w) 
#line 226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
{ 
#line 227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
long4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
} 
#line 230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
static __inline ulong4 make_ulong4(unsigned long x, unsigned long y, unsigned long z, unsigned long w) 
#line 231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
{ 
#line 232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
ulong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
} 
#line 235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
static __inline float1 make_float1(float x) 
#line 236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
{ 
#line 237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
float1 t; (t.x) = x; return t; 
#line 238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
} 
#line 240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
static __inline float2 make_float2(float x, float y) 
#line 241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
{ 
#line 242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
float2 t; (t.x) = x; (t.y) = y; return t; 
#line 243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
} 
#line 245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
static __inline float3 make_float3(float x, float y, float z) 
#line 246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
{ 
#line 247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
float3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
} 
#line 250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
static __inline float4 make_float4(float x, float y, float z, float w) 
#line 251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
{ 
#line 252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
float4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
} 
#line 255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
static __inline longlong1 make_longlong1(__int64 x) 
#line 256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
{ 
#line 257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
longlong1 t; (t.x) = x; return t; 
#line 258 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
} 
#line 260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
static __inline ulonglong1 make_ulonglong1(unsigned __int64 x) 
#line 261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
{ 
#line 262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
ulonglong1 t; (t.x) = x; return t; 
#line 263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
} 
#line 265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
static __inline longlong2 make_longlong2(__int64 x, __int64 y) 
#line 266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
{ 
#line 267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
longlong2 t; (t.x) = x; (t.y) = y; return t; 
#line 268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
} 
#line 270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
static __inline ulonglong2 make_ulonglong2(unsigned __int64 x, unsigned __int64 y) 
#line 271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
{ 
#line 272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
ulonglong2 t; (t.x) = x; (t.y) = y; return t; 
#line 273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
} 
#line 275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
static __inline longlong3 make_longlong3(__int64 x, __int64 y, __int64 z) 
#line 276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
{ 
#line 277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
longlong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
} 
#line 280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
static __inline ulonglong3 make_ulonglong3(unsigned __int64 x, unsigned __int64 y, unsigned __int64 z) 
#line 281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
{ 
#line 282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
ulonglong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
} 
#line 285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
static __inline longlong4 make_longlong4(__int64 x, __int64 y, __int64 z, __int64 w) 
#line 286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
{ 
#line 287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
longlong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
} 
#line 290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
static __inline ulonglong4 make_ulonglong4(unsigned __int64 x, unsigned __int64 y, unsigned __int64 z, unsigned __int64 w) 
#line 291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
{ 
#line 292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
ulonglong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
} 
#line 295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
static __inline double1 make_double1(double x) 
#line 296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
{ 
#line 297 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
double1 t; (t.x) = x; return t; 
#line 298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
} 
#line 300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
static __inline double2 make_double2(double x, double y) 
#line 301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
{ 
#line 302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
double2 t; (t.x) = x; (t.y) = y; return t; 
#line 303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
} 
#line 305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
static __inline double3 make_double3(double x, double y, double z) 
#line 306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
{ 
#line 307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
double3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
} 
#line 310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
static __inline double4 make_double4(double x, double y, double z, double w) 
#line 311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
{ 
#line 312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
double4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\vector_functions.hpp"
} 
#line 47 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) void *__cdecl _memccpy(void * _Dst, const void * _Src, int _Val, size_t _MaxCount); } 
#line 48 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) const void *__cdecl memchr(const void * _Buf, int _Val, size_t _MaxCount); } 
#line 49 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _memicmp(const void * _Buf1, const void * _Buf2, size_t _Size); } 
#line 50 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _memicmp_l(const void * _Buf1, const void * _Buf2, size_t _Size, _locale_t _Locale); } 
#line 51 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { int __cdecl memcmp(const void * _Buf1, const void * _Buf2, size_t _Size); } 
#line 55 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { void *__cdecl memcpy(void * _Dst, const void * _Src, size_t _Size); } 
#line 57 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl memcpy_s(void * _Dst, rsize_t _DstSize, const void * _Src, rsize_t _MaxCount); } 
#line 94 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { void *__cdecl memset(void * _Dst, int _Val, size_t _Size); } 
#line 98 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) void *__cdecl memccpy(void * _Dst, const void * _Src, int _Val, size_t _Size); } 
#line 99 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl memicmp(const void * _Buf1, const void * _Buf2, size_t _Size); } 
#line 105 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _strset_s(char * _Dst, size_t _DstSize, int _Value); } 
#line 106 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl _strset_s ( char ( & _Dest ) [ _Size ], int _Value ) throw ( ) { return _strset_s ( _Dest, _Size, _Value ); }
#line 107 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { char *__cdecl _strset(char * _Dest, int _Value); } 
#line 109 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl strcpy_s(char * _Dst, rsize_t _SizeInBytes, const char * _Src); } 
#line 111 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl strcpy_s ( char ( & _Dest ) [ _Size ], const char * _Source ) throw ( ) { return strcpy_s ( _Dest, _Size, _Source ); }
#line 112 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { char *__cdecl strcpy(char * _Dest, const char * _Source); } 
#line 114 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl strcat_s(char * _Dst, rsize_t _SizeInBytes, const char * _Src); } 
#line 116 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl strcat_s ( char ( & _Dest ) [ _Size ], const char * _Source ) throw ( ) { return strcat_s ( _Dest, _Size, _Source ); }
#line 118 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { char *__cdecl strcat(char * _Dest, const char * _Source); } 
#line 120 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { int __cdecl strcmp(const char * _Str1, const char * _Str2); } 
#line 121 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { size_t __cdecl strlen(const char * _Str); } 
#line 125 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { 
#line 122 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
__declspec(dllimport) size_t __cdecl 
#line 125 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
strnlen(const char * _Str, size_t _MaxCount); } 
#line 130 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { static __inline size_t __cdecl strnlen_s(const char *_Str, size_t _MaxCount) 
#line 131 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
{ 
#line 132 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
return (_Str == (0)) ? 0 : strnlen(_Str, _MaxCount); 
#line 133 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
} } 
#line 136 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl memmove_s(void * _Dst, rsize_t _DstSize, const void * _Src, rsize_t _MaxCount); } 
#line 139 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) void *__cdecl memmove(void * _Dst, const void * _Src, size_t _Size); } 
#line 146 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl _strdup(const char * _Src); } 
#line 152 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) const char *__cdecl strchr(const char * _Str, int _Val); } 
#line 153 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _stricmp(const char * _Str1, const char * _Str2); } 
#line 154 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _strcmpi(const char * _Str1, const char * _Str2); } 
#line 155 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _stricmp_l(const char * _Str1, const char * _Str2, _locale_t _Locale); } 
#line 156 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl strcoll(const char * _Str1, const char * _Str2); } 
#line 157 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _strcoll_l(const char * _Str1, const char * _Str2, _locale_t _Locale); } 
#line 158 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _stricoll(const char * _Str1, const char * _Str2); } 
#line 159 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _stricoll_l(const char * _Str1, const char * _Str2, _locale_t _Locale); } 
#line 160 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _strncoll(const char * _Str1, const char * _Str2, size_t _MaxCount); } 
#line 161 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _strncoll_l(const char * _Str1, const char * _Str2, size_t _MaxCount, _locale_t _Locale); } 
#line 162 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _strnicoll(const char * _Str1, const char * _Str2, size_t _MaxCount); } 
#line 163 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _strnicoll_l(const char * _Str1, const char * _Str2, size_t _MaxCount, _locale_t _Locale); } 
#line 164 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) size_t __cdecl strcspn(const char * _Str, const char * _Control); } 
#line 165 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl _strerror(const char * _ErrMsg); } 
#line 166 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _strerror_s(char * _Buf, size_t _SizeInBytes, const char * _ErrMsg); } 
#line 167 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl _strerror_s ( char ( & _Buffer ) [ _Size ], const char * _ErrorMessage ) throw ( ) { return _strerror_s ( _Buffer, _Size, _ErrorMessage ); }
#line 168 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl strerror(int); } 
#line 170 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl strerror_s(char * _Buf, size_t _SizeInBytes, int _ErrNum); } 
#line 172 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl strerror_s ( char ( & _Buffer ) [ _Size ], int _ErrorMessage ) throw ( ) { return strerror_s ( _Buffer, _Size, _ErrorMessage ); }
#line 173 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _strlwr_s(char * _Str, size_t _Size); } 
#line 174 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl _strlwr_s ( char ( & _String ) [ _Size ] ) throw ( ) { return _strlwr_s ( _String, _Size ); }
#line 175 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl _strlwr(char * _String); } 
#line 176 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _strlwr_s_l(char * _Str, size_t _Size, _locale_t _Locale); } 
#line 177 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl _strlwr_s_l ( char ( & _String ) [ _Size ], _locale_t _Locale ) throw ( ) { return _strlwr_s_l ( _String, _Size, _Locale ); }
#line 178 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl _strlwr_l(char * _String, _locale_t _Locale); } 
#line 180 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl strncat_s(char * _Dst, rsize_t _SizeInBytes, const char * _Src, rsize_t _MaxCount); } 
#line 182 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl strncat_s ( char ( & _Dest ) [ _Size ], const char * _Source, size_t _Count ) throw ( ) { return strncat_s ( _Dest, _Size, _Source, _Count ); }
#pragma warning(push)
#pragma warning(disable:6059)
#line 186 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl strncat(char * _Dest, const char * _Source, size_t _Count); } 
#pragma warning(pop)
extern "C" { __declspec(dllimport) int __cdecl strncmp(const char * _Str1, const char * _Str2, size_t _MaxCount); } 
#line 189 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _strnicmp(const char * _Str1, const char * _Str2, size_t _MaxCount); } 
#line 190 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _strnicmp_l(const char * _Str1, const char * _Str2, size_t _MaxCount, _locale_t _Locale); } 
#line 192 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl strncpy_s(char * _Dst, rsize_t _SizeInBytes, const char * _Src, rsize_t _MaxCount); } 
#line 194 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl strncpy_s ( char ( & _Dest ) [ _Size ], const char * _Source, size_t _Count ) throw ( ) { return strncpy_s ( _Dest, _Size, _Source, _Count ); }
#line 195 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl strncpy(char * _Dest, const char * _Source, size_t _Count); } 
#line 196 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _strnset_s(char * _Str, size_t _SizeInBytes, int _Val, size_t _MaxCount); } 
#line 197 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl _strnset_s ( char ( & _Dest ) [ _Size ], int _Val, size_t _Count ) throw ( ) { return _strnset_s ( _Dest, _Size, _Val, _Count ); }
#line 198 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl _strnset(char * _Dest, int _Val, size_t _Count); } 
#line 199 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) const char *__cdecl strpbrk(const char * _Str, const char * _Control); } 
#line 200 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) const char *__cdecl strrchr(const char * _Str, int _Ch); } 
#line 201 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl _strrev(char * _Str); } 
#line 202 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) size_t __cdecl strspn(const char * _Str, const char * _Control); } 
#line 203 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) const char *__cdecl strstr(const char * _Str, const char * _SubStr); } 
#line 204 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl strtok(char * _Str, const char * _Delim); } 
#line 206 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl strtok_s(char * _Str, const char * _Delim, char ** _Context); } 
#line 208 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _strupr_s(char * _Str, size_t _Size); } 
#line 209 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl _strupr_s ( char ( & _String ) [ _Size ] ) throw ( ) { return _strupr_s ( _String, _Size ); }
#line 210 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl _strupr(char * _String); } 
#line 211 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _strupr_s_l(char * _Str, size_t _Size, _locale_t _Locale); } 
#line 212 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl _strupr_s_l ( char ( & _String ) [ _Size ], _locale_t _Locale ) throw ( ) { return _strupr_s_l ( _String, _Size, _Locale ); }
#line 213 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl _strupr_l(char * _String, _locale_t _Locale); } 
#line 214 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) size_t __cdecl strxfrm(char * _Dst, const char * _Src, size_t _MaxCount); } 
#line 215 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) size_t __cdecl _strxfrm_l(char * _Dst, const char * _Src, size_t _MaxCount, _locale_t _Locale); } 
#line 221 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
inline char *__cdecl strchr(char *_Str, int _Ch) 
#line 222 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
{ return (char *)strchr((const char *)_Str, _Ch); } 
#line 223 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
inline char *__cdecl strpbrk(char *_Str, const char *_Control) 
#line 224 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
{ return (char *)strpbrk((const char *)_Str, _Control); } 
#line 225 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
inline char *__cdecl strrchr(char *_Str, int _Ch) 
#line 226 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
{ return (char *)strrchr((const char *)_Str, _Ch); } 
#line 227 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
inline char *__cdecl strstr(char *_Str, const char *_SubStr) 
#line 228 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
{ return (char *)strstr((const char *)_Str, _SubStr); } 
#line 232 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
inline void *__cdecl memchr(void *_Pv, int _C, size_t _N) 
#line 233 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
{ return (void *)memchr((const void *)_Pv, _C, _N); } 
#line 245 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl strdup(const char * _Src); } 
#line 252 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl strcmpi(const char * _Str1, const char * _Str2); } 
#line 253 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl stricmp(const char * _Str1, const char * _Str2); } 
#line 254 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl strlwr(char * _Str); } 
#line 255 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl strnicmp(const char * _Str1, const char * _Str, size_t _MaxCount); } 
#line 256 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl strnset(char * _Str, int _Val, size_t _MaxCount); } 
#line 257 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl strrev(char * _Str); } 
#line 258 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { char *__cdecl strset(char * _Str, int _Val); } 
#line 259 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl strupr(char * _Str); } 
#line 273 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wcsdup(const __wchar_t * _Str); } 
#line 280 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl wcscat_s(__wchar_t * _Dst, rsize_t _SizeInWords, const __wchar_t * _Src); } 
#line 282 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl wcscat_s ( wchar_t ( & _Dest ) [ _Size ], const wchar_t * _Source ) throw ( ) { return wcscat_s ( _Dest, _Size, _Source ); }
#line 284 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl wcscat(__wchar_t * _Dest, const __wchar_t * _Source); } 
#line 288 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) const __wchar_t *__cdecl wcschr(const __wchar_t * _Str, __wchar_t _Ch); } 
#line 289 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl wcscmp(const __wchar_t * _Str1, const __wchar_t * _Str2); } 
#line 291 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl wcscpy_s(__wchar_t * _Dst, rsize_t _SizeInWords, const __wchar_t * _Src); } 
#line 293 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl wcscpy_s ( wchar_t ( & _Dest ) [ _Size ], const wchar_t * _Source ) throw ( ) { return wcscpy_s ( _Dest, _Size, _Source ); }
#line 294 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl wcscpy(__wchar_t * _Dest, const __wchar_t * _Source); } 
#line 295 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) size_t __cdecl wcscspn(const __wchar_t * _Str, const __wchar_t * _Control); } 
#line 296 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) size_t __cdecl wcslen(const __wchar_t * _Str); } 
#line 300 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { 
#line 297 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
__declspec(dllimport) size_t __cdecl 
#line 300 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
wcsnlen(const __wchar_t * _Src, size_t _MaxCount); } 
#line 305 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { static __inline size_t __cdecl wcsnlen_s(const __wchar_t *_Src, size_t _MaxCount) 
#line 306 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
{ 
#line 307 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
return (_Src == (0)) ? 0 : wcsnlen(_Src, _MaxCount); 
#line 308 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
} } 
#line 311 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl wcsncat_s(__wchar_t * _Dst, rsize_t _SizeInWords, const __wchar_t * _Src, rsize_t _MaxCount); } 
#line 313 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl wcsncat_s ( wchar_t ( & _Dest ) [ _Size ], const wchar_t * _Source, size_t _Count ) throw ( ) { return wcsncat_s ( _Dest, _Size, _Source, _Count ); }
#pragma warning(push)
#pragma warning(disable:6059)
extern "C" { __declspec(dllimport) __wchar_t *__cdecl wcsncat(__wchar_t * _Dest, const __wchar_t * _Source, size_t _Count); } 
#pragma warning(pop)
extern "C" { __declspec(dllimport) int __cdecl wcsncmp(const __wchar_t * _Str1, const __wchar_t * _Str2, size_t _MaxCount); } 
#line 320 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl wcsncpy_s(__wchar_t * _Dst, rsize_t _SizeInWords, const __wchar_t * _Src, rsize_t _MaxCount); } 
#line 322 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl wcsncpy_s ( wchar_t ( & _Dest ) [ _Size ], const wchar_t * _Source, size_t _Count ) throw ( ) { return wcsncpy_s ( _Dest, _Size, _Source, _Count ); }
#line 323 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl wcsncpy(__wchar_t * _Dest, const __wchar_t * _Source, size_t _Count); } 
#line 324 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) const __wchar_t *__cdecl wcspbrk(const __wchar_t * _Str, const __wchar_t * _Control); } 
#line 325 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) const __wchar_t *__cdecl wcsrchr(const __wchar_t * _Str, __wchar_t _Ch); } 
#line 326 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) size_t __cdecl wcsspn(const __wchar_t * _Str, const __wchar_t * _Control); } 
#line 329 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) const __wchar_t *__cdecl wcsstr(const __wchar_t * _Str, const __wchar_t * _SubStr); } 
#line 330 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl wcstok(__wchar_t * _Str, const __wchar_t * _Delim); } 
#line 332 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl wcstok_s(__wchar_t * _Str, const __wchar_t * _Delim, __wchar_t ** _Context); } 
#line 334 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wcserror(int _ErrNum); } 
#line 335 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wcserror_s(__wchar_t * _Buf, size_t _SizeInWords, int _ErrNum); } 
#line 336 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl _wcserror_s ( wchar_t ( & _Buffer ) [ _Size ], int _Error ) throw ( ) { return _wcserror_s ( _Buffer, _Size, _Error ); }
#line 337 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl __wcserror(const __wchar_t * _Str); } 
#line 338 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl __wcserror_s(__wchar_t * _Buffer, size_t _SizeInWords, const __wchar_t * _ErrMsg); } 
#line 339 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl __wcserror_s ( wchar_t ( & _Buffer ) [ _Size ], const wchar_t * _ErrorMessage ) throw ( ) { return __wcserror_s ( _Buffer, _Size, _ErrorMessage ); }
#line 341 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _wcsicmp(const __wchar_t * _Str1, const __wchar_t * _Str2); } 
#line 342 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _wcsicmp_l(const __wchar_t * _Str1, const __wchar_t * _Str2, _locale_t _Locale); } 
#line 343 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _wcsnicmp(const __wchar_t * _Str1, const __wchar_t * _Str2, size_t _MaxCount); } 
#line 344 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _wcsnicmp_l(const __wchar_t * _Str1, const __wchar_t * _Str2, size_t _MaxCount, _locale_t _Locale); } 
#line 345 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wcsnset_s(__wchar_t * _Dst, size_t _SizeInWords, __wchar_t _Val, size_t _MaxCount); } 
#line 346 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl _wcsnset_s ( wchar_t ( & _Dst ) [ _Size ], wchar_t _Val, size_t _MaxCount ) throw ( ) { return _wcsnset_s ( _Dst, _Size, _Val, _MaxCount ); }
#line 347 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wcsnset(__wchar_t * _Str, __wchar_t _Val, size_t _MaxCount); } 
#line 348 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wcsrev(__wchar_t * _Str); } 
#line 349 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wcsset_s(__wchar_t * _Dst, size_t _SizeInWords, __wchar_t _Value); } 
#line 350 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl _wcsset_s ( wchar_t ( & _Str ) [ _Size ], wchar_t _Val ) throw ( ) { return _wcsset_s ( _Str, _Size, _Val ); }
#line 351 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wcsset(__wchar_t * _Str, __wchar_t _Val); } 
#line 353 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wcslwr_s(__wchar_t * _Str, size_t _SizeInWords); } 
#line 354 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl _wcslwr_s ( wchar_t ( & _String ) [ _Size ] ) throw ( ) { return _wcslwr_s ( _String, _Size ); }
#line 355 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wcslwr(__wchar_t * _String); } 
#line 356 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wcslwr_s_l(__wchar_t * _Str, size_t _SizeInWords, _locale_t _Locale); } 
#line 357 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl _wcslwr_s_l ( wchar_t ( & _String ) [ _Size ], _locale_t _Locale ) throw ( ) { return _wcslwr_s_l ( _String, _Size, _Locale ); }
#line 358 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wcslwr_l(__wchar_t * _String, _locale_t _Locale); } 
#line 359 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wcsupr_s(__wchar_t * _Str, size_t _Size); } 
#line 360 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl _wcsupr_s ( wchar_t ( & _String ) [ _Size ] ) throw ( ) { return _wcsupr_s ( _String, _Size ); }
#line 361 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wcsupr(__wchar_t * _String); } 
#line 362 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wcsupr_s_l(__wchar_t * _Str, size_t _Size, _locale_t _Locale); } 
#line 363 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
template < size_t _Size > inline errno_t __cdecl _wcsupr_s_l ( wchar_t ( & _String ) [ _Size ], _locale_t _Locale ) throw ( ) { return _wcsupr_s_l ( _String, _Size, _Locale ); }
#line 364 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wcsupr_l(__wchar_t * _String, _locale_t _Locale); } 
#line 365 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) size_t __cdecl wcsxfrm(__wchar_t * _Dst, const __wchar_t * _Src, size_t _MaxCount); } 
#line 366 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) size_t __cdecl _wcsxfrm_l(__wchar_t * _Dst, const __wchar_t * _Src, size_t _MaxCount, _locale_t _Locale); } 
#line 367 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl wcscoll(const __wchar_t * _Str1, const __wchar_t * _Str2); } 
#line 368 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _wcscoll_l(const __wchar_t * _Str1, const __wchar_t * _Str2, _locale_t _Locale); } 
#line 369 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _wcsicoll(const __wchar_t * _Str1, const __wchar_t * _Str2); } 
#line 370 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _wcsicoll_l(const __wchar_t * _Str1, const __wchar_t * _Str2, _locale_t _Locale); } 
#line 371 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _wcsncoll(const __wchar_t * _Str1, const __wchar_t * _Str2, size_t _MaxCount); } 
#line 372 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _wcsncoll_l(const __wchar_t * _Str1, const __wchar_t * _Str2, size_t _MaxCount, _locale_t _Locale); } 
#line 373 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _wcsnicoll(const __wchar_t * _Str1, const __wchar_t * _Str2, size_t _MaxCount); } 
#line 374 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _wcsnicoll_l(const __wchar_t * _Str1, const __wchar_t * _Str2, size_t _MaxCount, _locale_t _Locale); } 
#line 382 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
inline __wchar_t *__cdecl wcschr(__wchar_t *_Str, __wchar_t _Ch) 
#line 383 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
{ return (__wchar_t *)wcschr((const __wchar_t *)_Str, _Ch); } 
#line 384 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
inline __wchar_t *__cdecl wcspbrk(__wchar_t *_Str, const __wchar_t *_Control) 
#line 385 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
{ return (__wchar_t *)wcspbrk((const __wchar_t *)_Str, _Control); } 
#line 386 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
inline __wchar_t *__cdecl wcsrchr(__wchar_t *_Str, __wchar_t _Ch) 
#line 387 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
{ return (__wchar_t *)wcsrchr((const __wchar_t *)_Str, _Ch); } 
#line 390 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
inline __wchar_t *__cdecl wcsstr(__wchar_t *_Str, const __wchar_t *_SubStr) 
#line 391 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
{ return (__wchar_t *)wcsstr((const __wchar_t *)_Str, _SubStr); } 
#line 403 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl wcsdup(const __wchar_t * _Str); } 
#line 413 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl wcsicmp(const __wchar_t * _Str1, const __wchar_t * _Str2); } 
#line 414 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl wcsnicmp(const __wchar_t * _Str1, const __wchar_t * _Str2, size_t _MaxCount); } 
#line 415 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl wcsnset(__wchar_t * _Str, __wchar_t _Val, size_t _MaxCount); } 
#line 416 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl wcsrev(__wchar_t * _Str); } 
#line 417 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl wcsset(__wchar_t * _Str, __wchar_t _Val); } 
#line 418 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl wcslwr(__wchar_t * _Str); } 
#line 419 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl wcsupr(__wchar_t * _Str); } 
#line 420 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\string.h"
extern "C" { __declspec(dllimport) int __cdecl wcsicoll(const __wchar_t * _Str1, const __wchar_t * _Str2); } 
#line 32 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
#pragma pack ( push, 8 )
#line 89 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { typedef long clock_t; }
#line 113 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { struct tm { 
#line 114 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
int tm_sec; 
#line 115 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
int tm_min; 
#line 116 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
int tm_hour; 
#line 117 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
int tm_mday; 
#line 118 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
int tm_mon; 
#line 119 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
int tm_year; 
#line 120 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
int tm_wday; 
#line 121 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
int tm_yday; 
#line 122 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
int tm_isdst; 
#line 123 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
}; }
#line 147 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) int *__cdecl __daylight(); } 
#line 151 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) long *__cdecl __dstbias(); } 
#line 155 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) long *__cdecl __timezone(); } 
#line 159 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) char **__cdecl __tzname(); } 
#line 162 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _get_daylight(int * _Daylight); } 
#line 163 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _get_dstbias(long * _Daylight_savings_bias); } 
#line 164 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _get_timezone(long * _Timezone); } 
#line 165 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _get_tzname(size_t * _ReturnValue, char * _Buffer, size_t _SizeInBytes, int _Index); } 
#line 174 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) char *__cdecl asctime(const tm * _Tm); } 
#line 176 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl asctime_s(char * _Buf, size_t _SizeInBytes, const tm * _Tm); } 
#line 178 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
template < size_t _Size > inline errno_t __cdecl asctime_s ( char ( & _Buffer ) [ _Size ], const struct tm * _Time ) throw ( ) { return asctime_s ( _Buffer, _Size, _Time ); }
#line 180 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) char *__cdecl _ctime32(const __time32_t * _Time); } 
#line 181 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _ctime32_s(char * _Buf, size_t _SizeInBytes, const __time32_t * _Time); } 
#line 182 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
template < size_t _Size > inline errno_t __cdecl _ctime32_s ( char ( & _Buffer ) [ _Size ], const __time32_t * _Time ) throw ( ) { return _ctime32_s ( _Buffer, _Size, _Time ); }
#line 184 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) clock_t __cdecl clock(); } 
#line 185 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) double __cdecl _difftime32(__time32_t _Time1, __time32_t _Time2); } 
#line 187 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) tm *__cdecl _gmtime32(const __time32_t * _Time); } 
#line 188 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _gmtime32_s(tm * _Tm, const __time32_t * _Time); } 
#line 190 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) tm *__cdecl _localtime32(const __time32_t * _Time); } 
#line 191 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _localtime32_s(tm * _Tm, const __time32_t * _Time); } 
#line 193 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) size_t __cdecl strftime(char * _Buf, size_t _SizeInBytes, const char * _Format, const tm * _Tm); } 
#line 194 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) size_t __cdecl _strftime_l(char * _Buf, size_t _Max_size, const char * _Format, const tm * _Tm, _locale_t _Locale); } 
#line 196 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _strdate_s(char * _Buf, size_t _SizeInBytes); } 
#line 197 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
template < size_t _Size > inline errno_t __cdecl _strdate_s ( char ( & _Buffer ) [ _Size ] ) throw ( ) { return _strdate_s ( _Buffer, _Size ); }
#line 198 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) char *__cdecl _strdate(char * _Buffer); } 
#line 200 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _strtime_s(char * _Buf, size_t _SizeInBytes); } 
#line 201 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
template < size_t _Size > inline errno_t __cdecl _strtime_s ( char ( & _Buffer ) [ _Size ] ) throw ( ) { return _strtime_s ( _Buffer, _Size ); }
#line 202 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) char *__cdecl _strtime(char * _Buffer); } 
#line 204 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) __time32_t __cdecl _time32(__time32_t * _Time); } 
#line 205 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) __time32_t __cdecl _mktime32(tm * _Tm); } 
#line 206 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) __time32_t __cdecl _mkgmtime32(tm * _Tm); } 
#line 210 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) void __cdecl _tzset(); } 
#line 214 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) double __cdecl _difftime64(__time64_t _Time1, __time64_t _Time2); } 
#line 215 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) char *__cdecl _ctime64(const __time64_t * _Time); } 
#line 216 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _ctime64_s(char * _Buf, size_t _SizeInBytes, const __time64_t * _Time); } 
#line 217 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
template < size_t _Size > inline errno_t __cdecl _ctime64_s ( char ( & _Buffer ) [ _Size ], const __time64_t * _Time ) throw ( ) { return _ctime64_s ( _Buffer, _Size, _Time ); }
#line 219 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) tm *__cdecl _gmtime64(const __time64_t * _Time); } 
#line 220 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _gmtime64_s(tm * _Tm, const __time64_t * _Time); } 
#line 222 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) tm *__cdecl _localtime64(const __time64_t * _Time); } 
#line 223 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _localtime64_s(tm * _Tm, const __time64_t * _Time); } 
#line 225 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) __time64_t __cdecl _mktime64(tm * _Tm); } 
#line 226 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) __time64_t __cdecl _mkgmtime64(tm * _Tm); } 
#line 227 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) __time64_t __cdecl _time64(__time64_t * _Time); } 
#line 231 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(deprecated("This function or variable has been superceded by newer library or operating system functionality. Consider using GetLocalTime in" "stead. See online help for details.")) unsigned __cdecl _getsystime(tm * _Tm); } 
#line 232 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(deprecated("This function or variable has been superceded by newer library or operating system functionality. Consider using SetLocalTime in" "stead. See online help for details.")) unsigned __cdecl _setsystime(tm * _Tm, unsigned _MilliSec); } 
#line 245 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wasctime(const tm * _Tm); } 
#line 246 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wasctime_s(__wchar_t * _Buf, size_t _SizeInWords, const tm * _Tm); } 
#line 247 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
template < size_t _Size > inline errno_t __cdecl _wasctime_s ( wchar_t ( & _Buffer ) [ _Size ], const struct tm * _Time ) throw ( ) { return _wasctime_s ( _Buffer, _Size, _Time ); }
#line 249 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wctime32(const __time32_t * _Time); } 
#line 250 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wctime32_s(__wchar_t * _Buf, size_t _SizeInWords, const __time32_t * _Time); } 
#line 251 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
template < size_t _Size > inline errno_t __cdecl _wctime32_s ( wchar_t ( & _Buffer ) [ _Size ], const __time32_t * _Time ) throw ( ) { return _wctime32_s ( _Buffer, _Size, _Time ); }
#line 253 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) size_t __cdecl wcsftime(__wchar_t * _Buf, size_t _SizeInWords, const __wchar_t * _Format, const tm * _Tm); } 
#line 254 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) size_t __cdecl _wcsftime_l(__wchar_t * _Buf, size_t _SizeInWords, const __wchar_t * _Format, const tm * _Tm, _locale_t _Locale); } 
#line 256 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wstrdate_s(__wchar_t * _Buf, size_t _SizeInWords); } 
#line 257 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
template < size_t _Size > inline errno_t __cdecl _wstrdate_s ( wchar_t ( & _Buffer ) [ _Size ] ) throw ( ) { return _wstrdate_s ( _Buffer, _Size ); }
#line 258 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wstrdate(__wchar_t * _Buffer); } 
#line 260 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wstrtime_s(__wchar_t * _Buf, size_t _SizeInWords); } 
#line 261 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
template < size_t _Size > inline errno_t __cdecl _wstrtime_s ( wchar_t ( & _Buffer ) [ _Size ] ) throw ( ) { return _wstrtime_s ( _Buffer, _Size ); }
#line 262 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wstrtime(__wchar_t * _Buffer); } 
#line 264 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wctime64(const __time64_t * _Time); } 
#line 265 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wctime64_s(__wchar_t * _Buf, size_t _SizeInWords, const __time64_t * _Time); } 
#line 266 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
template < size_t _Size > inline errno_t __cdecl _wctime64_s ( wchar_t ( & _Buffer ) [ _Size ], const __time64_t * _Time ) throw ( ) { return _wctime64_s ( _Buffer, _Size, _Time ); }
#line 27 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\wtime.inl"
#pragma warning(push)
#pragma warning(disable:4996)
#line 44 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\wtime.inl"
extern "C" { static __inline __wchar_t *__cdecl _wctime(const time_t *_Time) 
#line 45 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\wtime.inl"
{ 
#pragma warning( push )
#pragma warning( disable : 4996 )
return _wctime64(_Time); 
#pragma warning( pop )
} } 
#line 52 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\wtime.inl"
extern "C" { static __inline errno_t __cdecl _wctime_s(__wchar_t *_Buffer, size_t _SizeInWords, const time_t *_Time) 
#line 53 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\wtime.inl"
{ 
#line 54 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\wtime.inl"
return _wctime64_s(_Buffer, _SizeInWords, _Time); 
#line 55 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\wtime.inl"
} } 
#line 58 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\wtime.inl"
#pragma warning(pop)
#line 82 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
extern "C" { static __inline double __cdecl difftime(time_t _Time1, time_t _Time2) 
#line 83 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
{ 
#line 84 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
return _difftime64(_Time1, _Time2); 
#line 85 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
} } 
#line 86 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
extern "C" { static __inline char *__cdecl ctime(const time_t *_Time) 
#line 87 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
{ 
#pragma warning( push )
#pragma warning( disable : 4996 )
return _ctime64(_Time); 
#pragma warning( pop )
} } 
#line 94 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
extern "C" { static __inline errno_t __cdecl ctime_s(char *_Buffer, size_t _SizeInBytes, const time_t *_Time) 
#line 95 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
{ 
#line 96 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
return _ctime64_s(_Buffer, _SizeInBytes, _Time); 
#line 97 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
} } 
#line 99 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
extern "C" { static __inline tm *__cdecl gmtime(const time_t *_Time) 
#line 100 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
{ 
#pragma warning( push )
#pragma warning( disable : 4996 )
return _gmtime64(_Time); 
#pragma warning( pop )
} } 
#line 107 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
extern "C" { static __inline errno_t __cdecl gmtime_s(tm *_Tm, const time_t *_Time) 
#line 108 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
{ 
#line 109 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
return _gmtime64_s(_Tm, _Time); 
#line 110 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
} } 
#line 112 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
extern "C" { static __inline tm *__cdecl localtime(const time_t *_Time) 
#line 113 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
{ 
#pragma warning( push )
#pragma warning( disable : 4996 )
return _localtime64(_Time); 
#pragma warning( pop )
} } 
#line 119 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
extern "C" { static __inline errno_t __cdecl localtime_s(tm *_Tm, const time_t *_Time) 
#line 120 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
{ 
#line 121 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
return _localtime64_s(_Tm, _Time); 
#line 122 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
} } 
#line 123 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
extern "C" { static __inline time_t __cdecl mktime(tm *_Tm) 
#line 124 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
{ 
#line 125 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
return _mktime64(_Tm); 
#line 126 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
} } 
#line 127 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
extern "C" { static __inline time_t __cdecl _mkgmtime(tm *_Tm) 
#line 128 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
{ 
#line 129 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
return _mkgmtime64(_Tm); 
#line 130 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
} } 
#line 131 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
extern "C" { static __inline time_t __cdecl time(time_t *_Time) 
#line 132 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
{ 
#line 133 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
return _time64(_Time); 
#line 134 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.inl"
} } 
#line 291 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" __declspec(dllimport) int daylight; 
#line 292 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" __declspec(dllimport) long timezone; 
#line 293 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" __declspec(dllimport) char *tzname[2]; 
#line 297 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
extern "C" { __declspec(dllimport) void __cdecl tzset(); } 
#line 307 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\time.h"
#pragma pack ( pop )
#line 71 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\common_functions.h"
extern "C" { __declspec(dllimport) extern clock_t __cdecl clock(); } 
#line 72 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\common_functions.h"
extern "C" { extern void *__cdecl memset(void *, int, size_t); } 
#line 73 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\common_functions.h"
extern "C" { extern void *__cdecl memcpy(void *, const void *, size_t); } 
#line 151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern int __cdecl abs(int); } 
#line 152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern long __cdecl labs(long); } 
#line 153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern __int64 llabs(__int64); } 
#line 200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern double __cdecl fabs(double x); } 
#line 241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern __inline float fabsf(float x); } 
#line 245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern int min(int, int); } 
#line 247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern unsigned umin(unsigned, unsigned); } 
#line 248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern __int64 llmin(__int64, __int64); } 
#line 249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern unsigned __int64 ullmin(unsigned __int64, unsigned __int64); } 
#line 272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl fminf(float x, float y); } 
#line 292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl fmin(double x, double y); 
#line 297 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern int max(int, int); } 
#line 299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern unsigned umax(unsigned, unsigned); } 
#line 300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern __int64 llmax(__int64, __int64); } 
#line 301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern unsigned __int64 ullmax(unsigned __int64, unsigned __int64); } 
#line 324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl fmaxf(float x, float y); } 
#line 344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl fmax(double, double); 
#line 386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" double __cdecl sin(double x); 
#line 419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" double __cdecl cos(double x); 
#line 438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern void sincos(double x, double * sptr, double * cptr); } 
#line 454 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern void sincosf(float x, float * sptr, float * cptr); } 
#line 499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" double __cdecl tan(double x); 
#line 568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" double __cdecl sqrt(double x); 
#line 640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern double rsqrt(double x); } 
#line 710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern float rsqrtf(float x); } 
#line 768 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl log2(double x); 
#line 793 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl exp2(double x); 
#line 818 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl exp2f(float x); } 
#line 843 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern double exp10(double x); } 
#line 866 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern float exp10f(float x); } 
#line 914 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl expm1(double x); 
#line 959 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl expm1f(float x); } 
#line 1014 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl log2f(float x); } 
#line 1066 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" double __cdecl log10(double x); 
#line 1137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" double __cdecl log(double x); 
#line 1233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl log1p(double x); 
#line 1330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl log1pf(float x); } 
#line 1403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl floor(double x); 
#line 1442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" double __cdecl exp(double x); 
#line 1473 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" double __cdecl cosh(double x); 
#line 1503 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" double __cdecl sinh(double x); 
#line 1533 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" double __cdecl tanh(double x); 
#line 1570 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl acosh(double x); 
#line 1608 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl acoshf(float x); } 
#line 1624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl asinh(double x); 
#line 1640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl asinhf(float x); } 
#line 1694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl atanh(double x); 
#line 1748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl atanhf(float x); } 
#line 1805 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl ldexp(double x, int exp); 
#line 1861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern __inline float ldexpf(float x, int exp); } 
#line 1915 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl logb(double x); 
#line 1970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl logbf(float x); } 
#line 2000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" __declspec(dllimport) int __cdecl ilogb(double x); 
#line 2030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern int __cdecl ilogbf(float x); } 
#line 2106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl scalbn(double x, int n); 
#line 2182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl scalbnf(float x, int n); } 
#line 2258 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl scalbln(double x, long n); 
#line 2334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl scalblnf(float x, long n); } 
#line 2410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl frexp(double x, int * nptr); 
#line 2485 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern __inline float frexpf(float x, int * nptr); } 
#line 2501 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl round(double x); 
#line 2518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl roundf(float x); } 
#line 2536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" __declspec(dllimport) long __cdecl lround(double x); 
#line 2554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern long __cdecl lroundf(float x); } 
#line 2572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" __declspec(dllimport) __int64 __cdecl llround(double x); 
#line 2590 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern __int64 __cdecl llroundf(float x); } 
#line 2605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl rint(double x); 
#line 2620 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl rintf(float x); } 
#line 2636 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" __declspec(dllimport) long __cdecl lrint(double x); 
#line 2652 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern long __cdecl lrintf(float x); } 
#line 2668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" __declspec(dllimport) __int64 __cdecl llrint(double x); 
#line 2684 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern __int64 __cdecl llrintf(float x); } 
#line 2737 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl nearbyint(double x); 
#line 2790 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl nearbyintf(float x); } 
#line 2850 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl ceil(double x); 
#line 2864 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl trunc(double x); 
#line 2879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl truncf(float x); } 
#line 2905 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl fdim(double x, double y); 
#line 2931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl fdimf(float x, float y); } 
#line 2965 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" double __cdecl atan2(double y, double x); 
#line 2996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" double __cdecl atan(double x); 
#line 3019 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" double __cdecl acos(double x); 
#line 3051 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" double __cdecl asin(double x); 
#line 3091 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { static __inline double __cdecl hypot(double x, double y); } 
#line 3145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern double rhypot(double x, double y); } 
#line 3189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { static __inline float __cdecl hypotf(float x, float y); } 
#line 3243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern float rhypotf(float x, float y); } 
#line 3290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl norm3d(double a, double b, double c); } 
#line 3341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern double rnorm3d(double a, double b, double c); } 
#line 3390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl norm4d(double a, double b, double c, double d); } 
#line 3434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern float norm3df(float a, float b, float c); } 
#line 3485 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern float rnorm3df(float a, float b, float c); } 
#line 3534 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern float norm4df(float a, float b, float c, float d); } 
#line 3620 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl cbrt(double x); 
#line 3706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl cbrtf(float x); } 
#line 3759 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern double rcbrt(double x); } 
#line 3809 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern float rcbrtf(float x); } 
#line 3869 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern double sinpi(double x); } 
#line 3929 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern float sinpif(float x); } 
#line 3981 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern double cospi(double x); } 
#line 4033 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern float cospif(float x); } 
#line 4063 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern void sincospi(double x, double * sptr, double * cptr); } 
#line 4093 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern void sincospif(float x, float * sptr, float * cptr); } 
#line 4405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" double __cdecl pow(double x, double y); 
#line 4461 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl modf(double x, double * iptr); } 
#line 4520 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" double __cdecl fmod(double x, double y); 
#line 4608 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl remainder(double x, double y); 
#line 4698 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl remainderf(float x, float y); } 
#line 4752 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl remquo(double x, double y, int * quo); } 
#line 4806 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl remquof(float x, float y, int * quo); } 
#line 4845 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl j0(double x); } 
#line 4887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern float j0f(float x); } 
#line 4948 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl j1(double x); } 
#line 5009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern float j1f(float x); } 
#line 5052 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl jn(int n, double x); } 
#line 5095 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern float jnf(int n, float x); } 
#line 5147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl y0(double x); } 
#line 5199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern float y0f(float x); } 
#line 5251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl y1(double x); } 
#line 5303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern float y1f(float x); } 
#line 5356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl yn(int n, double x); } 
#line 5409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern float ynf(int n, float x); } 
#line 5436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl cyl_bessel_i0(double x); } 
#line 5462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern float cyl_bessel_i0f(float x); } 
#line 5489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl cyl_bessel_i1(double x); } 
#line 5515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern float cyl_bessel_i1f(float x); } 
#line 5600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl erf(double x); 
#line 5682 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl erff(float x); } 
#line 5744 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern double erfinv(double y); } 
#line 5801 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern float erfinvf(float y); } 
#line 5842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl erfc(double x); 
#line 5880 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl erfcf(float x); } 
#line 6008 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl lgamma(double x); 
#line 6069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern double erfcinv(double y); } 
#line 6125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern float erfcinvf(float y); } 
#line 6183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern double normcdfinv(double y); } 
#line 6241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern float normcdfinvf(float y); } 
#line 6284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern double normcdf(double y); } 
#line 6327 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern float normcdff(float y); } 
#line 6402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern double erfcx(double x); } 
#line 6477 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern float erfcxf(float x); } 
#line 6613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl lgammaf(float x); } 
#line 6722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl tgamma(double x); 
#line 6831 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl tgammaf(float x); } 
#line 6844 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl copysign(double x, double y); 
#line 6857 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl copysignf(float x, float y); } 
#line 6894 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl nextafter(double x, double y); 
#line 6931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl nextafterf(float x, float y); } 
#line 6947 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl nan(const char * tagp); } 
#line 6963 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl nanf(const char * tagp); } 
#line 6968 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern int __isinff(float); } 
#line 6969 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern int __isnanf(float); } 
#line 6979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern int __finite(double); } 
#line 6980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern int __finitef(float); } 
#line 6981 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern int __signbit(double); } 
#line 6982 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern int __isnan(double); } 
#line 6983 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern int __isinf(double); } 
#line 6986 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern int __signbitf(float); } 
#line 7147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl fma(double x, double y, double z); } 
#line 7305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl fmaf(float x, float y, float z); } 
#line 7314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern int __signbitl(long double); } 
#line 7320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern int __finitel(long double); } 
#line 7321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern int __isinfl(long double); } 
#line 7322 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { extern int __isnanl(long double); } 
#line 7326 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl acosf(float); } 
#line 7327 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl asinf(float); } 
#line 7328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl atanf(float); } 
#line 7329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl atan2f(float, float); } 
#line 7330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl cosf(float); } 
#line 7331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl sinf(float); } 
#line 7332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl tanf(float); } 
#line 7333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl coshf(float); } 
#line 7334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl sinhf(float); } 
#line 7335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl tanhf(float); } 
#line 7336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl expf(float); } 
#line 7337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl logf(float); } 
#line 7338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl log10f(float); } 
#line 7339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl modff(float, float *); } 
#line 7340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl powf(float, float); } 
#line 7341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl sqrtf(float); } 
#line 7342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl ceilf(float); } 
#line 7343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl floorf(float); } 
#line 7344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl fmodf(float, float); } 
#line 24 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
#pragma pack ( push, 8 )
#line 37 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { struct _exception { 
#line 38 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
int type; 
#line 39 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
char *name; 
#line 40 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
double arg1; 
#line 41 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
double arg2; 
#line 42 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
double retval; 
#line 43 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
}; }
#line 54 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { struct _complex { 
#line 55 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
double x, y; 
#line 56 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
}; }
#line 67 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { typedef float float_t; }
#line 68 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { typedef double double_t; }
#line 90 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double _HUGE; 
#line 184 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { void __cdecl _fperrraise(int _Except); } 
#line 186 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _dclass(double _X); } 
#line 187 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _ldclass(long double _X); } 
#line 188 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _fdclass(float _X); } 
#line 190 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) int __cdecl _dsign(double _X); } 
#line 191 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) int __cdecl _ldsign(long double _X); } 
#line 192 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) int __cdecl _fdsign(float _X); } 
#line 194 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) int __cdecl _dpcomp(double _X, double _Y); } 
#line 195 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) int __cdecl _ldpcomp(long double _X, long double _Y); } 
#line 196 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) int __cdecl _fdpcomp(float _X, float _Y); } 
#line 198 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _dtest(double * _Px); } 
#line 199 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _ldtest(long double * _Px); } 
#line 200 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _fdtest(float * _Px); } 
#line 202 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _d_int(double * _Px, short _Xexp); } 
#line 203 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _ld_int(long double * _Px, short _Xexp); } 
#line 204 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _fd_int(float * _Px, short _Xexp); } 
#line 206 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _dscale(double * _Px, long _Lexp); } 
#line 207 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _ldscale(long double * _Px, long _Lexp); } 
#line 208 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _fdscale(float * _Px, long _Lexp); } 
#line 210 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _dunscale(short * _Pex, double * _Px); } 
#line 211 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _ldunscale(short * _Pex, long double * _Px); } 
#line 212 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _fdunscale(short * _Pex, float * _Px); } 
#line 214 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _dexp(double * _Px, double _Y, long _Eoff); } 
#line 215 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _ldexp(long double * _Px, long double _Y, long _Eoff); } 
#line 216 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _fdexp(float * _Px, float _Y, long _Eoff); } 
#line 218 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _dnorm(unsigned short * _Ps); } 
#line 219 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _fdnorm(unsigned short * _Ps); } 
#line 221 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { double __cdecl _dpoly(double _X, const double * _Tab, int _N); } 
#line 222 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { long double __cdecl _ldpoly(long double _X, const long double * _Tab, int _N); } 
#line 223 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { float __cdecl _fdpoly(float _X, const float * _Tab, int _N); } 
#line 225 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl _dlog(double _X, int _Baseflag); } 
#line 226 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl _ldlog(long double _X, int _Baseflag); } 
#line 227 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl _fdlog(float _X, int _Baseflag); } 
#line 229 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl _dsin(double _X, unsigned _Qoff); } 
#line 230 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl _ldsin(long double _X, unsigned _Qoff); } 
#line 231 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl _fdsin(float _X, unsigned _Qoff); } 
#line 238 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { typedef 
#line 235 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
union { 
#line 236 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
unsigned short _Sh[8]; 
#line 237 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
double _Val; 
#line 238 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} _double_val; }
#line 245 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { typedef 
#line 242 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
union { 
#line 243 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
unsigned short _Sh[8]; 
#line 244 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
float _Val; 
#line 245 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} _float_val; }
#line 252 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { typedef 
#line 249 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
union { 
#line 250 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
unsigned short _Sh[8]; 
#line 251 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
long double _Val; 
#line 252 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} _ldouble_val; }
#line 260 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { typedef 
#line 255 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
union { 
#line 256 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
unsigned short _Word[8]; 
#line 257 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
float _Float; 
#line 258 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
double _Double; 
#line 259 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
long double _Long_double; 
#line 260 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} _float_const; }
#line 262 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" const _float_const _Denorm_C, _Inf_C, _Nan_C, _Snan_C, _Hugeval_C; 
#line 263 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" const _float_const _FDenorm_C, _FInf_C, _FNan_C, _FSnan_C; 
#line 264 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" const _float_const _LDenorm_C, _LInf_C, _LNan_C, _LSnan_C; 
#line 266 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" const _float_const _Eps_C, _Rteps_C; 
#line 267 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" const _float_const _FEps_C, _FRteps_C; 
#line 268 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" const _float_const _LEps_C, _LRteps_C; 
#line 270 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" const double _Zero_C, _Xbig_C; 
#line 271 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" const float _FZero_C, _FXbig_C; 
#line 272 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" const long double _LZero_C, _LXbig_C; 
#line 304 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
__declspec(nothrow) inline int fpclassify(float _X) 
#line 305 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 306 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return _fdtest(&_X); 
#line 307 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} 
#line 309 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
__declspec(nothrow) inline int fpclassify(double _X) 
#line 310 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 311 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return _dtest(&_X); 
#line 312 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} 
#line 314 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
__declspec(nothrow) inline int fpclassify(long double _X) 
#line 315 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 316 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return _ldtest(&_X); 
#line 317 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} 
#line 319 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
__declspec(nothrow) inline bool signbit(float _X) 
#line 320 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 321 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return _fdsign(_X) != 0; 
#line 322 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} 
#line 324 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
__declspec(nothrow) inline bool signbit(double _X) 
#line 325 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 326 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return _dsign(_X) != 0; 
#line 327 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} 
#line 329 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
__declspec(nothrow) inline bool signbit(long double _X) 
#line 330 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 331 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return _ldsign(_X) != 0; 
#line 332 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} 
#line 334 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
__declspec(nothrow) inline int _fpcomp(float _X, float _Y) 
#line 335 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 336 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return _fdpcomp(_X, _Y); 
#line 337 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} 
#line 339 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
__declspec(nothrow) inline int _fpcomp(double _X, double _Y) 
#line 340 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 341 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return _dpcomp(_X, _Y); 
#line 342 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} 
#line 344 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
__declspec(nothrow) inline int _fpcomp(long double _X, long double _Y) 
#line 345 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 346 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return _ldpcomp(_X, _Y); 
#line 347 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} 
#line 349 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
template< class _Trc, class _Tre> struct _Combined_type { 
#line 351 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
typedef float _Type; 
#line 352 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
}; 
#line 354 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
template<> struct _Combined_type< float, double>  { 
#line 356 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
typedef double _Type; 
#line 357 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
}; 
#line 359 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
template<> struct _Combined_type< float, long double>  { 
#line 361 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
typedef long double _Type; 
#line 362 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
}; 
#line 364 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
template< class _Ty, class _T2> struct _Real_widened { 
#line 366 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
typedef long double _Type; 
#line 367 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
}; 
#line 369 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
template<> struct _Real_widened< float, float>  { 
#line 371 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
typedef float _Type; 
#line 372 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
}; 
#line 374 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
template<> struct _Real_widened< float, double>  { 
#line 376 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
typedef double _Type; 
#line 377 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
}; 
#line 379 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
template<> struct _Real_widened< double, float>  { 
#line 381 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
typedef double _Type; 
#line 382 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
}; 
#line 384 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
template<> struct _Real_widened< double, double>  { 
#line 386 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
typedef double _Type; 
#line 387 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
}; 
#line 389 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
template< class _Ty> struct _Real_type { 
#line 391 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
typedef double _Type; 
#line 392 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
}; 
#line 394 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
template<> struct _Real_type< float>  { 
#line 396 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
typedef float _Type; 
#line 397 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
}; 
#line 399 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
template<> struct _Real_type< long double>  { 
#line 401 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
typedef long double _Type; 
#line 402 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
}; 
#line 404 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
template < class _T1, class _T2 > inline __declspec ( nothrow ) int _fpcomp ( _T1 _X, _T2 _Y )
{
    typedef typename _Combined_type < float,
        typename _Real_widened <
        typename _Real_type < _T1 > :: _Type,
        typename _Real_type < _T2 > :: _Type > :: _Type > :: _Type _Tw;
    return ( _fpcomp ( ( _Tw ) _X, ( _Tw ) _Y ) );
}
#line 413 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
template < class _Ty > inline __declspec ( nothrow ) bool isfinite ( _Ty _X )
{
    return ( fpclassify ( _X ) <= 0 );
}
#line 418 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
template < class _Ty > inline __declspec ( nothrow ) bool isinf ( _Ty _X )
{
    return ( fpclassify ( _X ) == 1 );
}
#line 423 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
template < class _Ty > inline __declspec ( nothrow ) bool isnan ( _Ty _X )
{
    return ( fpclassify ( _X ) == 2 );
}
#line 428 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
template < class _Ty > inline __declspec ( nothrow ) bool isnormal ( _Ty _X )
{
    return ( fpclassify ( _X ) == ( - 1 ) );
}
#line 433 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
template < class _Ty1, class _Ty2 > inline __declspec ( nothrow ) bool isgreater ( _Ty1 _X, _Ty2 _Y )
{
    return ( ( _fpcomp ( _X, _Y ) & 4 ) != 0 );
}
#line 438 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
template < class _Ty1, class _Ty2 > inline __declspec ( nothrow ) bool isgreaterequal ( _Ty1 _X, _Ty2 _Y )
{
    return ( ( _fpcomp ( _X, _Y ) & ( 2 | 4 ) ) != 0 );
}
#line 443 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
template < class _Ty1, class _Ty2 > inline __declspec ( nothrow ) bool isless ( _Ty1 _X, _Ty2 _Y )
{
    return ( ( _fpcomp ( _X, _Y ) & 1 ) != 0 );
}
#line 448 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
template < class _Ty1, class _Ty2 > inline __declspec ( nothrow ) bool islessequal ( _Ty1 _X, _Ty2 _Y )
{
    return ( ( _fpcomp ( _X, _Y ) & ( 1 | 2 ) ) != 0 );
}
#line 453 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
template < class _Ty1, class _Ty2 > inline __declspec ( nothrow ) bool islessgreater ( _Ty1 _X, _Ty2 _Y )
{
    return ( ( _fpcomp ( _X, _Y ) & ( 1 | 4 ) ) != 0 );
}
#line 458 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
template < class _Ty1, class _Ty2 > inline __declspec ( nothrow ) bool isunordered ( _Ty1 _X, _Ty2 _Y )
{
    return ( _fpcomp ( _X, _Y ) == 0 );
}
#line 470 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { int __cdecl abs(int _X); } 
#line 471 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { long __cdecl labs(long _X); } 
#line 472 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __int64 __cdecl llabs(__int64 _X); } 
#line 474 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" double __cdecl acos(double _X); 
#line 475 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl acosh(double _X); 
#line 476 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" double __cdecl asin(double _X); 
#line 477 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl asinh(double _X); 
#line 478 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" double __cdecl atan(double _X); 
#line 479 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl atanh(double _X); 
#line 480 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" double __cdecl atan2(double _Y, double _X); 
#line 482 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl cbrt(double _X); 
#line 483 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl copysign(double _X, double _Y); 
#line 484 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" double __cdecl cos(double _X); 
#line 485 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" double __cdecl cosh(double _X); 
#line 486 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl erf(double _X); 
#line 487 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl erfc(double _X); 
#line 488 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" double __cdecl exp(double _X); 
#line 489 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl exp2(double _X); 
#line 490 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl expm1(double _X); 
#line 491 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { double __cdecl fabs(double _X); } 
#line 492 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl fdim(double _X, double _Y); 
#line 493 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl fma(double _X, double _Y, double _Z); } 
#line 494 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl fmax(double _X, double _Y); 
#line 495 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl fmin(double _X, double _Y); 
#line 496 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" double __cdecl fmod(double _X, double _Y); 
#line 497 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) int __cdecl ilogb(double _X); 
#line 498 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl lgamma(double _X); 
#line 499 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) __int64 __cdecl llrint(double _X); 
#line 500 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) __int64 __cdecl llround(double _X); 
#line 501 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" double __cdecl log(double _X); 
#line 502 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" double __cdecl log10(double _X); 
#line 503 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl log1p(double _X); 
#line 504 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl log2(double _X); 
#line 505 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl logb(double _X); 
#line 506 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) long __cdecl lrint(double _X); 
#line 507 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) long __cdecl lround(double _X); 
#line 508 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl nan(const char *); } 
#line 509 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl nearbyint(double _X); 
#line 510 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl nextafter(double _X, double _Y); 
#line 511 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl nexttoward(double _X, long double _Y); 
#line 512 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" double __cdecl pow(double _X, double _Y); 
#line 513 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl remainder(double _X, double _Y); 
#line 514 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl remquo(double _X, double _Y, int * _Z); } 
#line 515 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl rint(double _X); 
#line 516 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl round(double _X); 
#line 517 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl scalbln(double _X, long _Y); 
#line 518 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl scalbn(double _X, int _Y); 
#line 519 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" double __cdecl sin(double _X); 
#line 520 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" double __cdecl sinh(double _X); 
#line 521 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" double __cdecl sqrt(double _X); 
#line 522 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" double __cdecl tan(double _X); 
#line 523 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" double __cdecl tanh(double _X); 
#line 524 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl tgamma(double _X); 
#line 525 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl trunc(double _X); 
#line 527 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl atof(const char * _String); } 
#line 528 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl _atof_l(const char * _String, _locale_t _Locale); } 
#line 530 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl _cabs(_complex _Complex_value); } 
#line 531 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl ceil(double _X); 
#line 533 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl _chgsign(double _X); } 
#line 534 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl _copysign(double _Number, double _Sign); } 
#line 536 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl floor(double _X); 
#line 537 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl frexp(double _X, int * _Y); 
#line 538 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl _hypot(double _X, double _Y); } 
#line 539 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl _j0(double _X); } 
#line 540 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl _j1(double _X); } 
#line 541 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl _jn(int _X, double _Y); } 
#line 542 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double __cdecl ldexp(double _X, int _Y); 
#line 547 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { int __cdecl _matherr(_exception * _Except); } 
#line 550 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl modf(double _X, double * _Y); } 
#line 551 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl _y0(double _X); } 
#line 552 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl _y1(double _X); } 
#line 553 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl _yn(int _X, double _Y); } 
#line 555 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline double __cdecl hypot(double _X, double _Y) 
#line 556 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 557 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return _hypot(_X, _Y); 
#line 558 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 561 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl acoshf(float _X); } 
#line 562 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl asinhf(float _X); } 
#line 563 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl atanhf(float _X); } 
#line 564 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl cbrtf(float _X); } 
#line 565 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl _chgsignf(float _X); } 
#line 566 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl copysignf(float _X, float _Y); } 
#line 567 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl _copysignf(float _Number, float _Sign); } 
#line 568 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl erff(float _X); } 
#line 569 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl erfcf(float _X); } 
#line 570 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl expm1f(float _X); } 
#line 571 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl exp2f(float _X); } 
#line 572 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl fdimf(float _X, float _Y); } 
#line 573 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl fmaf(float _X, float _Y, float _Z); } 
#line 574 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl fmaxf(float _X, float _Y); } 
#line 575 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl fminf(float _X, float _Y); } 
#line 576 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl _hypotf(float _X, float _Y); } 
#line 577 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) int __cdecl ilogbf(float _X); } 
#line 578 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl lgammaf(float _X); } 
#line 579 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) __int64 __cdecl llrintf(float _X); } 
#line 580 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) __int64 __cdecl llroundf(float _X); } 
#line 581 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl log1pf(float _X); } 
#line 582 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl log2f(float _X); } 
#line 583 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl logbf(float _X); } 
#line 584 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long __cdecl lrintf(float _X); } 
#line 585 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long __cdecl lroundf(float _X); } 
#line 586 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl nanf(const char *); } 
#line 587 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl nearbyintf(float _X); } 
#line 588 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl nextafterf(float _X, float _Y); } 
#line 589 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl nexttowardf(float _X, long double _Y); } 
#line 590 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl remainderf(float _X, float _Y); } 
#line 591 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl remquof(float _X, float _Y, int * _Z); } 
#line 592 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl rintf(float _X); } 
#line 593 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl roundf(float _X); } 
#line 594 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl scalblnf(float _X, long _Y); } 
#line 595 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl scalbnf(float _X, int _Y); } 
#line 596 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl tgammaf(float _X); } 
#line 597 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl truncf(float _X); } 
#line 607 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl _logbf(float _X); } 
#line 608 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl _nextafterf(float _X, float _Y); } 
#line 609 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) int __cdecl _finitef(float _X); } 
#line 610 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) int __cdecl _isnanf(float _X); } 
#line 611 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) int __cdecl _fpclassf(float _X); } 
#line 613 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) int __cdecl _set_FMA3_enable(int _Flag); } 
#line 626 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl acosf(float _X); } 
#line 627 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl asinf(float _X); } 
#line 628 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl atan2f(float _Y, float _X); } 
#line 629 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl atanf(float _X); } 
#line 630 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl ceilf(float _X); } 
#line 631 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl cosf(float _X); } 
#line 632 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl coshf(float _X); } 
#line 633 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl expf(float _X); } 
#line 685 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline float __cdecl fabsf(float _X) 
#line 686 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 687 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return (float)fabs(_X); 
#line 688 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 694 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl floorf(float _X); } 
#line 695 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl fmodf(float _X, float _Y); } 
#line 711 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline float __cdecl frexpf(float _X, int *_Y) 
#line 712 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 713 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return (float)frexp(_X, _Y); 
#line 714 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 716 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline float __cdecl hypotf(float _X, float _Y) 
#line 717 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 718 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return _hypotf(_X, _Y); 
#line 719 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 721 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline float __cdecl ldexpf(float _X, int _Y) 
#line 722 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 723 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return (float)ldexp(_X, _Y); 
#line 724 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 728 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl log10f(float _X); } 
#line 729 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl logf(float _X); } 
#line 730 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl modff(float _X, float * _Y); } 
#line 731 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl powf(float _X, float _Y); } 
#line 732 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl sinf(float _X); } 
#line 733 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl sinhf(float _X); } 
#line 734 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl sqrtf(float _X); } 
#line 735 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl tanf(float _X); } 
#line 736 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) float __cdecl tanhf(float _X); } 
#line 790 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl acoshl(long double _X); } 
#line 792 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline long double __cdecl acosl(long double _X) 
#line 793 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 794 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return acos((double)_X); 
#line 795 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 797 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl asinhl(long double _X); } 
#line 799 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline long double __cdecl asinl(long double _X) 
#line 800 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 801 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return asin((double)_X); 
#line 802 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 804 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline long double __cdecl atan2l(long double _Y, long double _X) 
#line 805 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 806 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return atan2((double)_Y, (double)_X); 
#line 807 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 809 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl atanhl(long double _X); } 
#line 811 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline long double __cdecl atanl(long double _X) 
#line 812 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 813 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return atan((double)_X); 
#line 814 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 816 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl cbrtl(long double _X); } 
#line 818 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline long double __cdecl ceill(long double _X) 
#line 819 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 820 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return ceil((double)_X); 
#line 821 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 823 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline long double __cdecl _chgsignl(long double _X) 
#line 824 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 825 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return _chgsign((double)_X); 
#line 826 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 828 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl copysignl(long double _X, long double _Y); } 
#line 830 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline long double __cdecl _copysignl(long double _X, long double _Y) 
#line 831 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 832 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return _copysign((double)_X, (double)_Y); 
#line 833 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 835 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline long double __cdecl coshl(long double _X) 
#line 836 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 837 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return cosh((double)_X); 
#line 838 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 840 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline long double __cdecl cosl(long double _X) 
#line 841 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 842 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return cos((double)_X); 
#line 843 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 845 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl erfl(long double _X); } 
#line 846 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl erfcl(long double _X); } 
#line 848 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline long double __cdecl expl(long double _X) 
#line 849 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 850 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return exp((double)_X); 
#line 851 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 853 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl exp2l(long double _X); } 
#line 854 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl expm1l(long double _X); } 
#line 856 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline long double __cdecl fabsl(long double _X) 
#line 857 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 858 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return fabs((double)_X); 
#line 859 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 861 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl fdiml(long double _X, long double _Y); } 
#line 863 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline long double __cdecl floorl(long double _X) 
#line 864 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 865 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return floor((double)_X); 
#line 866 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 868 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl fmal(long double _X, long double _Y, long double _Z); } 
#line 869 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl fmaxl(long double _X, long double _Y); } 
#line 870 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl fminl(long double _X, long double _Y); } 
#line 872 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline long double __cdecl fmodl(long double _X, long double _Y) 
#line 873 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 874 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return fmod((double)_X, (double)_Y); 
#line 875 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 877 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline long double __cdecl frexpl(long double _X, int *_Y) 
#line 878 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 879 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return frexp((double)_X, _Y); 
#line 880 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 882 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) int __cdecl ilogbl(long double _X); } 
#line 884 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline long double __cdecl _hypotl(long double _X, long double _Y) 
#line 885 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 886 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return _hypot((double)_X, (double)_Y); 
#line 887 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 889 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline long double __cdecl hypotl(long double _X, long double _Y) 
#line 890 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 891 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return _hypot((double)_X, (double)_Y); 
#line 892 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 894 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline long double __cdecl ldexpl(long double _X, int _Y) 
#line 895 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 896 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return ldexp((double)_X, _Y); 
#line 897 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 899 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl lgammal(long double _X); } 
#line 900 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) __int64 __cdecl llrintl(long double _X); } 
#line 901 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) __int64 __cdecl llroundl(long double _X); } 
#line 903 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline long double __cdecl logl(long double _X) 
#line 904 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 905 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return log((double)_X); 
#line 906 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 908 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline long double __cdecl log10l(long double _X) 
#line 909 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 910 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return log10((double)_X); 
#line 911 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 913 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl log1pl(long double _X); } 
#line 914 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl log2l(long double _X); } 
#line 915 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl logbl(long double _X); } 
#line 916 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long __cdecl lrintl(long double _X); } 
#line 917 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long __cdecl lroundl(long double _X); } 
#line 919 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline long double __cdecl modfl(long double _X, long double *_Y) 
#line 920 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 921 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
double _F, _I; 
#line 922 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
_F = modf((double)_X, &_I); 
#line 923 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
(*_Y) = _I; 
#line 924 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return _F; 
#line 925 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 926 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl nanl(const char *); } 
#line 927 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl nearbyintl(long double _X); } 
#line 928 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl nextafterl(long double _X, long double _Y); } 
#line 929 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl nexttowardl(long double _X, long double _Y); } 
#line 931 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline long double __cdecl powl(long double _X, long double _Y) 
#line 932 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 933 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return pow((double)_X, (double)_Y); 
#line 934 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 936 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl remainderl(long double _X, long double _Y); } 
#line 937 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl remquol(long double _X, long double _Y, int * _Z); } 
#line 938 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl rintl(long double _X); } 
#line 939 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl roundl(long double _X); } 
#line 940 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl scalblnl(long double _X, long _Y); } 
#line 941 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl scalbnl(long double _X, int _Y); } 
#line 943 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline long double __cdecl sinhl(long double _X) 
#line 944 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 945 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return sinh((double)_X); 
#line 946 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 948 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline long double __cdecl sinl(long double _X) 
#line 949 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 950 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return sin((double)_X); 
#line 951 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 953 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline long double __cdecl sqrtl(long double _X) 
#line 954 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 955 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return sqrt((double)_X); 
#line 956 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 958 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline long double __cdecl tanhl(long double _X) 
#line 959 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 960 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return tanh((double)_X); 
#line 961 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 963 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __inline long double __cdecl tanl(long double _X) 
#line 964 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ 
#line 965 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
return tan((double)_X); 
#line 966 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
} } 
#line 968 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl tgammal(long double _X); } 
#line 969 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl truncl(long double _X); } 
#line 992 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" __declspec(dllimport) double HUGE; 
#line 997 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl j0(double _X); } 
#line 998 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl j1(double _X); } 
#line 999 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl jn(int _X, double _Y); } 
#line 1000 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl y0(double _X); } 
#line 1001 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl y1(double _X); } 
#line 1002 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
extern "C" { __declspec(dllimport) double __cdecl yn(int _X, double _Y); } 
#line 1012 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
template < class _Ty > inline
        _Ty _Pow_int ( _Ty _X, int _Y ) throw ( )
        { unsigned int _N;
        if ( _Y >= 0 )
                _N = ( unsigned int ) _Y;
        else
                _N = ( unsigned int ) ( - _Y );
        for ( _Ty _Z = _Ty ( 1 );; _X *= _X )
                { if ( ( _N & 1 ) != 0 )
                        _Z *= _X;
                if ( ( _N >>= 1 ) == 0 )
                        return ( _Y < 0 ? _Ty ( 1 ) / _Z : _Z ); } }
#line 1025 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline double __cdecl abs(double _X) throw() 
#line 1026 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return fabs(_X); } 
#line 1027 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline double __cdecl pow(double _X, int _Y) throw() 
#line 1028 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return _Pow_int(_X, _Y); } 
#line 1029 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl abs(float _X) throw() 
#line 1030 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return fabsf(_X); } 
#line 1031 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl acos(float _X) throw() 
#line 1032 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return acosf(_X); } 
#line 1033 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl acosh(float _X) throw() 
#line 1034 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return acoshf(_X); } 
#line 1035 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl asin(float _X) throw() 
#line 1036 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return asinf(_X); } 
#line 1037 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl asinh(float _X) throw() 
#line 1038 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return asinhf(_X); } 
#line 1039 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl atan(float _X) throw() 
#line 1040 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return atanf(_X); } 
#line 1041 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl atanh(float _X) throw() 
#line 1042 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return atanhf(_X); } 
#line 1043 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl atan2(float _Y, float _X) throw() 
#line 1044 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return atan2f(_Y, _X); } 
#line 1045 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl cbrt(float _X) throw() 
#line 1046 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return cbrtf(_X); } 
#line 1047 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl ceil(float _X) throw() 
#line 1048 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return ceilf(_X); } 
#line 1049 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl copysign(float _X, float _Y) throw() 
#line 1050 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return copysignf(_X, _Y); } 
#line 1051 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl cos(float _X) throw() 
#line 1052 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return cosf(_X); } 
#line 1053 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl cosh(float _X) throw() 
#line 1054 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return coshf(_X); } 
#line 1055 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl erf(float _X) throw() 
#line 1056 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return erff(_X); } 
#line 1057 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl erfc(float _X) throw() 
#line 1058 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return erfcf(_X); } 
#line 1059 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl exp(float _X) throw() 
#line 1060 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return expf(_X); } 
#line 1061 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl exp2(float _X) throw() 
#line 1062 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return exp2f(_X); } 
#line 1063 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl expm1(float _X) throw() 
#line 1064 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return expm1f(_X); } 
#line 1065 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl fabs(float _X) throw() 
#line 1066 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return fabsf(_X); } 
#line 1067 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl fdim(float _X, float _Y) throw() 
#line 1068 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return fdimf(_X, _Y); } 
#line 1069 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl floor(float _X) throw() 
#line 1070 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return floorf(_X); } 
#line 1071 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl fma(float _X, float _Y, float _Z) throw() 
#line 1072 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return fmaf(_X, _Y, _Z); } 
#line 1073 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl fmax(float _X, float _Y) throw() 
#line 1074 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return fmaxf(_X, _Y); } 
#line 1075 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl fmin(float _X, float _Y) throw() 
#line 1076 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return fminf(_X, _Y); } 
#line 1077 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl fmod(float _X, float _Y) throw() 
#line 1078 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return fmodf(_X, _Y); } 
#line 1079 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl frexp(float _X, int *_Y) throw() 
#line 1080 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return frexpf(_X, _Y); } 
#line 1081 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl hypot(float _X, float _Y) throw() 
#line 1082 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return hypotf(_X, _Y); } 
#line 1083 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline int __cdecl ilogb(float _X) throw() 
#line 1084 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return ilogbf(_X); } 
#line 1085 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl ldexp(float _X, int _Y) throw() 
#line 1086 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return ldexpf(_X, _Y); } 
#line 1087 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl lgamma(float _X) throw() 
#line 1088 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return lgammaf(_X); } 
#line 1089 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline __int64 __cdecl llrint(float _X) throw() 
#line 1090 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return llrintf(_X); } 
#line 1091 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline __int64 __cdecl llround(float _X) throw() 
#line 1092 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return llroundf(_X); } 
#line 1093 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl log(float _X) throw() 
#line 1094 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return logf(_X); } 
#line 1095 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl log10(float _X) throw() 
#line 1096 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return log10f(_X); } 
#line 1097 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl log1p(float _X) throw() 
#line 1098 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return log1pf(_X); } 
#line 1099 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl log2(float _X) throw() 
#line 1100 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return log2f(_X); } 
#line 1101 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl logb(float _X) throw() 
#line 1102 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return logbf(_X); } 
#line 1103 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long __cdecl lrint(float _X) throw() 
#line 1104 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return lrintf(_X); } 
#line 1105 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long __cdecl lround(float _X) throw() 
#line 1106 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return lroundf(_X); } 
#line 1107 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl modf(float _X, float *_Y) throw() 
#line 1108 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return modff(_X, _Y); } 
#line 1109 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl nearbyint(float _X) throw() 
#line 1110 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return nearbyintf(_X); } 
#line 1111 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl nextafter(float _X, float _Y) throw() 
#line 1112 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return nextafterf(_X, _Y); } 
#line 1113 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl nexttoward(float _X, long double _Y) throw() 
#line 1114 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return nexttowardf(_X, _Y); } 
#line 1115 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl pow(float _X, float _Y) throw() 
#line 1116 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return powf(_X, _Y); } 
#line 1117 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl pow(float _X, int _Y) throw() 
#line 1118 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return _Pow_int(_X, _Y); } 
#line 1119 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl remainder(float _X, float _Y) throw() 
#line 1120 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return remainderf(_X, _Y); } 
#line 1121 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl remquo(float _X, float _Y, int *_Z) throw() 
#line 1122 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return remquof(_X, _Y, _Z); } 
#line 1123 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl rint(float _X) throw() 
#line 1124 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return rintf(_X); } 
#line 1125 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl round(float _X) throw() 
#line 1126 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return roundf(_X); } 
#line 1127 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl scalbln(float _X, long _Y) throw() 
#line 1128 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return scalblnf(_X, _Y); } 
#line 1129 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl scalbn(float _X, int _Y) throw() 
#line 1130 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return scalbnf(_X, _Y); } 
#line 1131 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl sin(float _X) throw() 
#line 1132 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return sinf(_X); } 
#line 1133 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl sinh(float _X) throw() 
#line 1134 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return sinhf(_X); } 
#line 1135 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl sqrt(float _X) throw() 
#line 1136 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return sqrtf(_X); } 
#line 1137 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl tan(float _X) throw() 
#line 1138 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return tanf(_X); } 
#line 1139 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl tanh(float _X) throw() 
#line 1140 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return tanhf(_X); } 
#line 1141 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl tgamma(float _X) throw() 
#line 1142 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return tgammaf(_X); } 
#line 1143 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline float __cdecl trunc(float _X) throw() 
#line 1144 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return truncf(_X); } 
#line 1145 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl abs(long double _X) throw() 
#line 1146 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return fabsl(_X); } 
#line 1147 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl acos(long double _X) throw() 
#line 1148 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return acosl(_X); } 
#line 1149 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl acosh(long double _X) throw() 
#line 1150 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return acoshl(_X); } 
#line 1151 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl asin(long double _X) throw() 
#line 1152 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return asinl(_X); } 
#line 1153 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl asinh(long double _X) throw() 
#line 1154 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return asinhl(_X); } 
#line 1155 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl atan(long double _X) throw() 
#line 1156 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return atanl(_X); } 
#line 1157 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl atanh(long double _X) throw() 
#line 1158 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return atanhl(_X); } 
#line 1159 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl atan2(long double _Y, long double _X) throw() 
#line 1160 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return atan2l(_Y, _X); } 
#line 1161 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl cbrt(long double _X) throw() 
#line 1162 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return cbrtl(_X); } 
#line 1163 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl ceil(long double _X) throw() 
#line 1164 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return ceill(_X); } 
#line 1165 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl copysign(long double _X, long double _Y) throw() 
#line 1166 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return copysignl(_X, _Y); } 
#line 1167 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl cos(long double _X) throw() 
#line 1168 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return cosl(_X); } 
#line 1169 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl cosh(long double _X) throw() 
#line 1170 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return coshl(_X); } 
#line 1171 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl erf(long double _X) throw() 
#line 1172 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return erfl(_X); } 
#line 1173 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl erfc(long double _X) throw() 
#line 1174 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return erfcl(_X); } 
#line 1175 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl exp(long double _X) throw() 
#line 1176 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return expl(_X); } 
#line 1177 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl exp2(long double _X) throw() 
#line 1178 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return exp2l(_X); } 
#line 1179 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl expm1(long double _X) throw() 
#line 1180 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return expm1l(_X); } 
#line 1181 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl fabs(long double _X) throw() 
#line 1182 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return fabsl(_X); } 
#line 1183 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl fdim(long double _X, long double _Y) throw() 
#line 1184 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return fdiml(_X, _Y); } 
#line 1185 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl floor(long double _X) throw() 
#line 1186 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return floorl(_X); } 
#line 1187 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl fma(long double _X, long double _Y, long double _Z) throw() 
#line 1188 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return fmal(_X, _Y, _Z); } 
#line 1189 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl fmax(long double _X, long double _Y) throw() 
#line 1190 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return fmaxl(_X, _Y); } 
#line 1191 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl fmin(long double _X, long double _Y) throw() 
#line 1192 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return fminl(_X, _Y); } 
#line 1193 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl fmod(long double _X, long double _Y) throw() 
#line 1194 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return fmodl(_X, _Y); } 
#line 1195 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl frexp(long double _X, int *_Y) throw() 
#line 1196 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return frexpl(_X, _Y); } 
#line 1197 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl hypot(long double _X, long double _Y) throw() 
#line 1198 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return hypotl(_X, _Y); } 
#line 1199 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline int __cdecl ilogb(long double _X) throw() 
#line 1200 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return ilogbl(_X); } 
#line 1201 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl ldexp(long double _X, int _Y) throw() 
#line 1202 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return ldexpl(_X, _Y); } 
#line 1203 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl lgamma(long double _X) throw() 
#line 1204 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return lgammal(_X); } 
#line 1205 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline __int64 __cdecl llrint(long double _X) throw() 
#line 1206 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return llrintl(_X); } 
#line 1207 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline __int64 __cdecl llround(long double _X) throw() 
#line 1208 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return llroundl(_X); } 
#line 1209 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl log(long double _X) throw() 
#line 1210 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return logl(_X); } 
#line 1211 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl log10(long double _X) throw() 
#line 1212 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return log10l(_X); } 
#line 1213 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl log1p(long double _X) throw() 
#line 1214 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return log1pl(_X); } 
#line 1215 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl log2(long double _X) throw() 
#line 1216 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return log2l(_X); } 
#line 1217 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl logb(long double _X) throw() 
#line 1218 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return logbl(_X); } 
#line 1219 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long __cdecl lrint(long double _X) throw() 
#line 1220 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return lrintl(_X); } 
#line 1221 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long __cdecl lround(long double _X) throw() 
#line 1222 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return lroundl(_X); } 
#line 1223 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl modf(long double _X, long double *_Y) throw() 
#line 1224 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return modfl(_X, _Y); } 
#line 1225 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl nearbyint(long double _X) throw() 
#line 1226 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return nearbyintl(_X); } 
#line 1227 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl nextafter(long double _X, long double _Y) throw() 
#line 1228 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return nextafterl(_X, _Y); } 
#line 1229 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl nexttoward(long double _X, long double _Y) throw() 
#line 1230 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return nexttowardl(_X, _Y); } 
#line 1231 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl pow(long double _X, long double _Y) throw() 
#line 1232 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return powl(_X, _Y); } 
#line 1233 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl pow(long double _X, int _Y) throw() 
#line 1234 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return _Pow_int(_X, _Y); } 
#line 1235 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl remainder(long double _X, long double _Y) throw() 
#line 1236 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return remainderl(_X, _Y); } 
#line 1237 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl remquo(long double _X, long double _Y, int *_Z) throw() 
#line 1238 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return remquol(_X, _Y, _Z); } 
#line 1239 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl rint(long double _X) throw() 
#line 1240 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return rintl(_X); } 
#line 1241 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl round(long double _X) throw() 
#line 1242 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return roundl(_X); } 
#line 1243 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl scalbln(long double _X, long _Y) throw() 
#line 1244 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return scalblnl(_X, _Y); } 
#line 1245 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl scalbn(long double _X, int _Y) throw() 
#line 1246 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return scalbnl(_X, _Y); } 
#line 1247 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl sin(long double _X) throw() 
#line 1248 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return sinl(_X); } 
#line 1249 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl sinh(long double _X) throw() 
#line 1250 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return sinhl(_X); } 
#line 1251 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl sqrt(long double _X) throw() 
#line 1252 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return sqrtl(_X); } 
#line 1253 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl tan(long double _X) throw() 
#line 1254 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return tanl(_X); } 
#line 1255 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl tanh(long double _X) throw() 
#line 1256 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return tanhl(_X); } 
#line 1257 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl tgamma(long double _X) throw() 
#line 1258 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return tgammal(_X); } 
#line 1259 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
inline long double __cdecl trunc(long double _X) throw() 
#line 1260 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
{ return truncl(_X); } 
#line 1265 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\math.h"
#pragma pack ( pop )
#line 28 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
#pragma pack ( push, 8 )
#line 52 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { typedef int (__cdecl *_onexit_t)(void); }
#line 78 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { typedef 
#line 75 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
struct _div_t { 
#line 76 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
int quot; 
#line 77 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
int rem; 
#line 78 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
} div_t; }
#line 83 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { typedef 
#line 80 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
struct _ldiv_t { 
#line 81 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
long quot; 
#line 82 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
long rem; 
#line 83 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
} ldiv_t; }
#line 88 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { typedef 
#line 85 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
struct _lldiv_t { 
#line 86 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
__int64 quot; 
#line 87 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
__int64 rem; 
#line 88 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
} lldiv_t; }
#line 102 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
#pragma pack ( 4 )
#line 105 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { typedef 
#line 103 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
struct { 
#line 104 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
unsigned char ld[10]; 
#line 105 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
} _LDOUBLE; }
#pragma pack ( )
#line 124 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { typedef 
#line 122 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
struct { 
#line 123 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
double x; 
#line 124 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
} _CRT_DOUBLE; }
#line 128 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { typedef 
#line 126 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
struct { 
#line 127 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
float f; 
#line 128 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
} _CRT_FLOAT; }
#line 139 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { typedef 
#line 134 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
struct { 
#line 138 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
long double x; 
#line 139 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
} _LONGDOUBLE; }
#line 143 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
#pragma pack ( 4 )
#line 146 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { typedef 
#line 144 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
struct { 
#line 145 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
unsigned char ld12[12]; 
#line 146 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
} _LDBL12; }
#pragma pack ( )
#line 170 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" __declspec(dllimport) int __mb_cur_max; 
#line 175 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl ___mb_cur_max_func(); } 
#line 176 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl ___mb_cur_max_l_func(_locale_t); } 
#line 215 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { typedef void (__cdecl *_purecall_handler)(void); }
#line 218 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) _purecall_handler __cdecl _set_purecall_handler(_purecall_handler _Handler); } 
#line 219 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) _purecall_handler __cdecl _get_purecall_handler(); } 
#line 235 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { typedef void (__cdecl *_invalid_parameter_handler)(const __wchar_t *, const __wchar_t *, const __wchar_t *, unsigned, uintptr_t); }
#line 238 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) _invalid_parameter_handler __cdecl _set_invalid_parameter_handler(_invalid_parameter_handler _Handler); } 
#line 239 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) _invalid_parameter_handler __cdecl _get_invalid_parameter_handler(); } 
#line 252 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) unsigned long *__cdecl __doserrno(); } 
#line 255 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { errno_t __cdecl _set_doserrno(unsigned long _Value); } 
#line 256 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { errno_t __cdecl _get_doserrno(unsigned long * _Value); } 
#line 259 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char **__cdecl __sys_errlist(); } 
#line 262 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int *__cdecl __sys_nerr(); } 
#line 288 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" __declspec(dllimport) int __argc; 
#line 289 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" __declspec(dllimport) char **__argv; 
#line 290 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" __declspec(dllimport) __wchar_t **__wargv; 
#line 306 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" __declspec(dllimport) char **_environ; 
#line 307 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" __declspec(dllimport) __wchar_t **_wenviron; 
#line 311 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" __declspec(dllimport) char *_pgmptr; 
#line 312 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" __declspec(dllimport) __wchar_t *_wpgmptr; 
#line 339 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { errno_t __cdecl _get_pgmptr(char ** _Value); } 
#line 340 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { errno_t __cdecl _get_wpgmptr(__wchar_t ** _Value); } 
#line 346 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" __declspec(dllimport) int _fmode; 
#line 353 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _set_fmode(int _Mode); } 
#line 354 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _get_fmode(int * _PMode); } 
#line 363 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
template< class _CountofType, size_t _SizeOfArray> char (*__countof_helper(__unaligned _CountofType (& _Array)[_SizeOfArray]))[_SizeOfArray]; 
#line 376 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noreturn) void __cdecl exit(int _Code); } 
#line 378 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noreturn) void __cdecl _exit(int _Code); } 
#line 379 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noreturn) void __cdecl abort(); } 
#line 382 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) unsigned __cdecl _set_abort_behavior(unsigned _Flags, unsigned _Mask); } 
#line 384 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { int __cdecl abs(int _X); } 
#line 385 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { long __cdecl labs(long _X); } 
#line 386 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __int64 __cdecl llabs(__int64 _X); } 
#line 388 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __int64 __cdecl _abs64(__int64); } 
#line 426 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { int __cdecl atexit(void (__cdecl *)(void)); } 
#line 428 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) double __cdecl atof(const char * _String); } 
#line 429 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) double __cdecl _atof_l(const char * _String, _locale_t _Locale); } 
#line 430 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl atoi(const char * _Str); } 
#line 431 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _atoi_l(const char * _Str, _locale_t _Locale); } 
#line 432 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) long __cdecl atol(const char * _Str); } 
#line 433 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) long __cdecl _atol_l(const char * _Str, _locale_t _Locale); } 
#line 434 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl atoll(const char * _Str); } 
#line 435 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl _atoll_l(const char * _Str, _locale_t _Locale); } 
#line 439 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) void *__cdecl bsearch_s(const void * _Key, const void * _Base, rsize_t _NumOfElements, rsize_t _SizeOfElements, int (__cdecl * _PtFuncCompare)(void *, const void *, const void *), void * _Context); } 
#line 443 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) void *__cdecl bsearch(const void * _Key, const void * _Base, size_t _NumOfElements, size_t _SizeOfElements, int (__cdecl * _PtFuncCompare)(const void *, const void *)); } 
#line 448 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) void __cdecl qsort_s(void * _Base, rsize_t _NumOfElements, rsize_t _SizeOfElements, int (__cdecl * _PtFuncCompare)(void *, const void *, const void *), void * _Context); } 
#line 452 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) void __cdecl qsort(void * _Base, size_t _NumOfElements, size_t _SizeOfElements, int (__cdecl * _PtFuncCompare)(const void *, const void *)); } 
#line 456 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { unsigned short __cdecl _byteswap_ushort(unsigned short _Short); } 
#line 457 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { unsigned long __cdecl _byteswap_ulong(unsigned long _Long); } 
#line 458 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { unsigned __int64 __cdecl _byteswap_uint64(unsigned __int64 _Int64); } 
#line 459 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) div_t __cdecl div(int _Numerator, int _Denominator); } 
#line 462 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl getenv(const char * _VarName); } 
#line 464 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl getenv_s(size_t * _ReturnSize, char * _DstBuf, rsize_t _DstSize, const char * _VarName); } 
#line 466 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl getenv_s ( size_t * _ReturnSize, char ( & _Dest ) [ _Size ], const char * _VarName ) throw ( ) { return getenv_s ( _ReturnSize, _Dest, _Size, _VarName ); }
#line 472 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _dupenv_s(char ** _PBuffer, size_t * _PBufferSizeInBytes, const char * _VarName); } 
#line 479 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _itoa_s(int _Value, char * _DstBuf, size_t _Size, int _Radix); } 
#line 480 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _itoa_s ( int _Value, char ( & _Dest ) [ _Size ], int _Radix ) throw ( ) { return _itoa_s ( _Value, _Dest, _Size, _Radix ); }
#line 481 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl _itoa(int _Value, char * _Dest, int _Radix); } 
#line 482 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _i64toa_s(__int64 _Val, char * _DstBuf, size_t _Size, int _Radix); } 
#line 483 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl _i64toa(__int64 _Val, char * _DstBuf, int _Radix); } 
#line 484 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _ui64toa_s(unsigned __int64 _Val, char * _DstBuf, size_t _Size, int _Radix); } 
#line 485 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl _ui64toa(unsigned __int64 _Val, char * _DstBuf, int _Radix); } 
#line 486 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl _atoi64(const char * _String); } 
#line 487 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl _atoi64_l(const char * _String, _locale_t _Locale); } 
#line 488 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl _strtoi64(const char * _String, char ** _EndPtr, int _Radix); } 
#line 489 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl _strtoi64_l(const char * _String, char ** _EndPtr, int _Radix, _locale_t _Locale); } 
#line 490 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) unsigned __int64 __cdecl _strtoui64(const char * _String, char ** _EndPtr, int _Radix); } 
#line 491 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) unsigned __int64 __cdecl _strtoui64_l(const char * _String, char ** _EndPtr, int _Radix, _locale_t _Locale); } 
#line 492 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) ldiv_t __cdecl ldiv(long _Numerator, long _Denominator); } 
#line 493 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) lldiv_t __cdecl lldiv(__int64 _Numerator, __int64 _Denominator); } 
#line 497 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
inline long abs(long _X) throw() 
#line 498 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
{ 
#line 499 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
return labs(_X); 
#line 500 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
} 
#line 501 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
inline __int64 abs(__int64 _X) throw() 
#line 502 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
{ 
#line 503 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
return llabs(_X); 
#line 504 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
} 
#line 505 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
inline ldiv_t div(long _A1, long _A2) throw() 
#line 506 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
{ 
#line 507 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
return ldiv(_A1, _A2); 
#line 508 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
} 
#line 509 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
inline lldiv_t div(__int64 _A1, __int64 _A2) throw() 
#line 510 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
{ 
#line 511 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
return lldiv(_A1, _A2); 
#line 512 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
} 
#line 515 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _ltoa_s(long _Val, char * _DstBuf, size_t _Size, int _Radix); } 
#line 516 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _ltoa_s ( long _Value, char ( & _Dest ) [ _Size ], int _Radix ) throw ( ) { return _ltoa_s ( _Value, _Dest, _Size, _Radix ); }
#line 517 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl _ltoa(long _Value, char * _Dest, int _Radix); } 
#line 518 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl mblen(const char * _Ch, size_t _MaxCount); } 
#line 519 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _mblen_l(const char * _Ch, size_t _MaxCount, _locale_t _Locale); } 
#line 520 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) size_t __cdecl _mbstrlen(const char * _Str); } 
#line 521 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) size_t __cdecl _mbstrlen_l(const char * _Str, _locale_t _Locale); } 
#line 522 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) size_t __cdecl _mbstrnlen(const char * _Str, size_t _MaxCount); } 
#line 523 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) size_t __cdecl _mbstrnlen_l(const char * _Str, size_t _MaxCount, _locale_t _Locale); } 
#line 524 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl mbtowc(__wchar_t * _DstCh, const char * _SrcCh, size_t _SrcSizeInBytes); } 
#line 525 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _mbtowc_l(__wchar_t * _DstCh, const char * _SrcCh, size_t _SrcSizeInBytes, _locale_t _Locale); } 
#line 526 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl mbstowcs_s(size_t * _PtNumOfCharConverted, __wchar_t * _DstBuf, size_t _SizeInWords, const char * _SrcBuf, size_t _MaxCount); } 
#line 527 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl mbstowcs_s ( size_t * _PtNumOfCharConverted, wchar_t ( & _Dest ) [ _Size ], const char * _Source, size_t _MaxCount ) throw ( ) { return mbstowcs_s ( _PtNumOfCharConverted, _Dest, _Size, _Source, _MaxCount ); }
#line 528 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) size_t __cdecl mbstowcs(__wchar_t * _Dest, const char * _Source, size_t _MaxCount); } 
#line 530 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _mbstowcs_s_l(size_t * _PtNumOfCharConverted, __wchar_t * _DstBuf, size_t _SizeInWords, const char * _SrcBuf, size_t _MaxCount, _locale_t _Locale); } 
#line 531 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _mbstowcs_s_l ( size_t * _PtNumOfCharConverted, wchar_t ( & _Dest ) [ _Size ], const char * _Source, size_t _MaxCount, _locale_t _Locale ) throw ( ) { return _mbstowcs_s_l ( _PtNumOfCharConverted, _Dest, _Size, _Source, _MaxCount, _Locale ); }
#line 532 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) size_t __cdecl _mbstowcs_l(__wchar_t * _Dest, const char * _Source, size_t _MaxCount, _locale_t _Locale); } 
#line 534 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl rand(); } 
#line 539 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _set_error_mode(int _Mode); } 
#line 541 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) void __cdecl srand(unsigned _Seed); } 
#line 542 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) double __cdecl strtod(const char * _Str, char ** _EndPtr); } 
#line 543 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) double __cdecl _strtod_l(const char * _Str, char ** _EndPtr, _locale_t _Locale); } 
#line 544 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) long __cdecl strtol(const char * _Str, char ** _EndPtr, int _Radix); } 
#line 545 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) long __cdecl _strtol_l(const char * _Str, char ** _EndPtr, int _Radix, _locale_t _Locale); } 
#line 546 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl strtoll(const char * _Str, char ** _EndPtr, int _Radix); } 
#line 547 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl _strtoll_l(const char * _Str, char ** _EndPtr, int _Radix, _locale_t _Locale); } 
#line 548 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) unsigned long __cdecl strtoul(const char * _Str, char ** _EndPtr, int _Radix); } 
#line 549 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) unsigned long __cdecl _strtoul_l(const char * _Str, char ** _EndPtr, int _Radix, _locale_t _Locale); } 
#line 550 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) unsigned __int64 __cdecl strtoull(const char * _Str, char ** _EndPtr, int _Radix); } 
#line 551 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) unsigned __int64 __cdecl _strtoull_l(const char * _Str, char ** _EndPtr, int _Radix, _locale_t _Locale); } 
#line 552 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) long double __cdecl strtold(const char * _Str, char ** _EndPtr); } 
#line 553 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) long double __cdecl _strtold_l(const char * _Str, char ** _EndPtr, _locale_t _Locale); } 
#line 554 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) float __cdecl strtof(const char * _Str, char ** _EndPtr); } 
#line 555 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) float __cdecl _strtof_l(const char * _Str, char ** _EndPtr, _locale_t _Locale); } 
#line 560 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl system(const char * _Command); } 
#line 564 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _ultoa_s(unsigned long _Val, char * _DstBuf, size_t _Size, int _Radix); } 
#line 565 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _ultoa_s ( unsigned long _Value, char ( & _Dest ) [ _Size ], int _Radix ) throw ( ) { return _ultoa_s ( _Value, _Dest, _Size, _Radix ); }
#line 566 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl _ultoa(unsigned long _Value, char * _Dest, int _Radix); } 
#line 567 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl wctomb(char * _MbCh, __wchar_t _WCh); } 
#line 568 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _wctomb_l(char * _MbCh, __wchar_t _WCh, _locale_t _Locale); } 
#line 570 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl wctomb_s(int * _SizeConverted, char * _MbCh, rsize_t _SizeInBytes, __wchar_t _WCh); } 
#line 572 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wctomb_s_l(int * _SizeConverted, char * _MbCh, size_t _SizeInBytes, __wchar_t _WCh, _locale_t _Locale); } 
#line 573 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl wcstombs_s(size_t * _PtNumOfCharConverted, char * _Dst, size_t _DstSizeInBytes, const __wchar_t * _Src, size_t _MaxCountInBytes); } 
#line 574 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl wcstombs_s ( size_t * _PtNumOfCharConverted, char ( & _Dest ) [ _Size ], const wchar_t * _Source, size_t _MaxCount ) throw ( ) { return wcstombs_s ( _PtNumOfCharConverted, _Dest, _Size, _Source, _MaxCount ); }
#line 575 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) size_t __cdecl wcstombs(char * _Dest, const __wchar_t * _Source, size_t _MaxCount); } 
#line 576 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wcstombs_s_l(size_t * _PtNumOfCharConverted, char * _Dst, size_t _DstSizeInBytes, const __wchar_t * _Src, size_t _MaxCountInBytes, _locale_t _Locale); } 
#line 577 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _wcstombs_s_l ( size_t * _PtNumOfCharConverted, char ( & _Dest ) [ _Size ], const wchar_t * _Source, size_t _MaxCount, _locale_t _Locale ) throw ( ) { return _wcstombs_s_l ( _PtNumOfCharConverted, _Dest, _Size, _Source, _MaxCount, _Locale ); }
#line 578 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) size_t __cdecl _wcstombs_l(char * _Dest, const __wchar_t * _Source, size_t _MaxCount, _locale_t _Locale); } 
#line 640 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noalias) __declspec(restrict) void *__cdecl calloc(size_t _Count, size_t _Size); } 
#line 641 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noalias) void __cdecl free(void * _Memory); } 
#line 642 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noalias) __declspec(restrict) void *__cdecl malloc(size_t _Size); } 
#line 644 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noalias) __declspec(restrict) void *__cdecl realloc(void * _Memory, size_t _NewSize); } 
#line 646 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noalias) __declspec(restrict) void *__cdecl _recalloc(void * _Memory, size_t _Count, size_t _Size); } 
#line 647 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noalias) void __cdecl _aligned_free(void * _Memory); } 
#line 648 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noalias) __declspec(restrict) void *__cdecl _aligned_malloc(size_t _Size, size_t _Alignment); } 
#line 649 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noalias) __declspec(restrict) void *__cdecl _aligned_offset_malloc(size_t _Size, size_t _Alignment, size_t _Offset); } 
#line 651 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noalias) __declspec(restrict) void *__cdecl _aligned_realloc(void * _Memory, size_t _NewSize, size_t _Alignment); } 
#line 653 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noalias) __declspec(restrict) void *__cdecl _aligned_recalloc(void * _Memory, size_t _Count, size_t _Size, size_t _Alignment); } 
#line 655 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noalias) __declspec(restrict) void *__cdecl _aligned_offset_realloc(void * _Memory, size_t _NewSize, size_t _Alignment, size_t _Offset); } 
#line 657 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noalias) __declspec(restrict) void *__cdecl _aligned_offset_recalloc(void * _Memory, size_t _Count, size_t _Size, size_t _Alignment, size_t _Offset); } 
#line 658 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) size_t __cdecl _aligned_msize(void * _Memory, size_t _Alignment, size_t _Offset); } 
#line 685 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _itow_s(int _Val, __wchar_t * _DstBuf, size_t _SizeInWords, int _Radix); } 
#line 686 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _itow_s ( int _Value, wchar_t ( & _Dest ) [ _Size ], int _Radix ) throw ( ) { return _itow_s ( _Value, _Dest, _Size, _Radix ); }
#line 687 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _itow(int _Value, __wchar_t * _Dest, int _Radix); } 
#line 688 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _ltow_s(long _Val, __wchar_t * _DstBuf, size_t _SizeInWords, int _Radix); } 
#line 689 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _ltow_s ( long _Value, wchar_t ( & _Dest ) [ _Size ], int _Radix ) throw ( ) { return _ltow_s ( _Value, _Dest, _Size, _Radix ); }
#line 690 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _ltow(long _Value, __wchar_t * _Dest, int _Radix); } 
#line 691 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _ultow_s(unsigned long _Val, __wchar_t * _DstBuf, size_t _SizeInWords, int _Radix); } 
#line 692 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _ultow_s ( unsigned long _Value, wchar_t ( & _Dest ) [ _Size ], int _Radix ) throw ( ) { return _ultow_s ( _Value, _Dest, _Size, _Radix ); }
#line 693 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _ultow(unsigned long _Value, __wchar_t * _Dest, int _Radix); } 
#line 694 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) double __cdecl wcstod(const __wchar_t * _Str, __wchar_t ** _EndPtr); } 
#line 695 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) double __cdecl _wcstod_l(const __wchar_t * _Str, __wchar_t ** _EndPtr, _locale_t _Locale); } 
#line 696 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) long __cdecl wcstol(const __wchar_t * _Str, __wchar_t ** _EndPtr, int _Radix); } 
#line 697 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) long __cdecl _wcstol_l(const __wchar_t * _Str, __wchar_t ** _EndPtr, int _Radix, _locale_t _Locale); } 
#line 698 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl wcstoll(const __wchar_t * _Str, __wchar_t ** _EndPtr, int _Radix); } 
#line 699 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl _wcstoll_l(const __wchar_t * _Str, __wchar_t ** _EndPtr, int _Radix, _locale_t _Locale); } 
#line 700 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) unsigned long __cdecl wcstoul(const __wchar_t * _Str, __wchar_t ** _EndPtr, int _Radix); } 
#line 701 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) unsigned long __cdecl _wcstoul_l(const __wchar_t * _Str, __wchar_t ** _EndPtr, int _Radix, _locale_t _Locale); } 
#line 702 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) unsigned __int64 __cdecl wcstoull(const __wchar_t * _Str, __wchar_t ** _EndPtr, int _Radix); } 
#line 703 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) unsigned __int64 __cdecl _wcstoull_l(const __wchar_t * _Str, __wchar_t ** _EndPtr, int _Radix, _locale_t _Locale); } 
#line 704 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) long double __cdecl wcstold(const __wchar_t * _Str, __wchar_t ** _EndPtr); } 
#line 705 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) long double __cdecl _wcstold_l(const __wchar_t * _Str, __wchar_t ** _EndPtr, _locale_t _Locale); } 
#line 706 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) float __cdecl wcstof(const __wchar_t * _Str, __wchar_t ** _EndPtr); } 
#line 707 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) float __cdecl _wcstof_l(const __wchar_t * _Str, __wchar_t ** _EndPtr, _locale_t _Locale); } 
#line 711 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wgetenv(const __wchar_t * _VarName); } 
#line 712 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wgetenv_s(size_t * _ReturnSize, __wchar_t * _DstBuf, size_t _DstSizeInWords, const __wchar_t * _VarName); } 
#line 713 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _wgetenv_s ( size_t * _ReturnSize, wchar_t ( & _Dest ) [ _Size ], const wchar_t * _VarName ) throw ( ) { return _wgetenv_s ( _ReturnSize, _Dest, _Size, _VarName ); }
#line 720 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wdupenv_s(__wchar_t ** _Buffer, size_t * _BufferSizeInWords, const __wchar_t * _VarName); } 
#line 728 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _wsystem(const __wchar_t * _Command); } 
#line 733 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) double __cdecl _wtof(const __wchar_t * _Str); } 
#line 734 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) double __cdecl _wtof_l(const __wchar_t * _Str, _locale_t _Locale); } 
#line 735 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _wtoi(const __wchar_t * _Str); } 
#line 736 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _wtoi_l(const __wchar_t * _Str, _locale_t _Locale); } 
#line 737 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) long __cdecl _wtol(const __wchar_t * _Str); } 
#line 738 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) long __cdecl _wtol_l(const __wchar_t * _Str, _locale_t _Locale); } 
#line 739 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl _wtoll(const __wchar_t * _Str); } 
#line 740 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl _wtoll_l(const __wchar_t * _Str, _locale_t _Locale); } 
#line 742 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _i64tow_s(__int64 _Val, __wchar_t * _DstBuf, size_t _SizeInWords, int _Radix); } 
#line 743 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _i64tow(__int64 _Val, __wchar_t * _DstBuf, int _Radix); } 
#line 744 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _ui64tow_s(unsigned __int64 _Val, __wchar_t * _DstBuf, size_t _SizeInWords, int _Radix); } 
#line 745 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _ui64tow(unsigned __int64 _Val, __wchar_t * _DstBuf, int _Radix); } 
#line 746 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl _wtoi64(const __wchar_t * _Str); } 
#line 747 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl _wtoi64_l(const __wchar_t * _Str, _locale_t _Locale); } 
#line 748 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl _wcstoi64(const __wchar_t * _Str, __wchar_t ** _EndPtr, int _Radix); } 
#line 749 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl _wcstoi64_l(const __wchar_t * _Str, __wchar_t ** _EndPtr, int _Radix, _locale_t _Locale); } 
#line 750 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) unsigned __int64 __cdecl _wcstoui64(const __wchar_t * _Str, __wchar_t ** _EndPtr, int _Radix); } 
#line 751 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) unsigned __int64 __cdecl _wcstoui64_l(const __wchar_t * _Str, __wchar_t ** _EndPtr, int _Radix, _locale_t _Locale); } 
#line 770 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl _fullpath(char * _FullPath, const char * _Path, size_t _SizeInBytes); } 
#line 778 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _ecvt_s(char * _DstBuf, size_t _Size, double _Val, int _NumOfDights, int * _PtDec, int * _PtSign); } 
#line 779 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _ecvt_s ( char ( & _Dest ) [ _Size ], double _Value, int _NumOfDigits, int * _PtDec, int * _PtSign ) throw ( ) { return _ecvt_s ( _Dest, _Size, _Value, _NumOfDigits, _PtDec, _PtSign ); }
#line 780 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl _ecvt(double _Val, int _NumOfDigits, int * _PtDec, int * _PtSign); } 
#line 781 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _fcvt_s(char * _DstBuf, size_t _Size, double _Val, int _NumOfDec, int * _PtDec, int * _PtSign); } 
#line 782 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _fcvt_s ( char ( & _Dest ) [ _Size ], double _Value, int _NumOfDigits, int * _PtDec, int * _PtSign ) throw ( ) { return _fcvt_s ( _Dest, _Size, _Value, _NumOfDigits, _PtDec, _PtSign ); }
#line 783 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl _fcvt(double _Val, int _NumOfDec, int * _PtDec, int * _PtSign); } 
#line 784 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _gcvt_s(char * _DstBuf, size_t _Size, double _Val, int _NumOfDigits); } 
#line 785 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _gcvt_s ( char ( & _Dest ) [ _Size ], double _Value, int _NumOfDigits ) throw ( ) { return _gcvt_s ( _Dest, _Size, _Value, _NumOfDigits ); }
#line 786 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl _gcvt(double _Val, int _NumOfDigits, char * _DstBuf); } 
#line 788 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _atodbl(_CRT_DOUBLE * _Result, char * _Str); } 
#line 789 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _atoldbl(_LDOUBLE * _Result, char * _Str); } 
#line 790 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _atoflt(_CRT_FLOAT * _Result, const char * _Str); } 
#line 791 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _atodbl_l(_CRT_DOUBLE * _Result, char * _Str, _locale_t _Locale); } 
#line 792 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _atoldbl_l(_LDOUBLE * _Result, char * _Str, _locale_t _Locale); } 
#line 793 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _atoflt_l(_CRT_FLOAT * _Result, const char * _Str, _locale_t _Locale); } 
#line 794 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { unsigned long __cdecl _lrotl(unsigned long _Val, int _Shift); } 
#line 795 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { unsigned long __cdecl _lrotr(unsigned long _Val, int _Shift); } 
#line 796 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _makepath_s(char * _PathResult, size_t _SizeInWords, const char * _Drive, const char * _Dir, const char * _Filename, const char * _Ext); } 
#line 798 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _makepath_s ( char ( & _Path ) [ _Size ], const char * _Drive, const char * _Dir, const char * _Filename, const char * _Ext ) throw ( ) { return _makepath_s ( _Path, _Size, _Drive, _Dir, _Filename, _Ext ); }
#line 799 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) void __cdecl _makepath(char * _Path, const char * _Drive, const char * _Dir, const char * _Filename, const char * _Ext); } 
#line 826 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { _onexit_t __cdecl _onexit(_onexit_t _Func); } 
#line 831 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) void __cdecl perror(const char * _ErrMsg); } 
#line 834 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
#pragma warning (push)
#pragma warning (disable:6540)
#line 838 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _putenv(const char * _EnvString); } 
#line 839 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _putenv_s(const char * _Name, const char * _Value); } 
#line 842 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { unsigned __cdecl _rotl(unsigned _Val, int _Shift); } 
#line 843 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { unsigned __int64 __cdecl _rotl64(unsigned __int64 _Val, int _Shift); } 
#line 844 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { unsigned __cdecl _rotr(unsigned _Val, int _Shift); } 
#line 845 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { unsigned __int64 __cdecl _rotr64(unsigned __int64 _Val, int _Shift); } 
#pragma warning (pop)
#line 849 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _searchenv_s(const char * _Filename, const char * _EnvVar, char * _ResultPath, size_t _SizeInBytes); } 
#line 850 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _searchenv_s ( const char * _Filename, const char * _EnvVar, char ( & _ResultPath ) [ _Size ] ) throw ( ) { return _searchenv_s ( _Filename, _EnvVar, _ResultPath, _Size ); }
#line 851 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) void __cdecl _searchenv(const char * _Filename, const char * _EnvVar, char * _ResultPath); } 
#line 854 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) void __cdecl _splitpath(const char * _FullPath, char * _Drive, char * _Dir, char * _Filename, char * _Ext); } 
#line 855 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _splitpath_s(const char * _FullPath, char * _Drive, size_t _DriveSize, char * _Dir, size_t _DirSize, char * _Filename, size_t _FilenameSize, char * _Ext, size_t _ExtSize); } 
#line 860 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
template < size_t _DriveSize, size_t _DirSize, size_t _NameSize, size_t _ExtSize > inline errno_t __cdecl _splitpath_s ( const char * _Dest, char ( & _Drive ) [ _DriveSize ], char ( & _Dir ) [ _DirSize ], char ( & _Name ) [ _NameSize ], char ( & _Ext ) [ _ExtSize ] ) throw ( ) { return _splitpath_s ( _Dest, _Drive, _DriveSize, _Dir, _DirSize, _Name, _NameSize, _Ext, _ExtSize ); }
#line 862 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) void __cdecl _swab(char * _Buf1, char * _Buf2, int _SizeInBytes); } 
#line 873 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wfullpath(__wchar_t * _FullPath, const __wchar_t * _Path, size_t _SizeInWords); } 
#line 879 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wmakepath_s(__wchar_t * _PathResult, size_t _SIZE, const __wchar_t * _Drive, const __wchar_t * _Dir, const __wchar_t * _Filename, const __wchar_t * _Ext); } 
#line 881 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _wmakepath_s ( wchar_t ( & _ResultPath ) [ _Size ], const wchar_t * _Drive, const wchar_t * _Dir, const wchar_t * _Filename, const wchar_t * _Ext ) throw ( ) { return _wmakepath_s ( _ResultPath, _Size, _Drive, _Dir, _Filename, _Ext ); }
#line 882 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) void __cdecl _wmakepath(__wchar_t * _ResultPath, const __wchar_t * _Drive, const __wchar_t * _Dir, const __wchar_t * _Filename, const __wchar_t * _Ext); } 
#line 885 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) void __cdecl _wperror(const __wchar_t * _ErrMsg); } 
#line 889 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _wputenv(const __wchar_t * _EnvString); } 
#line 890 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wputenv_s(const __wchar_t * _Name, const __wchar_t * _Value); } 
#line 891 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wsearchenv_s(const __wchar_t * _Filename, const __wchar_t * _EnvVar, __wchar_t * _ResultPath, size_t _SizeInWords); } 
#line 892 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _wsearchenv_s ( const wchar_t * _Filename, const wchar_t * _EnvVar, wchar_t ( & _ResultPath ) [ _Size ] ) throw ( ) { return _wsearchenv_s ( _Filename, _EnvVar, _ResultPath, _Size ); }
#line 893 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) void __cdecl _wsearchenv(const __wchar_t * _Filename, const __wchar_t * _EnvVar, __wchar_t * _ResultPath); } 
#line 896 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) void __cdecl _wsplitpath(const __wchar_t * _FullPath, __wchar_t * _Drive, __wchar_t * _Dir, __wchar_t * _Filename, __wchar_t * _Ext); } 
#line 897 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wsplitpath_s(const __wchar_t * _FullPath, __wchar_t * _Drive, size_t _DriveSize, __wchar_t * _Dir, size_t _DirSize, __wchar_t * _Filename, size_t _FilenameSize, __wchar_t * _Ext, size_t _ExtSize); } 
#line 902 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
template < size_t _DriveSize, size_t _DirSize, size_t _NameSize, size_t _ExtSize > inline errno_t __cdecl _wsplitpath_s ( const wchar_t * _Path, wchar_t ( & _Drive ) [ _DriveSize ], wchar_t ( & _Dir ) [ _DirSize ], wchar_t ( & _Name ) [ _NameSize ], wchar_t ( & _Ext ) [ _ExtSize ] ) throw ( ) { return _wsplitpath_s ( _Path, _Drive, _DriveSize, _Dir, _DirSize, _Name, _NameSize, _Ext, _ExtSize ); }
#line 909 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(deprecated("This function or variable has been superceded by newer library or operating system functionality. Consider using SetErrorMode in" "stead. See online help for details.")) __declspec(dllimport) void __cdecl _seterrormode(int _Mode); } 
#line 910 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(deprecated("This function or variable has been superceded by newer library or operating system functionality. Consider using Beep instead. S" "ee online help for details.")) __declspec(dllimport) void __cdecl _beep(unsigned _Frequency, unsigned _Duration); } 
#line 911 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(deprecated("This function or variable has been superceded by newer library or operating system functionality. Consider using Sleep instead. " "See online help for details.")) __declspec(dllimport) void __cdecl _sleep(unsigned long _Duration); } 
#line 932 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
#pragma warning(push)
#pragma warning(disable: 4141)
extern "C" { __declspec(dllimport) char *__cdecl ecvt(double _Val, int _NumOfDigits, int * _PtDec, int * _PtSign); } 
#line 935 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl fcvt(double _Val, int _NumOfDec, int * _PtDec, int * _PtSign); } 
#line 936 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl gcvt(double _Val, int _NumOfDigits, char * _DstBuf); } 
#line 937 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl itoa(int _Val, char * _DstBuf, int _Radix); } 
#line 938 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl ltoa(long _Val, char * _DstBuf, int _Radix); } 
#line 941 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl putenv(const char * _EnvString); } 
#line 944 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) void __cdecl swab(char * _Buf1, char * _Buf2, int _SizeInBytes); } 
#line 945 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl ultoa(unsigned long _Val, char * _Dstbuf, int _Radix); } 
#pragma warning(pop)
extern "C" { _onexit_t __cdecl onexit(_onexit_t _Func); } 
#line 205 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
#pragma detect_mismatch("_MSC_VER", "1800")
#line 209 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
#pragma detect_mismatch("_ITERATOR_DEBUG_LEVEL", "2")
#line 220 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
#pragma detect_mismatch("RuntimeLibrary", "MDd_DynamicDebug")
#line 57 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\use_ansi.h"
#pragma comment(lib, "msvcprtd")
#line 957 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdlib.h"
#pragma pack ( pop )
#line 10 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
#pragma pack ( push, 8 )
#line 568 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
namespace std { 
#line 569 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
typedef bool _Bool; 
#line 570 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
}
#line 586 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
typedef __int64 _Longlong; 
#line 587 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
typedef unsigned __int64 _ULonglong; 
#line 605 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
typedef unsigned short char16_t; 
#line 606 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
typedef unsigned char32_t; 
#line 619 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
namespace std { 
#line 620 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
enum _Uninitialized { 
#line 622 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
_Noinit
#line 623 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
}; 
#line 627 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
#pragma warning(push)
#pragma warning(disable:4412)
class __declspec(dllimport) _Lockit { 
#line 652 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
public: __thiscall _Lockit(); 
#line 653 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
explicit __thiscall _Lockit(int); 
#line 654 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
__thiscall ~_Lockit() throw(); 
#line 657 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
static void __cdecl _Lockit_ctor(int); 
#line 658 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
static void __cdecl _Lockit_dtor(int); 
#line 661 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
private: static void __cdecl _Lockit_ctor(_Lockit *); 
#line 662 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
static void __cdecl _Lockit_ctor(_Lockit *, int); 
#line 663 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
static void __cdecl _Lockit_dtor(_Lockit *); 
#line 666 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
public: _Lockit(const _Lockit &) = delete;
#line 667 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
_Lockit &operator=(const _Lockit &) = delete;
#line 670 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
private: int _Locktype; 
#line 685 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
}; 
#line 772 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
class __declspec(dllimport) _Init_locks { 
#line 788 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
public: __thiscall _Init_locks(); 
#line 789 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
__thiscall ~_Init_locks() throw(); 
#line 793 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
private: static void __cdecl _Init_locks_ctor(_Init_locks *); 
#line 794 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
static void __cdecl _Init_locks_dtor(_Init_locks *); 
#line 805 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
}; 
#line 807 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
#pragma warning(pop)
}
#line 817 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
__declspec(dllimport) void __cdecl _Atexit(void (__cdecl *)(void)); 
#line 819 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
typedef int _Mbstatet; 
#line 820 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
typedef unsigned long _Uint32t; 
#line 9 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
#pragma warning(push,3)
#line 829 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\yvals.h"
#pragma pack ( pop )
#line 8 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
#pragma pack ( push, 8 )
#line 13 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
namespace std { 
#line 15 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _T1, class 
#line 16 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
_Ret> struct unary_function; 
#line 20 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _T1, class 
#line 21 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
_T2, class 
#line 22 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
_Ret> struct binary_function; 
#line 26 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct _Nil { 
#line 28 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 29 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
static _Nil _Nil_obj; 
#line 32 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template < class _Ty,
 _Ty _Val >
 struct integral_constant
 {
 static const _Ty value = _Val;

 typedef _Ty value_type;
 typedef integral_constant < _Ty, _Val > type;

 operator value_type ( ) const
  {
  return ( value );
  }
 };
#line 47 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef integral_constant< bool, true>  true_type; 
#line 48 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef integral_constant< bool, false>  false_type; 
#line 51 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< bool > 
#line 52 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct _Cat_base : public false_type { 
#line 55 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 58 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template<> struct _Cat_base< true>  : public true_type { 
#line 61 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 64 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< bool _Test, class 
#line 65 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
_Ty = void> 
#line 66 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct enable_if { 
#line 68 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 70 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 71 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct enable_if< true, _Ty>  { 
#line 73 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef _Ty type; 
#line 74 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 77 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< bool _Test, class 
#line 78 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
_Ty1, class 
#line 79 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
_Ty2> 
#line 80 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct conditional { 
#line 82 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef _Ty2 type; 
#line 83 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 85 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Ty1, class 
#line 86 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
_Ty2> 
#line 87 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct conditional< true, _Ty1, _Ty2>  { 
#line 89 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef _Ty1 type; 
#line 90 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 93 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Ty1, class _Ty2> 
#line 94 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct is_same : public false_type { 
#line 97 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 99 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Ty1> 
#line 100 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct is_same< _Ty1, _Ty1>  : public true_type { 
#line 103 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 106 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 107 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct remove_const { 
#line 109 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef _Ty type; 
#line 110 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 112 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 113 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct remove_const< const _Ty>  { 
#line 115 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef _Ty type; 
#line 116 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 118 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 119 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct remove_const< const _Ty []>  { 
#line 121 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef _Ty type[]; 
#line 122 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 124 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Ty, unsigned _Nx> 
#line 125 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct remove_const< const _Ty [_Nx]>  { 
#line 127 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef _Ty type[_Nx]; 
#line 128 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 131 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 132 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct remove_volatile { 
#line 134 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef _Ty type; 
#line 135 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 137 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 138 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct remove_volatile< volatile _Ty>  { 
#line 140 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef _Ty type; 
#line 141 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 143 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 144 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct remove_volatile< volatile _Ty []>  { 
#line 146 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef _Ty type[]; 
#line 147 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 149 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Ty, unsigned _Nx> 
#line 150 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct remove_volatile< volatile _Ty [_Nx]>  { 
#line 152 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef _Ty type[_Nx]; 
#line 153 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 156 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 157 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct remove_cv { 
#line 160 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef typename remove_const< typename remove_volatile< _Ty> ::type> ::type type; 
#line 161 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 164 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 165 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct _Is_integral : public false_type { 
#line 168 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 171 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template<> struct _Is_integral< bool>  : public true_type { 
#line 174 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 177 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template<> struct _Is_integral< char>  : public true_type { 
#line 180 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 183 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template<> struct _Is_integral< unsigned char>  : public true_type { 
#line 186 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 189 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template<> struct _Is_integral< signed char>  : public true_type { 
#line 192 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 196 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template<> struct _Is_integral< __wchar_t>  : public true_type { 
#line 199 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 203 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template<> struct _Is_integral< unsigned short>  : public true_type { 
#line 206 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 209 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template<> struct _Is_integral< signed short>  : public true_type { 
#line 212 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 215 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template<> struct _Is_integral< unsigned>  : public true_type { 
#line 218 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 221 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template<> struct _Is_integral< signed int>  : public true_type { 
#line 224 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 227 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template<> struct _Is_integral< unsigned long>  : public true_type { 
#line 230 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 233 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template<> struct _Is_integral< signed long>  : public true_type { 
#line 236 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 254 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template<> struct _Is_integral< __int64>  : public true_type { 
#line 257 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 260 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template<> struct _Is_integral< unsigned __int64>  : public true_type { 
#line 263 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 267 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 268 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct is_integral : public _Is_integral< typename remove_cv< _Ty> ::type>  { 
#line 271 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 274 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 275 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct _Is_floating_point : public false_type { 
#line 278 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 281 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template<> struct _Is_floating_point< float>  : public true_type { 
#line 284 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 287 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template<> struct _Is_floating_point< double>  : public true_type { 
#line 290 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 293 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template<> struct _Is_floating_point< long double>  : public true_type { 
#line 296 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 299 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 300 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct is_floating_point : public _Is_floating_point< typename remove_cv< _Ty> ::type>  { 
#line 303 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 305 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 306 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct _Is_numeric : public _Cat_base< is_integral< _Ty> ::value || is_floating_point< _Ty> ::value>  { 
#line 310 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 313 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 314 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct remove_reference { 
#line 316 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef _Ty type; 
#line 317 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 319 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 320 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct remove_reference< _Ty &>  { 
#line 322 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef _Ty type; 
#line 323 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 325 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 326 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct remove_reference< _Ty &&>  { 
#line 328 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef _Ty type; 
#line 329 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 332 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Tgt, class 
#line 333 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
_Src> 
#line 334 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct _Copy_cv { 
#line 336 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef typename remove_reference< _Tgt> ::type _Tgtx; 
#line 337 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef _Tgtx &type; 
#line 338 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 340 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Tgt, class 
#line 341 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
_Src> 
#line 342 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct _Copy_cv< _Tgt, const _Src>  { 
#line 344 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef typename remove_reference< _Tgt> ::type _Tgtx; 
#line 345 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef const _Tgtx &type; 
#line 346 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 348 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Tgt, class 
#line 349 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
_Src> 
#line 350 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct _Copy_cv< _Tgt, volatile _Src>  { 
#line 352 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef typename remove_reference< _Tgt> ::type _Tgtx; 
#line 353 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef volatile _Tgtx &type; 
#line 354 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 356 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Tgt, class 
#line 357 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
_Src> 
#line 358 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct _Copy_cv< _Tgt, const volatile _Src>  { 
#line 360 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef typename remove_reference< _Tgt> ::type _Tgtx; 
#line 361 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef const volatile _Tgtx &type; 
#line 362 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 364 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Tgt, class 
#line 365 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
_Src> 
#line 366 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct _Copy_cv< _Tgt, _Src &>  { 
#line 368 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef typename std::_Copy_cv< _Tgt, _Src> ::type type; 
#line 369 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 372 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct _Wrap_int { 
#line 374 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
_Wrap_int(int) 
#line 375 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
{ 
#line 376 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
} 
#line 377 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 379 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 380 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct _Identity { 
#line 382 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
typedef _Ty type; 
#line 383 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}; 
#line 419 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Ty> 
#line 420 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
struct _Has_result_type { 
#line 421 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
template< class _Uty> static auto _Fn(int, _Identity< typename _Uty::result_type>  * = 0, _Identity< typename _Uty::result_type>  * = 0, _Identity< typename _Uty::result_type>  * = 0)->true_type; template< class _Uty> static auto _Fn(_Wrap_int)->false_type; typedef decltype((_Fn< _Ty> (0))) type; }; 
#line 422 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
}
#line 424 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
#pragma warning(pop)
#line 11 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
#pragma warning(push,3)
#line 425 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtr1common"
#pragma pack ( pop )
#line 10 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
#pragma pack ( push, 8 )
#line 15 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
namespace std { 
#line 16 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
template< class _Ty> 
#line 17 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
struct _Promote_to_float { 
#line 20 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
typedef typename conditional< is_integral< _Ty> ::value, double, _Ty> ::type type; 
#line 21 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
}; 
#line 23 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
template< class _Ty1, class 
#line 24 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
_Ty2> 
#line 25 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
struct _Common_float_type { 
#line 27 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
typedef typename _Promote_to_float< _Ty1> ::type _Ty1f; 
#line 28 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
typedef typename _Promote_to_float< _Ty2> ::type _Ty2f; 
#line 33 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
typedef typename conditional< is_same< typename _Promote_to_float< _Ty1> ::type, long double> ::value || is_same< typename _Promote_to_float< _Ty2> ::type, long double> ::value, long double, typename conditional< is_same< typename _Promote_to_float< _Ty1> ::type, double> ::value || is_same< typename _Promote_to_float< _Ty2> ::type, double> ::value, double, float> ::type> ::type type; 
#line 34 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
}; 
#line 35 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
}
#line 75 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" double __cdecl pow(double, double); 
#line 76 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
inline float __cdecl pow(float, float) throw(); 
#line 77 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
inline long double __cdecl pow(long double, long double) throw(); 
#line 79 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
template < class _Ty1,
 class _Ty2 > inline
 typename :: std :: enable_if < :: std :: _Is_numeric < _Ty1 > :: value
  && :: std :: _Is_numeric < _Ty2 > :: value,
  typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type > :: type
 pow ( const _Ty1 _Left, const _Ty2 _Right )
 {
 typedef typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type type;
 return ( :: pow ( type ( _Left ), type ( _Right ) ) );
 }
#line 91 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" double __cdecl acos(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type acos ( _Ty _Left ) { return ( :: acos ( ( double ) _Left ) ); }
#line 92 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" double __cdecl asin(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type asin ( _Ty _Left ) { return ( :: asin ( ( double ) _Left ) ); }
#line 93 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" double __cdecl atan(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type atan ( _Ty _Left ) { return ( :: atan ( ( double ) _Left ) ); }
#line 94 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" double __cdecl atan2(double, double); template < class _Ty1, class _Ty2 > inline typename :: std :: enable_if < :: std :: _Is_numeric < _Ty1 > :: value && :: std :: _Is_numeric < _Ty2 > :: value, typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type > :: type atan2 ( _Ty1 _Left, _Ty2 _Right ) { typedef typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type type; return ( :: atan2 ( ( type ) _Left, ( type ) _Right ) ); }
#line 95 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl ceil(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type ceil ( _Ty _Left ) { return ( :: ceil ( ( double ) _Left ) ); }
#line 96 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" double __cdecl cos(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type cos ( _Ty _Left ) { return ( :: cos ( ( double ) _Left ) ); }
#line 97 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" double __cdecl cosh(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type cosh ( _Ty _Left ) { return ( :: cosh ( ( double ) _Left ) ); }
#line 98 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" double __cdecl exp(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type exp ( _Ty _Left ) { return ( :: exp ( ( double ) _Left ) ); }
#line 100 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl floor(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type floor ( _Ty _Left ) { return ( :: floor ( ( double ) _Left ) ); }
#line 101 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" double __cdecl fmod(double, double); template < class _Ty1, class _Ty2 > inline typename :: std :: enable_if < :: std :: _Is_numeric < _Ty1 > :: value && :: std :: _Is_numeric < _Ty2 > :: value, typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type > :: type fmod ( _Ty1 _Left, _Ty2 _Right ) { typedef typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type type; return ( :: fmod ( ( type ) _Left, ( type ) _Right ) ); }
#line 102 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl frexp(double, int *); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type frexp ( _Ty _Left, int * _Arg2 ) { return ( :: frexp ( ( double ) _Left, _Arg2 ) ); }
#line 103 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl ldexp(double, int); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type ldexp ( _Ty _Left, int _Arg2 ) { return ( :: ldexp ( ( double ) _Left, _Arg2 ) ); }
#line 104 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" double __cdecl log(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type log ( _Ty _Left ) { return ( :: log ( ( double ) _Left ) ); }
#line 105 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" double __cdecl log10(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type log10 ( _Ty _Left ) { return ( :: log10 ( ( double ) _Left ) ); }
#line 108 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" double __cdecl sin(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type sin ( _Ty _Left ) { return ( :: sin ( ( double ) _Left ) ); }
#line 109 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" double __cdecl sinh(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type sinh ( _Ty _Left ) { return ( :: sinh ( ( double ) _Left ) ); }
#line 110 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" double __cdecl sqrt(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type sqrt ( _Ty _Left ) { return ( :: sqrt ( ( double ) _Left ) ); }
#line 111 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" double __cdecl tan(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type tan ( _Ty _Left ) { return ( :: tan ( ( double ) _Left ) ); }
#line 112 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" double __cdecl tanh(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type tanh ( _Ty _Left ) { return ( :: tanh ( ( double ) _Left ) ); }
#line 124 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
inline float _Fma(float _Left, float _Middle, float _Right) 
#line 125 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
{ 
#line 126 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
return ::fmaf(_Left, _Middle, _Right); 
#line 127 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
} 
#line 129 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
inline double _Fma(double _Left, double _Middle, double _Right) 
#line 130 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
{ 
#line 131 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
return ::fma(_Left, _Middle, _Right); 
#line 132 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
} 
#line 134 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
inline long double _Fma(long double _Left, long double _Middle, long double _Right) 
#line 135 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
{ 
#line 136 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
return ::fmal(_Left, _Middle, _Right); 
#line 137 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
} 
#line 139 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
template < class _Ty1,
 class _Ty2,
 class _Ty3 > inline
 typename :: std :: _Common_float_type < _Ty1,
  typename :: std :: _Common_float_type < _Ty2, _Ty3 > :: type > :: type
 fma ( _Ty1 _Left, _Ty2 _Middle, _Ty3 _Right )
 {
 typedef typename :: std :: _Common_float_type < _Ty1,
  typename :: std :: _Common_float_type < _Ty2, _Ty3 > :: type > :: type type;
 return ( _Fma ( ( type ) _Left, ( type ) _Middle, ( type ) _Right ) );
 }
#line 152 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
inline float _Remquo(float _Left, float _Right, int *_Pquo) 
#line 153 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
{ 
#line 154 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
return ::remquof(_Left, _Right, _Pquo); 
#line 155 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
} 
#line 157 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
inline double _Remquo(double _Left, double _Right, int *_Pquo) 
#line 158 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
{ 
#line 159 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
return ::remquo(_Left, _Right, _Pquo); 
#line 160 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
} 
#line 162 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
inline long double _Remquo(long double _Left, long double _Right, int *_Pquo) 
#line 163 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
{ 
#line 164 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
return ::remquol(_Left, _Right, _Pquo); 
#line 165 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
} 
#line 167 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
template < class _Ty1,
 class _Ty2 > inline
 typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type
 remquo ( _Ty1 _Left, _Ty2 _Right, int * _Pquo )
 {
 typedef typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type type;
 return ( _Remquo ( ( type ) _Left, ( type ) _Right, _Pquo ) );
 }
#line 176 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl acosh(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type acosh ( _Ty _Left ) { return ( :: acosh ( ( double ) _Left ) ); }
#line 177 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl asinh(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type asinh ( _Ty _Left ) { return ( :: asinh ( ( double ) _Left ) ); }
#line 178 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl atanh(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type atanh ( _Ty _Left ) { return ( :: atanh ( ( double ) _Left ) ); }
#line 179 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl cbrt(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type cbrt ( _Ty _Left ) { return ( :: cbrt ( ( double ) _Left ) ); }
#line 180 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl copysign(double, double); template < class _Ty1, class _Ty2 > inline typename :: std :: enable_if < :: std :: _Is_numeric < _Ty1 > :: value && :: std :: _Is_numeric < _Ty2 > :: value, typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type > :: type copysign ( _Ty1 _Left, _Ty2 _Right ) { typedef typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type type; return ( :: copysign ( ( type ) _Left, ( type ) _Right ) ); }
#line 181 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl erf(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type erf ( _Ty _Left ) { return ( :: erf ( ( double ) _Left ) ); }
#line 182 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl erfc(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type erfc ( _Ty _Left ) { return ( :: erfc ( ( double ) _Left ) ); }
#line 183 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl expm1(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type expm1 ( _Ty _Left ) { return ( :: expm1 ( ( double ) _Left ) ); }
#line 184 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl exp2(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type exp2 ( _Ty _Left ) { return ( :: exp2 ( ( double ) _Left ) ); }
#line 186 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl fdim(double, double); template < class _Ty1, class _Ty2 > inline typename :: std :: enable_if < :: std :: _Is_numeric < _Ty1 > :: value && :: std :: _Is_numeric < _Ty2 > :: value, typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type > :: type fdim ( _Ty1 _Left, _Ty2 _Right ) { typedef typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type type; return ( :: fdim ( ( type ) _Left, ( type ) _Right ) ); }
#line 188 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl fmax(double, double); template < class _Ty1, class _Ty2 > inline typename :: std :: enable_if < :: std :: _Is_numeric < _Ty1 > :: value && :: std :: _Is_numeric < _Ty2 > :: value, typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type > :: type fmax ( _Ty1 _Left, _Ty2 _Right ) { typedef typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type type; return ( :: fmax ( ( type ) _Left, ( type ) _Right ) ); }
#line 189 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl fmin(double, double); template < class _Ty1, class _Ty2 > inline typename :: std :: enable_if < :: std :: _Is_numeric < _Ty1 > :: value && :: std :: _Is_numeric < _Ty2 > :: value, typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type > :: type fmin ( _Ty1 _Left, _Ty2 _Right ) { typedef typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type type; return ( :: fmin ( ( type ) _Left, ( type ) _Right ) ); }
#line 190 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __inline double __cdecl hypot(double, double); template < class _Ty1, class _Ty2 > inline typename :: std :: enable_if < :: std :: _Is_numeric < _Ty1 > :: value && :: std :: _Is_numeric < _Ty2 > :: value, typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type > :: type hypot ( _Ty1 _Left, _Ty2 _Right ) { typedef typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type type; return ( :: hypot ( ( type ) _Left, ( type ) _Right ) ); }
#line 191 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) int __cdecl ilogb(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, int > :: type ilogb ( _Ty _Left ) { return ( :: ilogb ( ( double ) _Left ) ); }
#line 192 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl lgamma(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type lgamma ( _Ty _Left ) { return ( :: lgamma ( ( double ) _Left ) ); }
#line 193 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) __int64 __cdecl llrint(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, long long > :: type llrint ( _Ty _Left ) { return ( :: llrint ( ( double ) _Left ) ); }
#line 194 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) __int64 __cdecl llround(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, long long > :: type llround ( _Ty _Left ) { return ( :: llround ( ( double ) _Left ) ); }
#line 195 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl log1p(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type log1p ( _Ty _Left ) { return ( :: log1p ( ( double ) _Left ) ); }
#line 196 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl log2(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type log2 ( _Ty _Left ) { return ( :: log2 ( ( double ) _Left ) ); }
#line 197 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl logb(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type logb ( _Ty _Left ) { return ( :: logb ( ( double ) _Left ) ); }
#line 198 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) long __cdecl lrint(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, long > :: type lrint ( _Ty _Left ) { return ( :: lrint ( ( double ) _Left ) ); }
#line 199 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) long __cdecl lround(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, long > :: type lround ( _Ty _Left ) { return ( :: lround ( ( double ) _Left ) ); }
#line 200 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl nearbyint(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type nearbyint ( _Ty _Left ) { return ( :: nearbyint ( ( double ) _Left ) ); }
#line 201 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl nextafter(double, double); template < class _Ty1, class _Ty2 > inline typename :: std :: enable_if < :: std :: _Is_numeric < _Ty1 > :: value && :: std :: _Is_numeric < _Ty2 > :: value, typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type > :: type nextafter ( _Ty1 _Left, _Ty2 _Right ) { typedef typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type type; return ( :: nextafter ( ( type ) _Left, ( type ) _Right ) ); }
#line 202 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl nexttoward(double, long double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type nexttoward ( _Ty _Left, long double _Arg2 ) { return ( :: nexttoward ( ( double ) _Left, _Arg2 ) ); }
#line 203 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl remainder(double, double); template < class _Ty1, class _Ty2 > inline typename :: std :: enable_if < :: std :: _Is_numeric < _Ty1 > :: value && :: std :: _Is_numeric < _Ty2 > :: value, typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type > :: type remainder ( _Ty1 _Left, _Ty2 _Right ) { typedef typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type type; return ( :: remainder ( ( type ) _Left, ( type ) _Right ) ); }
#line 205 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl rint(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type rint ( _Ty _Left ) { return ( :: rint ( ( double ) _Left ) ); }
#line 206 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl round(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type round ( _Ty _Left ) { return ( :: round ( ( double ) _Left ) ); }
#line 207 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl scalbln(double, long); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type scalbln ( _Ty _Left, long _Arg2 ) { return ( :: scalbln ( ( double ) _Left, _Arg2 ) ); }
#line 208 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl scalbn(double, int); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type scalbn ( _Ty _Left, int _Arg2 ) { return ( :: scalbn ( ( double ) _Left, _Arg2 ) ); }
#line 209 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl tgamma(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type tgamma ( _Ty _Left ) { return ( :: tgamma ( ( double ) _Left ) ); }
#line 210 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl trunc(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type trunc ( _Ty _Left ) { return ( :: trunc ( ( double ) _Left ) ); }
#line 215 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\xtgmath.h"
#pragma warning(pop)
#pragma pack ( pop )
#line 22 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
namespace std { 
#line 23 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::abs;using ::acos;using ::asin;
#line 24 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::atan;using ::atan2;using ::ceil;
#line 25 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::cos;using ::cosh;using ::exp;
#line 26 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::fabs;using ::floor;using ::fmod;
#line 27 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::frexp;using ::ldexp;using ::log;
#line 28 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::log10;using ::modf;using ::pow;
#line 29 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::sin;using ::sinh;using ::sqrt;
#line 30 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::tan;using ::tanh;
#line 32 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::acosf;using ::asinf;
#line 33 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::atanf;using ::atan2f;using ::ceilf;
#line 34 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::cosf;using ::coshf;using ::expf;
#line 35 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::fabsf;using ::floorf;using ::fmodf;
#line 36 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::frexpf;using ::ldexpf;using ::logf;
#line 37 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::log10f;using ::modff;using ::powf;
#line 38 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::sinf;using ::sinhf;using ::sqrtf;
#line 39 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::tanf;using ::tanhf;
#line 41 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::acosl;using ::asinl;
#line 42 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::atanl;using ::atan2l;using ::ceill;
#line 43 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::cosl;using ::coshl;using ::expl;
#line 44 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::fabsl;using ::floorl;using ::fmodl;
#line 45 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::frexpl;using ::ldexpl;using ::logl;
#line 46 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::log10l;using ::modfl;using ::powl;
#line 47 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::sinl;using ::sinhl;using ::sqrtl;
#line 48 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::tanl;using ::tanhl;
#line 50 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::float_t;using ::double_t;
#line 52 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::acosh;using ::asinh;using ::atanh;
#line 53 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::cbrt;using ::erf;using ::erfc;
#line 54 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::expm1;using ::exp2;
#line 55 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::hypot;using ::ilogb;using ::lgamma;
#line 56 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::log1p;using ::log2;using ::logb;
#line 57 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::llrint;using ::lrint;using ::nearbyint;
#line 58 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::rint;using ::llround;using ::lround;
#line 59 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::fdim;using ::fma;using ::fmax;using ::fmin;
#line 60 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::round;using ::trunc;
#line 61 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::remainder;using ::remquo;
#line 62 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::copysign;using ::nan;using ::nextafter;
#line 63 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::scalbn;using ::scalbln;
#line 64 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::nexttoward;using ::tgamma;
#line 66 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::acoshf;using ::asinhf;using ::atanhf;
#line 67 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::cbrtf;using ::erff;using ::erfcf;
#line 68 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::expm1f;using ::exp2f;
#line 69 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::hypotf;using ::ilogbf;using ::lgammaf;
#line 70 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::log1pf;using ::log2f;using ::logbf;
#line 71 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::llrintf;using ::lrintf;using ::nearbyintf;
#line 72 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::rintf;using ::llroundf;using ::lroundf;
#line 73 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::fdimf;using ::fmaf;using ::fmaxf;using ::fminf;
#line 74 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::roundf;using ::truncf;
#line 75 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::remainderf;using ::remquof;
#line 76 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::copysignf;using ::nanf;
#line 77 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::nextafterf;using ::scalbnf;using ::scalblnf;
#line 78 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::nexttowardf;using ::tgammaf;
#line 80 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::acoshl;using ::asinhl;using ::atanhl;
#line 81 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::cbrtl;using ::erfl;using ::erfcl;
#line 82 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::expm1l;using ::exp2l;
#line 83 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::hypotl;using ::ilogbl;using ::lgammal;
#line 84 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::log1pl;using ::log2l;using ::logbl;
#line 85 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::llrintl;using ::lrintl;using ::nearbyintl;
#line 86 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::rintl;using ::llroundl;using ::lroundl;
#line 87 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::fdiml;using ::fmal;using ::fmaxl;using ::fminl;
#line 88 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::roundl;using ::truncl;
#line 89 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::remainderl;using ::remquol;
#line 90 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::copysignl;using ::nanl;
#line 91 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::nextafterl;using ::scalbnl;using ::scalblnl;
#line 92 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::nexttowardl;using ::tgammal;
#line 94 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::fpclassify;using ::signbit;
#line 95 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::isfinite;using ::isinf;
#line 96 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::isnan;using ::isnormal;
#line 97 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::isgreater;using ::isgreaterequal;
#line 98 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::isless;using ::islessequal;
#line 99 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
using ::islessgreater;using ::isunordered;
#line 100 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cmath"
}
#line 17 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cstdlib"
namespace std { 
#line 18 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cstdlib"
using ::size_t;using ::div_t;using ::ldiv_t;
#line 19 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cstdlib"
using ::abort;using ::abs;using ::atexit;
#line 20 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cstdlib"
using ::atof;using ::atoi;using ::atol;
#line 21 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cstdlib"
using ::bsearch;using ::calloc;using ::div;
#line 22 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cstdlib"
using ::exit;using ::free;
#line 23 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cstdlib"
using ::labs;using ::ldiv;using ::malloc;
#line 24 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cstdlib"
using ::mblen;using ::mbstowcs;using ::mbtowc;
#line 25 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cstdlib"
using ::qsort;using ::rand;using ::realloc;
#line 26 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cstdlib"
using ::srand;using ::strtod;using ::strtol;
#line 27 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cstdlib"
using ::strtoul;
#line 28 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cstdlib"
using ::wcstombs;using ::wctomb;
#line 30 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cstdlib"
using ::lldiv_t;
#line 33 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cstdlib"
using ::getenv;
#line 34 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cstdlib"
using ::system;
#line 37 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cstdlib"
using ::atoll;using ::llabs;using ::lldiv;
#line 38 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cstdlib"
using ::strtof;using ::strtold;
#line 39 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cstdlib"
using ::strtoll;using ::strtoull;
#line 40 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\cstdlib"
}
#line 8647 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl _hypot(double x, double y); } 
#line 8648 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl _hypotf(float x, float y); } 
#line 8653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline bool signbit(long double); 
#line 8654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern int _ldsign(long double); } 
#line 8692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline bool signbit(double); 
#line 8693 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern int _dsign(double); } 
#line 8731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline bool signbit(float); 
#line 8732 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern int _fdsign(float); } 
#line 8738 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static __inline bool isinf(long double a); 
#line 8774 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static __inline bool isinf(double a); 
#line 8812 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static __inline bool isinf(float a); 
#line 8818 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static __inline bool isnan(long double a); 
#line 8852 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static __inline bool isnan(double a); 
#line 8889 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static __inline bool isnan(float a); 
#line 8895 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static __inline bool isfinite(long double a); 
#line 8933 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static __inline bool isfinite(double a); 
#line 8969 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static __inline bool isfinite(float a); 
#line 8976 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
template< class T> extern inline T _Pow_int(T, int) throw(); 
#line 8977 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline __int64 abs(__int64) throw(); 
#line 9033 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline long __cdecl abs(long) throw(); 
#line 9037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline float __cdecl abs(float) throw(); 
#line 9038 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline double __cdecl abs(double) throw(); 
#line 9039 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline float __cdecl fabs(float) throw(); 
#line 9040 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline float __cdecl ceil(float) throw(); 
#line 9041 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline float __cdecl floor(float) throw(); 
#line 9042 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline float __cdecl sqrt(float) throw(); 
#line 9043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline float __cdecl pow(float, float) throw(); 
#line 9045 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline float __cdecl pow(float, int) throw(); 
#line 9046 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline double __cdecl pow(double, int) throw(); 
#line 9048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline float __cdecl log(float) throw(); 
#line 9049 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline float __cdecl log10(float) throw(); 
#line 9050 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline float __cdecl fmod(float, float) throw(); 
#line 9051 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline float __cdecl modf(float, float *) throw(); 
#line 9052 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline float __cdecl exp(float) throw(); 
#line 9053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline float __cdecl frexp(float, int *) throw(); 
#line 9054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline float __cdecl ldexp(float, int) throw(); 
#line 9055 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline float __cdecl asin(float) throw(); 
#line 9056 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline float __cdecl sin(float) throw(); 
#line 9057 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline float __cdecl sinh(float) throw(); 
#line 9058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline float __cdecl acos(float) throw(); 
#line 9059 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline float __cdecl cos(float) throw(); 
#line 9060 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline float __cdecl cosh(float) throw(); 
#line 9061 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline float __cdecl atan(float) throw(); 
#line 9062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline float __cdecl atan2(float, float) throw(); 
#line 9063 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline float __cdecl tan(float) throw(); 
#line 9064 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline float __cdecl tanh(float) throw(); 
#line 9196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline float __cdecl logb(float) throw(); 
#line 9197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline int __cdecl ilogb(float) throw(); 
#line 9198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern float __cdecl scalbn(float, float) throw(); 
#line 9199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline float __cdecl scalbln(float, long) throw(); 
#line 9200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline float __cdecl exp2(float) throw(); 
#line 9201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline float __cdecl expm1(float) throw(); 
#line 9202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline float __cdecl log2(float) throw(); 
#line 9203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline float __cdecl log1p(float) throw(); 
#line 9204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline float __cdecl acosh(float) throw(); 
#line 9205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline float __cdecl asinh(float) throw(); 
#line 9206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline float __cdecl atanh(float) throw(); 
#line 9207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline float __cdecl hypot(float, float) throw(); 
#line 9208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern float __cdecl norm3d(float, float, float) throw(); 
#line 9209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern float __cdecl norm4d(float, float, float, float) throw(); 
#line 9210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline float __cdecl cbrt(float) throw(); 
#line 9211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline float __cdecl erf(float) throw(); 
#line 9212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline float __cdecl erfc(float) throw(); 
#line 9213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline float __cdecl lgamma(float) throw(); 
#line 9214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline float __cdecl tgamma(float) throw(); 
#line 9215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline float __cdecl copysign(float, float) throw(); 
#line 9216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline float __cdecl nextafter(float, float) throw(); 
#line 9217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline float __cdecl remainder(float, float) throw(); 
#line 9218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline float __cdecl remquo(float, float, int *) throw(); 
#line 9219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline float __cdecl round(float) throw(); 
#line 9220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline long __cdecl lround(float) throw(); 
#line 9221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline __int64 __cdecl llround(float) throw(); 
#line 9222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline float __cdecl trunc(float) throw(); 
#line 9223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline float __cdecl rint(float) throw(); 
#line 9224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline long __cdecl lrint(float) throw(); 
#line 9225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline __int64 __cdecl llrint(float) throw(); 
#line 9226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline float __cdecl nearbyint(float) throw(); 
#line 9227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline float __cdecl fdim(float, float) throw(); 
#line 9228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline float __cdecl fma(float, float, float) throw(); 
#line 9229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline float __cdecl fmax(float, float) throw(); 
#line 9230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
extern inline float __cdecl fmin(float, float) throw(); 
#line 9233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static inline float exp10(float a); 
#line 9235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static inline float rsqrt(float a); 
#line 9237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static inline float rcbrt(float a); 
#line 9239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static inline float sinpi(float a); 
#line 9241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static inline float cospi(float a); 
#line 9243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static inline void sincospi(float a, float * sptr, float * cptr); 
#line 9245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static inline void sincos(float a, float * sptr, float * cptr); 
#line 9247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static inline float j0(float a); 
#line 9249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static inline float j1(float a); 
#line 9251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static inline float jn(int n, float a); 
#line 9253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static inline float y0(float a); 
#line 9255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static inline float y1(float a); 
#line 9257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static inline float yn(int n, float a); 
#line 9259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static inline float cyl_bessel_i0(float a); 
#line 9261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static inline float cyl_bessel_i1(float a); 
#line 9263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static inline float erfinv(float a); 
#line 9265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static inline float erfcinv(float a); 
#line 9267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static inline float normcdfinv(float a); 
#line 9269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static inline float normcdf(float a); 
#line 9271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static inline float erfcx(float a); 
#line 9273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static inline double copysign(double a, float b); 
#line 9275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static inline float copysign(float a, double b); 
#line 9277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static inline unsigned min(unsigned a, unsigned b); 
#line 9279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static inline unsigned min(int a, unsigned b); 
#line 9281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static inline unsigned min(unsigned a, int b); 
#line 9283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static inline __int64 min(__int64 a, __int64 b); 
#line 9285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static inline unsigned __int64 min(unsigned __int64 a, unsigned __int64 b); 
#line 9287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static inline unsigned __int64 min(__int64 a, unsigned __int64 b); 
#line 9289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static inline unsigned __int64 min(unsigned __int64 a, __int64 b); 
#line 9291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static inline float min(float a, float b); 
#line 9293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static inline double min(double a, double b); 
#line 9295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static inline double min(float a, double b); 
#line 9297 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static inline double min(double a, float b); 
#line 9299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static inline unsigned max(unsigned a, unsigned b); 
#line 9301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static inline unsigned max(int a, unsigned b); 
#line 9303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static inline unsigned max(unsigned a, int b); 
#line 9305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static inline __int64 max(__int64 a, __int64 b); 
#line 9307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static inline unsigned __int64 max(unsigned __int64 a, unsigned __int64 b); 
#line 9309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static inline unsigned __int64 max(__int64 a, unsigned __int64 b); 
#line 9311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static inline unsigned __int64 max(unsigned __int64 a, __int64 b); 
#line 9313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static inline float max(float a, float b); 
#line 9315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static inline double max(double a, double b); 
#line 9317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static inline double max(float a, double b); 
#line 9319 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
static inline double max(double a, float b); 
#line 330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static __inline bool isinf(long double a) 
#line 331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
return isinf< long double> (a); 
#line 337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static __inline bool isinf(double a) 
#line 347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
return isinf< double> (a); 
#line 353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static __inline bool isinf(float a) 
#line 363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
return isinf< float> (a); 
#line 369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static __inline bool isnan(long double a) 
#line 379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
return isnan< long double> (a); 
#line 385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static __inline bool isnan(double a) 
#line 395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
return isnan< double> (a); 
#line 401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static __inline bool isnan(float a) 
#line 411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 415 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
return isnan< float> (a); 
#line 417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 426 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static __inline bool isfinite(long double a) 
#line 427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 431 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
return isfinite< long double> (a); 
#line 433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static __inline bool isfinite(double a) 
#line 443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 447 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
return isfinite< double> (a); 
#line 449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static __inline bool isfinite(float a) 
#line 459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
return isfinite< float> (a); 
#line 465 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 655 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static inline float exp10(float a) 
#line 656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 657 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
return exp10f(a); 
#line 658 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static inline float rsqrt(float a) 
#line 661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
return rsqrtf(a); 
#line 663 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 665 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static inline float rcbrt(float a) 
#line 666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
return rcbrtf(a); 
#line 668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static inline float sinpi(float a) 
#line 671 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 672 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
return sinpif(a); 
#line 673 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 675 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static inline float cospi(float a) 
#line 676 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 677 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
return cospif(a); 
#line 678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static inline void sincospi(float a, float *sptr, float *cptr) 
#line 681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 682 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
sincospif(a, sptr, cptr); 
#line 683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static inline void sincos(float a, float *sptr, float *cptr) 
#line 686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 687 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
sincosf(a, sptr, cptr); 
#line 688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 690 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static inline float j0(float a) 
#line 691 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
return j0f(a); 
#line 693 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 695 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static inline float j1(float a) 
#line 696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 697 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
return j1f(a); 
#line 698 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 700 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static inline float jn(int n, float a) 
#line 701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
return jnf(n, a); 
#line 703 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 705 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static inline float y0(float a) 
#line 706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 707 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
return y0f(a); 
#line 708 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static inline float y1(float a) 
#line 711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 712 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
return y1f(a); 
#line 713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static inline float yn(int n, float a) 
#line 716 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 717 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
return ynf(n, a); 
#line 718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 720 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static inline float cyl_bessel_i0(float a) 
#line 721 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
return cyl_bessel_i0f(a); 
#line 723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static inline float cyl_bessel_i1(float a) 
#line 726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 727 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
return cyl_bessel_i1f(a); 
#line 728 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static inline float erfinv(float a) 
#line 731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 732 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
return erfinvf(a); 
#line 733 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static inline float erfcinv(float a) 
#line 736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 737 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
return erfcinvf(a); 
#line 738 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static inline float normcdfinv(float a) 
#line 741 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 742 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
return normcdfinvf(a); 
#line 743 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static inline float normcdf(float a) 
#line 746 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
return normcdff(a); 
#line 748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static inline float erfcx(float a) 
#line 751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 752 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
return erfcxf(a); 
#line 753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 755 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static inline double copysign(double a, float b) 
#line 756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 757 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
return copysign(a, (double)b); 
#line 758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 760 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static inline float copysign(float a, double b) 
#line 761 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 762 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
return copysignf(a, (float)b); 
#line 763 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 765 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static inline unsigned min(unsigned a, unsigned b) 
#line 766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 767 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
return umin(a, b); 
#line 768 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 770 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static inline unsigned min(int a, unsigned b) 
#line 771 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 772 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
return umin((unsigned)a, b); 
#line 773 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 775 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static inline unsigned min(unsigned a, int b) 
#line 776 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
return umin(a, (unsigned)b); 
#line 778 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static inline __int64 min(__int64 a, __int64 b) 
#line 781 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 782 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
return llmin(a, b); 
#line 783 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 785 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static inline unsigned __int64 min(unsigned __int64 a, unsigned __int64 b) 
#line 786 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 787 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
return ullmin(a, b); 
#line 788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 790 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static inline unsigned __int64 min(__int64 a, unsigned __int64 b) 
#line 791 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 792 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
return ullmin((unsigned __int64)a, b); 
#line 793 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 795 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static inline unsigned __int64 min(unsigned __int64 a, __int64 b) 
#line 796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 797 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
return ullmin(a, (unsigned __int64)b); 
#line 798 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 800 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static inline float min(float a, float b) 
#line 801 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 802 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
return fminf(a, b); 
#line 803 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 805 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static inline double min(double a, double b) 
#line 806 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 807 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
return fmin(a, b); 
#line 808 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 810 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static inline double min(float a, double b) 
#line 811 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 812 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
return fmin((double)a, b); 
#line 813 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 815 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static inline double min(double a, float b) 
#line 816 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 817 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
return fmin(a, (double)b); 
#line 818 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 820 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static inline unsigned max(unsigned a, unsigned b) 
#line 821 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 822 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
return umax(a, b); 
#line 823 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 825 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static inline unsigned max(int a, unsigned b) 
#line 826 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 827 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
return umax((unsigned)a, b); 
#line 828 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 830 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static inline unsigned max(unsigned a, int b) 
#line 831 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 832 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
return umax(a, (unsigned)b); 
#line 833 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 835 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static inline __int64 max(__int64 a, __int64 b) 
#line 836 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 837 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
return llmax(a, b); 
#line 838 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 840 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static inline unsigned __int64 max(unsigned __int64 a, unsigned __int64 b) 
#line 841 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
return ullmax(a, b); 
#line 843 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 845 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static inline unsigned __int64 max(__int64 a, unsigned __int64 b) 
#line 846 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 847 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
return ullmax((unsigned __int64)a, b); 
#line 848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 850 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static inline unsigned __int64 max(unsigned __int64 a, __int64 b) 
#line 851 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 852 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
return ullmax(a, (unsigned __int64)b); 
#line 853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 855 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static inline float max(float a, float b) 
#line 856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 857 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
return fmaxf(a, b); 
#line 858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static inline double max(double a, double b) 
#line 861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 862 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
return fmax(a, b); 
#line 863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 865 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static inline double max(float a, double b) 
#line 866 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
return fmax((double)a, b); 
#line 868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 870 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
static inline double max(double a, float b) 
#line 871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
{ 
#line 872 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
return fmax(a, (double)b); 
#line 873 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
} 
#line 77 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_surface_types.h"
template< class T, int dim = 1> 
#line 78 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_surface_types.h"
struct surface : public surfaceReference { 
#line 81 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_surface_types.h"
surface() 
#line 82 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_surface_types.h"
{ 
#line 83 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_surface_types.h"
(channelDesc) = cudaCreateChannelDesc< T> (); 
#line 84 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_surface_types.h"
} 
#line 86 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_surface_types.h"
surface(::cudaChannelFormatDesc desc) 
#line 87 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_surface_types.h"
{ 
#line 88 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_surface_types.h"
(channelDesc) = desc; 
#line 89 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_surface_types.h"
} 
#line 91 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_surface_types.h"
}; 
#line 93 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_surface_types.h"
template< int dim> 
#line 94 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_surface_types.h"
struct surface< void, dim>  : public surfaceReference { 
#line 97 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_surface_types.h"
surface() 
#line 98 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_surface_types.h"
{ 
#line 99 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_surface_types.h"
(channelDesc) = cudaCreateChannelDesc< void> (); 
#line 100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_surface_types.h"
} 
#line 102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_surface_types.h"
}; 
#line 77 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_texture_types.h"
template< class T, int texType = 1, cudaTextureReadMode mode = cudaReadModeElementType> 
#line 78 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_texture_types.h"
struct texture : public textureReference { 
#line 81 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_texture_types.h"
texture(int norm = 0, ::cudaTextureFilterMode 
#line 82 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_texture_types.h"
fMode = cudaFilterModePoint, ::cudaTextureAddressMode 
#line 83 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_texture_types.h"
aMode = cudaAddressModeClamp) 
#line 84 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_texture_types.h"
{ 
#line 85 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_texture_types.h"
(normalized) = norm; 
#line 86 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_texture_types.h"
(filterMode) = fMode; 
#line 87 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_texture_types.h"
((addressMode)[0]) = aMode; 
#line 88 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_texture_types.h"
((addressMode)[1]) = aMode; 
#line 89 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_texture_types.h"
((addressMode)[2]) = aMode; 
#line 90 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_texture_types.h"
(channelDesc) = cudaCreateChannelDesc< T> (); 
#line 91 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_texture_types.h"
(sRGB) = 0; 
#line 92 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_texture_types.h"
} 
#line 94 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_texture_types.h"
texture(int norm, ::cudaTextureFilterMode 
#line 95 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_texture_types.h"
fMode, ::cudaTextureAddressMode 
#line 96 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_texture_types.h"
aMode, ::cudaChannelFormatDesc 
#line 97 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_texture_types.h"
desc) 
#line 98 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_texture_types.h"
{ 
#line 99 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_texture_types.h"
(normalized) = norm; 
#line 100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_texture_types.h"
(filterMode) = fMode; 
#line 101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_texture_types.h"
((addressMode)[0]) = aMode; 
#line 102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_texture_types.h"
((addressMode)[1]) = aMode; 
#line 103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_texture_types.h"
((addressMode)[2]) = aMode; 
#line 104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_texture_types.h"
(channelDesc) = desc; 
#line 105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_texture_types.h"
(sRGB) = 0; 
#line 106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_texture_types.h"
} 
#line 108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\cuda_texture_types.h"
}; 
#line 3200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.h"
static __inline int mulhi(int a, int b); 
#line 3202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.h"
static __inline unsigned mulhi(unsigned a, unsigned b); 
#line 3204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.h"
static __inline unsigned mulhi(int a, unsigned b); 
#line 3206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.h"
static __inline unsigned mulhi(unsigned a, int b); 
#line 3208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.h"
static __inline __int64 mul64hi(__int64 a, __int64 b); 
#line 3210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.h"
static __inline unsigned __int64 mul64hi(unsigned __int64 a, unsigned __int64 b); 
#line 3212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.h"
static __inline unsigned __int64 mul64hi(__int64 a, unsigned __int64 b); 
#line 3214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.h"
static __inline unsigned __int64 mul64hi(unsigned __int64 a, __int64 b); 
#line 3216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.h"
static __inline int float_as_int(float a); 
#line 3218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.h"
static __inline float int_as_float(int a); 
#line 3220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.h"
static __inline float saturate(float a); 
#line 3222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.h"
static __inline int mul24(int a, int b); 
#line 3224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.h"
static __inline unsigned umul24(unsigned a, unsigned b); 
#line 3226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.h"
static __inline void trap(); 
#line 3229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.h"
static __inline void brkpt(int c = 0); 
#line 3231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.h"
static __inline void syncthreads(); 
#line 3233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.h"
static __inline void prof_trigger(int e); 
#line 3235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.h"
static __inline void threadfence(bool global = true); 
#line 3237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.h"
static __inline int float2int(float a, cudaRoundMode mode = cudaRoundZero); 
#line 3239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.h"
static __inline unsigned float2uint(float a, cudaRoundMode mode = cudaRoundZero); 
#line 3241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.h"
static __inline float int2float(int a, cudaRoundMode mode = cudaRoundNearest); 
#line 3243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.h"
static __inline float uint2float(unsigned a, cudaRoundMode mode = cudaRoundNearest); 
#line 79 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
static __inline int mulhi(int a, int b) 
#line 80 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
#line 82 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
::exit(___);}







#line 91 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
#line 84 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
static __inline unsigned mulhi(unsigned a, unsigned b) 
#line 85 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
#line 87 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
::exit(___);}







#line 96 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
#line 89 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
static __inline unsigned mulhi(int a, unsigned b) 
#line 90 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
#line 92 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
::exit(___);}







#line 101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
#line 94 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
static __inline unsigned mulhi(unsigned a, int b) 
#line 95 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
#line 97 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
::exit(___);}







#line 106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
#line 99 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
static __inline __int64 mul64hi(__int64 a, __int64 b) 
#line 100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
#line 102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
::exit(___);}







#line 111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
#line 104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
static __inline unsigned __int64 mul64hi(unsigned __int64 a, unsigned __int64 b) 
#line 105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
::exit(___);}







#line 116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
#line 109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
static __inline unsigned __int64 mul64hi(__int64 a, unsigned __int64 b) 
#line 110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
#line 112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
::exit(___);}







#line 121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
static __inline unsigned __int64 mul64hi(unsigned __int64 a, __int64 b) 
#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
#line 117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
::exit(___);}







#line 126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
static __inline int float_as_int(float a) 
#line 120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;
#line 122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
::exit(___);}







#line 131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
#line 124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
static __inline float int_as_float(int a) 
#line 125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;
#line 127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
::exit(___);}







#line 136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
#line 129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
static __inline float saturate(float a) 
#line 130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;
#line 132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
::exit(___);}







#line 141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
#line 134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
static __inline int mul24(int a, int b) 
#line 135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
#line 137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
::exit(___);}







#line 146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
#line 139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
static __inline unsigned umul24(unsigned a, unsigned b) 
#line 140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
#line 142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
::exit(___);}







#line 151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
#line 144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
static __inline void trap() 
#line 145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
{int volatile ___ = 1;
#line 147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
::exit(___);}







#line 156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
#line 150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
static __inline void brkpt(int c) 
#line 151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)c;
#line 153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
::exit(___);}







#line 162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
#line 155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
static __inline void syncthreads() 
#line 156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
{int volatile ___ = 1;
#line 158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
::exit(___);}







#line 167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
#line 160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
static __inline void prof_trigger(int e) 
#line 161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)e;
#line 178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
::exit(___);}





































#line 217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
#line 180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
static __inline void threadfence(bool global) 
#line 181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)global;
#line 183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
::exit(___);}







#line 192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
#line 185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
static __inline int float2int(float a, cudaRoundMode mode) 
#line 186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
#line 191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
::exit(___);}







#line 200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
#line 193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
static __inline unsigned float2uint(float a, cudaRoundMode mode) 
#line 194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
#line 199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
::exit(___);}







#line 208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
#line 201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
static __inline float int2float(int a, cudaRoundMode mode) 
#line 202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
#line 207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
::exit(___);}







#line 216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
#line 209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
static __inline float uint2float(unsigned a, cudaRoundMode mode) 
#line 210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
#line 215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
::exit(___);}







#line 224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_functions.hpp"
#line 105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.h"
static __inline int atomicAdd(int * address, int val); 
#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.h"
static __inline unsigned atomicAdd(unsigned * address, unsigned val); 
#line 109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.h"
static __inline int atomicSub(int * address, int val); 
#line 111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.h"
static __inline unsigned atomicSub(unsigned * address, unsigned val); 
#line 113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.h"
static __inline int atomicExch(int * address, int val); 
#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.h"
static __inline unsigned atomicExch(unsigned * address, unsigned val); 
#line 117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.h"
static __inline float atomicExch(float * address, float val); 
#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.h"
static __inline int atomicMin(int * address, int val); 
#line 121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.h"
static __inline unsigned atomicMin(unsigned * address, unsigned val); 
#line 123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.h"
static __inline int atomicMax(int * address, int val); 
#line 125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.h"
static __inline unsigned atomicMax(unsigned * address, unsigned val); 
#line 127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.h"
static __inline unsigned atomicInc(unsigned * address, unsigned val); 
#line 129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.h"
static __inline unsigned atomicDec(unsigned * address, unsigned val); 
#line 131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.h"
static __inline int atomicAnd(int * address, int val); 
#line 133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.h"
static __inline unsigned atomicAnd(unsigned * address, unsigned val); 
#line 135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.h"
static __inline int atomicOr(int * address, int val); 
#line 137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.h"
static __inline unsigned atomicOr(unsigned * address, unsigned val); 
#line 139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.h"
static __inline int atomicXor(int * address, int val); 
#line 141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.h"
static __inline unsigned atomicXor(unsigned * address, unsigned val); 
#line 143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.h"
static __inline int atomicCAS(int * address, int compare, int val); 
#line 145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.h"
static __inline unsigned atomicCAS(unsigned * address, unsigned compare, unsigned val); 
#line 178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.h"
static __inline unsigned __int64 atomicAdd(unsigned __int64 * address, unsigned __int64 val); 
#line 180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.h"
static __inline unsigned __int64 atomicExch(unsigned __int64 * address, unsigned __int64 val); 
#line 182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.h"
static __inline unsigned __int64 atomicCAS(unsigned __int64 * address, unsigned __int64 compare, unsigned __int64 val); 
#line 184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.h"
static __inline bool any(bool cond); 
#line 186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.h"
static __inline bool all(bool cond); 
#line 78 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
static __inline int atomicAdd(int *address, int val) 
#line 79 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 81 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 90 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
#line 83 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
static __inline unsigned atomicAdd(unsigned *address, unsigned val) 
#line 84 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 86 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 95 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
#line 88 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
static __inline int atomicSub(int *address, int val) 
#line 89 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 91 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
#line 93 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
static __inline unsigned atomicSub(unsigned *address, unsigned val) 
#line 94 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 96 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
#line 98 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
static __inline int atomicExch(int *address, int val) 
#line 99 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
#line 103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
static __inline unsigned atomicExch(unsigned *address, unsigned val) 
#line 104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
#line 108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
static __inline float atomicExch(float *address, float val) 
#line 109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
#line 113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
static __inline int atomicMin(int *address, int val) 
#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
#line 118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
static __inline unsigned atomicMin(unsigned *address, unsigned val) 
#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
#line 123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
static __inline int atomicMax(int *address, int val) 
#line 124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
#line 128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
static __inline unsigned atomicMax(unsigned *address, unsigned val) 
#line 129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
#line 133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
static __inline unsigned atomicInc(unsigned *address, unsigned val) 
#line 134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
#line 138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
static __inline unsigned atomicDec(unsigned *address, unsigned val) 
#line 139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
#line 143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
static __inline int atomicAnd(int *address, int val) 
#line 144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
#line 148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
static __inline unsigned atomicAnd(unsigned *address, unsigned val) 
#line 149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
#line 153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
static __inline int atomicOr(int *address, int val) 
#line 154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
#line 158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
static __inline unsigned atomicOr(unsigned *address, unsigned val) 
#line 159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
#line 163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
static __inline int atomicXor(int *address, int val) 
#line 164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
#line 168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
static __inline unsigned atomicXor(unsigned *address, unsigned val) 
#line 169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
#line 173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
static __inline int atomicCAS(int *address, int compare, int val) 
#line 174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)compare;(void)val;
#line 176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
#line 178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
static __inline unsigned atomicCAS(unsigned *address, unsigned compare, unsigned val) 
#line 179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)compare;(void)val;
#line 181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
#line 201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
static __inline unsigned __int64 atomicAdd(unsigned __int64 *address, unsigned __int64 val) 
#line 202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
#line 206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
static __inline unsigned __int64 atomicExch(unsigned __int64 *address, unsigned __int64 val) 
#line 207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
#line 211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
static __inline unsigned __int64 atomicCAS(unsigned __int64 *address, unsigned __int64 compare, unsigned __int64 val) 
#line 212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)compare;(void)val;
#line 214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
#line 216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
static __inline bool any(bool cond) 
#line 217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)cond;
#line 219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
#line 221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
static __inline bool all(bool cond) 
#line 222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)cond;
#line 224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_atomic_functions.hpp"
#line 1141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.h"
static __inline double fma(double a, double b, double c, cudaRoundMode mode); 
#line 1143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.h"
static __inline double dmul(double a, double b, cudaRoundMode mode = cudaRoundNearest); 
#line 1145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.h"
static __inline double dadd(double a, double b, cudaRoundMode mode = cudaRoundNearest); 
#line 1147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.h"
static __inline double dsub(double a, double b, cudaRoundMode mode = cudaRoundNearest); 
#line 1149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.h"
static __inline int double2int(double a, cudaRoundMode mode = cudaRoundZero); 
#line 1151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.h"
static __inline unsigned double2uint(double a, cudaRoundMode mode = cudaRoundZero); 
#line 1153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.h"
static __inline __int64 double2ll(double a, cudaRoundMode mode = cudaRoundZero); 
#line 1155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.h"
static __inline unsigned __int64 double2ull(double a, cudaRoundMode mode = cudaRoundZero); 
#line 1157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.h"
static __inline double ll2double(__int64 a, cudaRoundMode mode = cudaRoundNearest); 
#line 1159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.h"
static __inline double ull2double(unsigned __int64 a, cudaRoundMode mode = cudaRoundNearest); 
#line 1161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.h"
static __inline double int2double(int a, cudaRoundMode mode = cudaRoundNearest); 
#line 1163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.h"
static __inline double uint2double(unsigned a, cudaRoundMode mode = cudaRoundNearest); 
#line 1165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.h"
static __inline double float2double(float a, cudaRoundMode mode = cudaRoundNearest); 
#line 83 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.hpp"
static __inline double fma(double a, double b, double c, cudaRoundMode mode) 
#line 84 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;(void)c;(void)mode;
#line 89 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.hpp"
::exit(___);}







#line 98 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.hpp"
#line 91 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.hpp"
static __inline double dmul(double a, double b, cudaRoundMode mode) 
#line 92 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;(void)mode;
#line 97 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.hpp"
::exit(___);}







#line 106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.hpp"
#line 99 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.hpp"
static __inline double dadd(double a, double b, cudaRoundMode mode) 
#line 100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;(void)mode;
#line 105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.hpp"
::exit(___);}







#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.hpp"
#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.hpp"
static __inline double dsub(double a, double b, cudaRoundMode mode) 
#line 108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;(void)mode;
#line 113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.hpp"
::exit(___);}







#line 122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.hpp"
#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.hpp"
static __inline int double2int(double a, cudaRoundMode mode) 
#line 116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
#line 121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.hpp"
::exit(___);}







#line 130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.hpp"
#line 123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.hpp"
static __inline unsigned double2uint(double a, cudaRoundMode mode) 
#line 124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
#line 129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.hpp"
::exit(___);}







#line 138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.hpp"
#line 131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.hpp"
static __inline __int64 double2ll(double a, cudaRoundMode mode) 
#line 132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
#line 137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.hpp"
::exit(___);}







#line 146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.hpp"
#line 139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.hpp"
static __inline unsigned __int64 double2ull(double a, cudaRoundMode mode) 
#line 140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
#line 145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.hpp"
::exit(___);}







#line 154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.hpp"
#line 147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.hpp"
static __inline double ll2double(__int64 a, cudaRoundMode mode) 
#line 148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
#line 153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.hpp"
::exit(___);}







#line 162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.hpp"
#line 155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.hpp"
static __inline double ull2double(unsigned __int64 a, cudaRoundMode mode) 
#line 156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
#line 161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.hpp"
::exit(___);}







#line 170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.hpp"
#line 163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.hpp"
static __inline double int2double(int a, cudaRoundMode mode) 
#line 164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
#line 166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.hpp"
::exit(___);}







#line 175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.hpp"
#line 168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.hpp"
static __inline double uint2double(unsigned a, cudaRoundMode mode) 
#line 169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
#line 171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.hpp"
::exit(___);}







#line 180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.hpp"
#line 173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.hpp"
static __inline double float2double(float a, cudaRoundMode mode) 
#line 174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
#line 176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.hpp"
::exit(___);}







#line 185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_double_functions.hpp"
#line 85 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_20_atomic_functions.h"
static __inline float atomicAdd(float * address, float val); 
#line 76 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_20_atomic_functions.hpp"
static __inline float atomicAdd(float *address, float val) 
#line 77 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_20_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 79 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_20_atomic_functions.hpp"
::exit(___);}







#line 88 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_20_atomic_functions.hpp"
#line 93 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_atomic_functions.h"
static __inline __int64 atomicMin(__int64 * address, __int64 val); 
#line 95 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_atomic_functions.h"
static __inline __int64 atomicMax(__int64 * address, __int64 val); 
#line 97 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_atomic_functions.h"
static __inline unsigned __int64 atomicMin(unsigned __int64 * address, unsigned __int64 val); 
#line 99 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_atomic_functions.h"
static __inline unsigned __int64 atomicMax(unsigned __int64 * address, unsigned __int64 val); 
#line 101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_atomic_functions.h"
static __inline unsigned __int64 atomicAnd(unsigned __int64 * address, unsigned __int64 val); 
#line 103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_atomic_functions.h"
static __inline unsigned __int64 atomicOr(unsigned __int64 * address, unsigned __int64 val); 
#line 105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_atomic_functions.h"
static __inline unsigned __int64 atomicXor(unsigned __int64 * address, unsigned __int64 val); 
#line 78 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_atomic_functions.hpp"
static __inline __int64 atomicMin(__int64 *address, __int64 val) 
#line 79 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 81 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_atomic_functions.hpp"
::exit(___);}







#line 90 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_atomic_functions.hpp"
#line 83 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_atomic_functions.hpp"
static __inline __int64 atomicMax(__int64 *address, __int64 val) 
#line 84 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 86 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_atomic_functions.hpp"
::exit(___);}







#line 95 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_atomic_functions.hpp"
#line 88 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_atomic_functions.hpp"
static __inline unsigned __int64 atomicMin(unsigned __int64 *address, unsigned __int64 val) 
#line 89 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 91 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_atomic_functions.hpp"
::exit(___);}







#line 100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_atomic_functions.hpp"
#line 93 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_atomic_functions.hpp"
static __inline unsigned __int64 atomicMax(unsigned __int64 *address, unsigned __int64 val) 
#line 94 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 96 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_atomic_functions.hpp"
::exit(___);}







#line 105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_atomic_functions.hpp"
#line 98 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_atomic_functions.hpp"
static __inline unsigned __int64 atomicAnd(unsigned __int64 *address, unsigned __int64 val) 
#line 99 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_atomic_functions.hpp"
::exit(___);}







#line 110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_atomic_functions.hpp"
#line 103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_atomic_functions.hpp"
static __inline unsigned __int64 atomicOr(unsigned __int64 *address, unsigned __int64 val) 
#line 104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_atomic_functions.hpp"
::exit(___);}







#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_atomic_functions.hpp"
#line 108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_atomic_functions.hpp"
static __inline unsigned __int64 atomicXor(unsigned __int64 *address, unsigned __int64 val) 
#line 109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_atomic_functions.hpp"
::exit(___);}







#line 120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_atomic_functions.hpp"
#line 415 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_20_intrinsics.h"
static __inline unsigned ballot(bool pred); 
#line 417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_20_intrinsics.h"
static __inline int syncthreads_count(bool pred); 
#line 419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_20_intrinsics.h"
static __inline bool syncthreads_and(bool pred); 
#line 421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_20_intrinsics.h"
static __inline bool syncthreads_or(bool pred); 
#line 426 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_20_intrinsics.h"
static __inline unsigned __isGlobal(const void * ptr); 
#line 77 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_20_intrinsics.hpp"
static __inline unsigned ballot(bool pred) 
#line 78 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_20_intrinsics.hpp"
{int volatile ___ = 1;(void)pred;
#line 80 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_20_intrinsics.hpp"
::exit(___);}







#line 89 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_20_intrinsics.hpp"
#line 82 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_20_intrinsics.hpp"
static __inline int syncthreads_count(bool pred) 
#line 83 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_20_intrinsics.hpp"
{int volatile ___ = 1;(void)pred;
#line 85 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_20_intrinsics.hpp"
::exit(___);}







#line 94 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_20_intrinsics.hpp"
#line 87 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_20_intrinsics.hpp"
static __inline bool syncthreads_and(bool pred) 
#line 88 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_20_intrinsics.hpp"
{int volatile ___ = 1;(void)pred;
#line 90 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_20_intrinsics.hpp"
::exit(___);}







#line 99 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_20_intrinsics.hpp"
#line 92 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_20_intrinsics.hpp"
static __inline bool syncthreads_or(bool pred) 
#line 93 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_20_intrinsics.hpp"
{int volatile ___ = 1;(void)pred;
#line 95 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_20_intrinsics.hpp"
::exit(___);}







#line 104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_20_intrinsics.hpp"
#line 100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_20_intrinsics.hpp"
static __inline unsigned __isGlobal(const void *ptr) 
#line 101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_20_intrinsics.hpp"
{int volatile ___ = 1;(void)ptr;
#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_20_intrinsics.hpp"
::exit(___);}
















#line 132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_20_intrinsics.hpp"
#line 91 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.h"
static __inline int __shfl(int var, int srcLane, int width = 32); 
#line 93 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.h"
static __inline unsigned __shfl(unsigned var, int srcLane, int width = 32); 
#line 95 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.h"
static __inline int __shfl_up(int var, unsigned delta, int width = 32); 
#line 96 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.h"
static __inline unsigned __shfl_up(unsigned var, unsigned delta, int width = 32); 
#line 98 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.h"
static __inline int __shfl_down(int var, unsigned delta, int width = 32); 
#line 100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.h"
static __inline unsigned __shfl_down(unsigned var, unsigned delta, int width = 32); 
#line 102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.h"
static __inline int __shfl_xor(int var, int laneMask, int width = 32); 
#line 104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.h"
static __inline unsigned __shfl_xor(unsigned var, int laneMask, int width = 32); 
#line 106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.h"
static __inline float __shfl(float var, int srcLane, int width = 32); 
#line 108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.h"
static __inline float __shfl_up(float var, unsigned delta, int width = 32); 
#line 110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.h"
static __inline float __shfl_down(float var, unsigned delta, int width = 32); 
#line 112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.h"
static __inline float __shfl_xor(float var, int laneMask, int width = 32); 
#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.h"
static __inline __int64 __shfl(__int64 var, int srcLane, int width = 32); 
#line 117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.h"
static __inline unsigned __int64 __shfl(unsigned __int64 var, int srcLane, int width = 32); 
#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.h"
static __inline __int64 __shfl_up(__int64 var, unsigned delta, int width = 32); 
#line 121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.h"
static __inline unsigned __int64 __shfl_up(unsigned __int64 var, unsigned delta, int width = 32); 
#line 123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.h"
static __inline __int64 __shfl_down(__int64 var, unsigned delta, int width = 32); 
#line 125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.h"
static __inline unsigned __int64 __shfl_down(unsigned __int64 var, unsigned delta, int width = 32); 
#line 127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.h"
static __inline __int64 __shfl_xor(__int64 var, int laneMask, int width = 32); 
#line 129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.h"
static __inline unsigned __int64 __shfl_xor(unsigned __int64 var, int laneMask, int width = 32); 
#line 131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.h"
static __inline double __shfl(double var, int srcLane, int width = 32); 
#line 133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.h"
static __inline double __shfl_up(double var, unsigned delta, int width = 32); 
#line 135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.h"
static __inline double __shfl_down(double var, unsigned delta, int width = 32); 
#line 137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.h"
static __inline double __shfl_xor(double var, int laneMask, int width = 32); 
#line 141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.h"
static __inline long __shfl(long var, int srcLane, int width = 32); 
#line 143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.h"
static __inline unsigned long __shfl(unsigned long var, int srcLane, int width = 32); 
#line 145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.h"
static __inline long __shfl_up(long var, unsigned delta, int width = 32); 
#line 147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.h"
static __inline unsigned long __shfl_up(unsigned long var, unsigned delta, int width = 32); 
#line 149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.h"
static __inline long __shfl_down(long var, unsigned delta, int width = 32); 
#line 151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.h"
static __inline unsigned long __shfl_down(unsigned long var, unsigned delta, int width = 32); 
#line 153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.h"
static __inline long __shfl_xor(long var, int laneMask, int width = 32); 
#line 155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.h"
static __inline unsigned long __shfl_xor(unsigned long var, int laneMask, int width = 32); 
#line 99 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
static __inline int __shfl(int var, int srcLane, int width) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;
#line 104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
::exit(___);}












#line 118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
#line 106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
static __inline unsigned __shfl(unsigned var, int srcLane, int width) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;
#line 108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
::exit(___);}







#line 117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
#line 110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
static __inline int __shfl_up(int var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
::exit(___);}












#line 129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
#line 116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
static __inline unsigned __shfl_up(unsigned var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
#line 118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
::exit(___);}







#line 127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
#line 120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
static __inline int __shfl_down(int var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
#line 125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
::exit(___);}












#line 139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
#line 127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
static __inline unsigned __shfl_down(unsigned var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
#line 129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
::exit(___);}







#line 138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
#line 131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
static __inline int __shfl_xor(int var, int laneMask, int width) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;
#line 136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
::exit(___);}












#line 150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
#line 138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
static __inline unsigned __shfl_xor(unsigned var, int laneMask, int width) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;
#line 140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
::exit(___);}







#line 149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
#line 142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
static __inline float __shfl(float var, int srcLane, int width) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;
#line 148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
::exit(___);}














#line 164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
#line 150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
static __inline float __shfl_up(float var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
#line 156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
::exit(___);}














#line 172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
#line 158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
static __inline float __shfl_down(float var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
#line 164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
::exit(___);}














#line 180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
#line 166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
static __inline float __shfl_xor(float var, int laneMask, int width) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;
#line 172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
::exit(___);}














#line 188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
#line 175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
static __inline __int64 __shfl(__int64 var, int srcLane, int width) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;
#line 182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
::exit(___);}















#line 199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
#line 184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
static __inline unsigned __int64 __shfl(unsigned __int64 var, int srcLane, int width) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;
#line 186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
::exit(___);}







#line 195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
#line 188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
static __inline __int64 __shfl_up(__int64 var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
#line 195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
::exit(___);}















#line 212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
#line 197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
static __inline unsigned __int64 __shfl_up(unsigned __int64 var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
#line 199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
::exit(___);}







#line 208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
#line 201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
static __inline __int64 __shfl_down(__int64 var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
#line 208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
::exit(___);}















#line 225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
#line 210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
static __inline unsigned __int64 __shfl_down(unsigned __int64 var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
#line 212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
::exit(___);}







#line 221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
#line 214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
static __inline __int64 __shfl_xor(__int64 var, int laneMask, int width) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;
#line 221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
::exit(___);}















#line 238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
#line 223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
static __inline unsigned __int64 __shfl_xor(unsigned __int64 var, int laneMask, int width) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;
#line 225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
::exit(___);}







#line 234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
#line 227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
static __inline double __shfl(double var, int srcLane, int width) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;
#line 234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
::exit(___);}















#line 251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
#line 236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
static __inline double __shfl_up(double var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
#line 243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
::exit(___);}















#line 260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
#line 245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
static __inline double __shfl_down(double var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
#line 252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
::exit(___);}















#line 269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
#line 254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
static __inline double __shfl_xor(double var, int laneMask, int width) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;
#line 261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
::exit(___);}















#line 278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
#line 265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
static __inline long __shfl(long var, int srcLane, int width) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;
#line 269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
::exit(___);}







#line 278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
#line 271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
static __inline unsigned long __shfl(unsigned long var, int srcLane, int width) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;
#line 275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
::exit(___);}







#line 284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
#line 277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
static __inline long __shfl_up(long var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
#line 281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
::exit(___);}







#line 290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
#line 283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
static __inline unsigned long __shfl_up(unsigned long var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
#line 287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
::exit(___);}







#line 296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
#line 289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
static __inline long __shfl_down(long var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
#line 293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
::exit(___);}







#line 302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
#line 295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
static __inline unsigned long __shfl_down(unsigned long var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
#line 299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
::exit(___);}







#line 308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
#line 301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
static __inline long __shfl_xor(long var, int laneMask, int width) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;
#line 305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
::exit(___);}







#line 314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
#line 307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
static __inline unsigned long __shfl_xor(unsigned long var, int laneMask, int width) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;
#line 311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
::exit(___);}







#line 320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_30_intrinsics.hpp"
#line 80 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.h"
static __inline long __ldg(const long * ptr); 
#line 81 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.h"
static __inline unsigned long __ldg(const unsigned long * ptr); 
#line 84 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.h"
static __inline char __ldg(const char * ptr); 
#line 85 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.h"
static __inline short __ldg(const short * ptr); 
#line 86 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.h"
static __inline int __ldg(const int * ptr); 
#line 87 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.h"
static __inline __int64 __ldg(const __int64 * ptr); 
#line 88 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.h"
static __inline char2 __ldg(const char2 * ptr); 
#line 89 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.h"
static __inline char4 __ldg(const char4 * ptr); 
#line 90 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.h"
static __inline short2 __ldg(const short2 * ptr); 
#line 91 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.h"
static __inline short4 __ldg(const short4 * ptr); 
#line 92 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.h"
static __inline int2 __ldg(const int2 * ptr); 
#line 93 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.h"
static __inline int4 __ldg(const int4 * ptr); 
#line 94 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.h"
static __inline longlong2 __ldg(const longlong2 * ptr); 
#line 96 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.h"
static __inline unsigned char __ldg(const unsigned char * ptr); 
#line 97 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.h"
static __inline unsigned short __ldg(const unsigned short * ptr); 
#line 98 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.h"
static __inline unsigned __ldg(const unsigned * ptr); 
#line 99 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.h"
static __inline unsigned __int64 __ldg(const unsigned __int64 * ptr); 
#line 100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.h"
static __inline uchar2 __ldg(const uchar2 * ptr); 
#line 101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.h"
static __inline uchar4 __ldg(const uchar4 * ptr); 
#line 102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.h"
static __inline ushort2 __ldg(const ushort2 * ptr); 
#line 103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.h"
static __inline ushort4 __ldg(const ushort4 * ptr); 
#line 104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.h"
static __inline uint2 __ldg(const uint2 * ptr); 
#line 105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.h"
static __inline uint4 __ldg(const uint4 * ptr); 
#line 106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.h"
static __inline ulonglong2 __ldg(const ulonglong2 * ptr); 
#line 108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.h"
static __inline float __ldg(const float * ptr); 
#line 109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.h"
static __inline double __ldg(const double * ptr); 
#line 110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.h"
static __inline float2 __ldg(const float2 * ptr); 
#line 111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.h"
static __inline float4 __ldg(const float4 * ptr); 
#line 112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.h"
static __inline double2 __ldg(const double2 * ptr); 
#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.h"
static __inline unsigned __funnelshift_l(unsigned lo, unsigned hi, unsigned shift); 
#line 120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.h"
static __inline unsigned __funnelshift_lc(unsigned lo, unsigned hi, unsigned shift); 
#line 123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.h"
static __inline unsigned __funnelshift_r(unsigned lo, unsigned hi, unsigned shift); 
#line 124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.h"
static __inline unsigned __funnelshift_rc(unsigned lo, unsigned hi, unsigned shift); 
#line 102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
static __inline long __ldg(const long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
#line 103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
static __inline unsigned long __ldg(const unsigned long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
static __inline char __ldg(const char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
#line 108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
static __inline short __ldg(const short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
#line 109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
static __inline int __ldg(const int *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
#line 110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
static __inline __int64 __ldg(const __int64 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
#line 111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
static __inline char2 __ldg(const char2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
#line 112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
static __inline char4 __ldg(const char4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
#line 113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
static __inline short2 __ldg(const short2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
static __inline short4 __ldg(const short4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
static __inline int2 __ldg(const int2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
#line 116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
static __inline int4 __ldg(const int4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
#line 117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
static __inline longlong2 __ldg(const longlong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
static __inline unsigned char __ldg(const unsigned char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
#line 120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
static __inline unsigned short __ldg(const unsigned short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
#line 121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
static __inline unsigned __ldg(const unsigned *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
#line 122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
static __inline unsigned __int64 __ldg(const unsigned __int64 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
#line 123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
static __inline uchar2 __ldg(const uchar2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
#line 124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
static __inline uchar4 __ldg(const uchar4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
#line 125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
static __inline ushort2 __ldg(const ushort2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
#line 126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
static __inline ushort4 __ldg(const ushort4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
#line 127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
static __inline uint2 __ldg(const uint2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
#line 128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
static __inline uint4 __ldg(const uint4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
#line 129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
static __inline ulonglong2 __ldg(const ulonglong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
#line 131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
static __inline float __ldg(const float *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
#line 132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
static __inline double __ldg(const double *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
#line 133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
static __inline float2 __ldg(const float2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
#line 134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
static __inline float4 __ldg(const float4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
#line 135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
static __inline double2 __ldg(const double2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
#line 144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
static __inline unsigned __funnelshift_l(unsigned lo, unsigned hi, unsigned shift) 
#line 145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
{int volatile ___ = 1;(void)lo;(void)hi;(void)shift;
#line 149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
::exit(___);}










#line 161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
#line 150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
static __inline unsigned __funnelshift_lc(unsigned lo, unsigned hi, unsigned shift) 
#line 151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
{int volatile ___ = 1;(void)lo;(void)hi;(void)shift;
#line 155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
::exit(___);}










#line 167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
#line 158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
static __inline unsigned __funnelshift_r(unsigned lo, unsigned hi, unsigned shift) 
#line 159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
{int volatile ___ = 1;(void)lo;(void)hi;(void)shift;
#line 163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
::exit(___);}










#line 175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
#line 164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
static __inline unsigned __funnelshift_rc(unsigned lo, unsigned hi, unsigned shift) 
#line 165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
{int volatile ___ = 1;(void)lo;(void)hi;(void)shift;
#line 169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
::exit(___);}










#line 181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\sm_32_intrinsics.hpp"
#line 105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
surf1Dread(T *res, ::surface< void, 1>  surf, int x, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)s;(void)mode;
#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template< class T> static __forceinline T 
#line 117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
surf1Dread(::surface< void, 1>  surf, int x, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}











#line 137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
surf1Dread(T *res, ::surface< void, 1>  surf, int x, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)mode;
#line 130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline char surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline signed char surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline unsigned char surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline char1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline uchar1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline char2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline uchar2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline char4 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline uchar4 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline short surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline unsigned short surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline short1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ushort1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline short2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ushort2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline short4 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ushort4 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline int surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline unsigned surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline int1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 258 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline uint1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline int2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline uint2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline int4 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 297 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline uint4 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline __int64 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline unsigned __int64 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline longlong1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 319 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ulonglong1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 319 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline longlong2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 327 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ulonglong2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline long surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline unsigned long surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline long1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ulong1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline long2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ulong2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline long4 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ulong4 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline float surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline float1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline float2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline float4 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 429 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 453 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 454 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
surf2Dread(T *res, ::surface< void, 2>  surf, int x, int y, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 455 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)s;(void)mode;
#line 462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 471 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 464 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template< class T> static __forceinline T 
#line 465 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
surf2Dread(::surface< void, 2>  surf, int x, int y, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}











#line 485 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 474 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 475 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
surf2Dread(T *res, ::surface< void, 2>  surf, int x, int y, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 476 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)mode;
#line 478 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline char surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline signed char surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 490 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline unsigned char surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 496 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 505 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline char1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 502 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 505 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline uchar1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 506 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 508 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 517 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline char2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 512 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 516 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 527 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 519 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline uchar2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 520 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 522 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 525 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline char4 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 526 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 530 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 541 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 533 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline uchar4 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 534 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 539 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline short surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline unsigned short surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 546 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 548 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline short1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 563 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ushort1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 569 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 563 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline short2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 579 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ushort2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 574 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 577 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline short4 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 578 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 582 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 593 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 585 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ushort4 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 588 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 591 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline int surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 592 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 594 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 603 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline unsigned surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 609 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 603 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline int1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 606 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 615 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 609 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline uint1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 612 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 621 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 615 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline int2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 620 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline uint2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 635 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 629 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline int4 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 634 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline uint4 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 649 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 643 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline __int64 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 655 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 649 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline unsigned __int64 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 650 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 652 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 655 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline longlong1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 658 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ulonglong1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 673 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline longlong2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 672 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 675 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ulonglong2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 676 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 687 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline long surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 684 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 695 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 689 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline unsigned long surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 690 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 695 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline long1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 698 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 707 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ulong1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 707 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline long2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 708 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 712 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ulong2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 716 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 720 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline long4 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 724 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 728 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 739 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ulong4 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 732 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 741 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline float surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 742 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 744 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline float1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 759 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline float2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 754 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 761 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline float4 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 762 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 801 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 802 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
surf3Dread(T *res, ::surface< void, 3>  surf, int x, int y, int z, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 803 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)z;(void)s;(void)mode;
#line 810 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 819 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 812 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template< class T> static __forceinline T 
#line 813 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
surf3Dread(::surface< void, 3>  surf, int x, int y, int z, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 814 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 820 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}











#line 833 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 822 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 823 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
surf3Dread(T *res, ::surface< void, 3>  surf, int x, int y, int z, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 824 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 826 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 835 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline char surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 830 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 832 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 841 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 835 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline signed char surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 836 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 838 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 847 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 841 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline unsigned char surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 844 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 847 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline char1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 850 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 859 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline uchar1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 854 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 865 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 859 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline char2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 864 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 875 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline uchar2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 870 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 873 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline char4 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 878 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 889 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 881 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline uchar4 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 884 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline short surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 899 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline unsigned short surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 894 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 896 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 905 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 899 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline short1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 900 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 902 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 905 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ushort1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 908 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 917 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline short2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 912 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 927 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 919 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ushort2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 920 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 925 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline short4 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 926 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 941 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 933 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ushort4 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 934 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 939 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline int surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 940 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 942 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 951 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline unsigned surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 948 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 951 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline int1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 954 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 963 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline uint1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 960 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 969 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 963 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline int2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 964 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 968 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline uint2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 974 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 983 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 977 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline int4 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 982 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 993 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 985 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline uint4 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 986 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 988 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 997 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 991 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline __int64 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 994 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1003 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 997 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline unsigned __int64 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1003 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline longlong1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1004 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1006 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1015 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ulonglong1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1010 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1012 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1021 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1015 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline longlong2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1020 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 1031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1023 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ulonglong2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1026 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1035 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline long surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1034 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline unsigned long surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1038 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1040 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1049 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline long1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1046 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1055 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1049 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ulong1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1050 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1052 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1061 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1055 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline long2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1056 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1060 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 1071 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1063 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ulong2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1064 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1068 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 1079 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1071 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline long4 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1072 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1076 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 1087 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1079 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ulong4 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1080 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1084 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 1095 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1089 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline float surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1090 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1092 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1095 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline float1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1096 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1098 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline float2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 1117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline float4 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 1125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 1150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
surf1DLayeredread(T *res, ::surface< void, 241>  surf, int x, int layer, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 1151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)layer;(void)s;(void)mode;
#line 1158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template< class T> static __forceinline T 
#line 1161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
surf1DLayeredread(::surface< void, 241>  surf, int x, int layer, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 1162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}











#line 1181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 1171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
surf1DLayeredread(T *res, ::surface< void, 241>  surf, int x, int layer, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 1172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)layer;(void)mode;
#line 1174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline char surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline signed char surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline unsigned char surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline char1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline uchar1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline char2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 1223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline uchar2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline char4 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 1237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline uchar4 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline short surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline unsigned short surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline short1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ushort1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline short2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 1275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ushort2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline short4 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 1289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ushort4 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline int surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline unsigned surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline int1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline uint1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline int2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 1327 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1319 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline uint2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1322 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline int4 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1326 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 1341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline uint4 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1345 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline __int64 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1345 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline unsigned __int64 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline longlong1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1352 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ulonglong1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline longlong2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 1379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ulonglong2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline long surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1382 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline unsigned long surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline long1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ulong1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline long2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 1419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ulong2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 1427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline long4 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 1435 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ulong4 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1428 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 1443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline float surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline float1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1446 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1455 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline float2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1450 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1454 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 1465 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1457 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline float4 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 1473 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1508 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 1509 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
surf2DLayeredread(T *res, ::surface< void, 242>  surf, int x, int y, int layer, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 1510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layer;(void)s;(void)mode;
#line 1517 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1526 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1519 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template< class T> static __forceinline T 
#line 1520 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
surf2DLayeredread(::surface< void, 242>  surf, int x, int y, int layer, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 1521 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1527 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}











#line 1540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 1530 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
surf2DLayeredread(T *res, ::surface< void, 242>  surf, int x, int y, int layer, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 1531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1533 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline char surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1537 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1539 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1548 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline signed char surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1543 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1548 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline unsigned char surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1549 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline char1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1566 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline uchar1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1561 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1563 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1566 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline char2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1567 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 1582 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1574 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline uchar2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1577 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1580 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline char4 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1585 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 1596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1588 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline uchar4 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1591 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1594 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline short surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1606 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline unsigned short surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1603 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1612 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1606 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline short1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1607 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1609 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1612 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ushort1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1615 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline short2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 1634 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ushort2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1627 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1629 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline short4 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 1648 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ushort4 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1641 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1643 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1652 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline int surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1647 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1649 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1658 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1652 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline unsigned surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1655 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1658 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline int1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1659 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline uint1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1665 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1676 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline int2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1671 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1675 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 1686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline uint2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1679 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1690 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1684 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline int4 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1689 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 1700 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline uint4 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1693 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1695 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1698 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline __int64 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline unsigned __int64 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1705 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1707 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1716 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline longlong1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1716 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ulonglong1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1717 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1728 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline longlong2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1727 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 1738 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ulonglong2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1733 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1742 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1738 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline long surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1739 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1741 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1744 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline unsigned long surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline long1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1762 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ulong1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1757 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1759 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1768 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1762 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline long2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1763 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1767 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 1778 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1770 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ulong2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1771 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1775 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 1786 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1778 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline long4 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1779 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1783 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 1794 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1786 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ulong4 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1787 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1791 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 1802 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline float surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1797 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1799 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1808 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1802 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline float1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1803 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1805 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1814 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1808 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline float2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1809 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1813 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 1824 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1816 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline float4 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1817 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1821 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 1832 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1844 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 1845 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
surfCubemapread(T *res, ::surface< void, 12>  surf, int x, int y, int face, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 1846 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)face;(void)s;(void)mode;
#line 1853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1862 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1855 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template< class T> static __forceinline T 
#line 1856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
surfCubemapread(::surface< void, 12>  surf, int x, int y, int face, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 1857 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}











#line 1876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1865 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 1866 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
surfCubemapread(T *res, ::surface< void, 12>  surf, int x, int y, int face, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 1867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1869 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1878 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1872 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline char surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1873 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1875 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1884 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1878 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline signed char surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1881 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1884 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline unsigned char surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1896 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline char1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1891 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1902 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1896 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline uchar1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1899 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1908 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1902 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline char2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1903 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1907 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 1918 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1910 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline uchar2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1913 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline char4 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1917 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1921 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 1932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1924 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline uchar4 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1925 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1927 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline short surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1933 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1942 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline unsigned short surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1937 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1939 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1948 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1942 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline short1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1954 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1948 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ushort1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1949 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1951 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1960 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1954 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline short2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1955 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1959 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 1970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1962 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ushort2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1963 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1965 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1974 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1968 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline short4 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1969 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1973 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 1984 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1976 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ushort4 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1977 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1988 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1982 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline int surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1983 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1985 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 1994 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1988 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline unsigned surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1989 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1991 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 2000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 1994 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline int1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1995 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1997 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 2006 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline uint1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2001 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2003 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 2012 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2006 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline int2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2011 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 2022 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2014 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline uint2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2015 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 2026 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2020 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline int4 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2021 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2025 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 2036 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2028 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline uint4 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2029 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 2040 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2034 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline __int64 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2035 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 2046 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2040 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline unsigned __int64 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2041 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 2052 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2046 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline longlong1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2049 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 2058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2052 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ulonglong1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2055 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 2064 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline longlong2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2059 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2063 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 2074 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2066 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ulonglong2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2067 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 2078 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2074 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline long surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2075 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2077 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 2086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2080 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline unsigned long surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2081 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2083 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 2092 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline long1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2087 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2089 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 2098 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2092 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ulong1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2093 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2095 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 2104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2098 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline long2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2099 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 2114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ulong2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 2122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline long4 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 2130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ulong4 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 2138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline float surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 2144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline float1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 2150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline float2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 2160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline float4 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 2168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 2182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
surfCubemapLayeredread(T *res, ::surface< void, 252>  surf, int x, int y, int layerFace, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layerFace;(void)s;(void)mode;
#line 2190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 2199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template< class T> static __forceinline T 
#line 2193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
surfCubemapLayeredread(::surface< void, 252>  surf, int x, int y, int layerFace, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}











#line 2213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 2203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
surfCubemapLayeredread(T *res, ::surface< void, 252>  surf, int x, int y, int layerFace, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 2215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline char surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 2221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline signed char surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 2227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline unsigned char surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 2233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline char1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 2239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline uchar1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 2245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline char2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 2255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline uchar2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 2259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline char4 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2258 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 2269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline uchar4 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 2273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline short surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 2279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline unsigned short surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 2285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline short1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 2291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ushort1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 2297 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline short2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 2307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ushort2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 2311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline short4 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 2321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ushort4 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 2325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2319 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline int surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2322 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 2331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline unsigned surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2326 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 2337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline int1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 2343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline uint1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 2349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline int2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 2359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline uint2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2352 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 2363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline int4 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 2373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline uint4 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 2377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline __int64 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 2383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline unsigned __int64 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 2389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline longlong1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 2395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ulonglong1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 2401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline longlong2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 2411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ulonglong2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 2415 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline long surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 2423 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline unsigned long surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 2429 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2423 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline long1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2426 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 2435 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2429 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ulong1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 2441 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2435 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline long2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 2451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ulong2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 2459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline long4 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2452 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 2467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline ulong4 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2464 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 2475 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline float surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 2481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2475 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline float1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2476 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2478 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 2487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline float2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 2497 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template<> __forceinline float4 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2490 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}









#line 2505 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2530 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 2531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
surf1Dwrite(T val, ::surface< void, 1>  surf, int x, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2532 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)s;(void)mode;
#line 2550 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}

























#line 2577 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 2553 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
surf1Dwrite(T val, ::surface< void, 1>  surf, int x, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2556 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 2565 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2559 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(char val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2561 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(signed char val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2563 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(unsigned char val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2565 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(char1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2567 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(uchar1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2569 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(char2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(uchar2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2573 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(char4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(uchar4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2577 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(short val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2579 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(unsigned short val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(short1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(ushort1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2585 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(short2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2587 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(ushort2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(short4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2591 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(ushort4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2593 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(int val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(unsigned val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(int1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2599 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(uint1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(int2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2603 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(uint2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(int4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2607 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(uint4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2609 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(__int64 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(unsigned __int64 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(longlong1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2615 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(ulonglong1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(longlong2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(ulonglong2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(long val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(unsigned long val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2627 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(long1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2629 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(ulong1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(long2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(ulong2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2635 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(long4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(ulong4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2641 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(float val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2643 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(float1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(float2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2647 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(float4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 2684 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
surf2Dwrite(T val, ::surface< void, 2>  surf, int x, int y, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)s;(void)mode;
#line 2703 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}

























#line 2730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2705 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 2706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
surf2Dwrite(T val, ::surface< void, 2>  surf, int x, int y, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2707 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2709 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 2718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2712 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(char val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2714 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(signed char val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2716 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(unsigned char val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(char1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2720 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(uchar1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(char2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2724 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(uchar2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(char4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2728 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(uchar4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(short val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2732 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(unsigned short val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2734 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(short1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(ushort1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2738 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(short2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(ushort2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2742 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(short4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2744 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(ushort4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2746 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(int val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(unsigned val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(int1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2752 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(uint1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2754 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(int2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(uint2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(int4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2760 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(uint4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2762 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(__int64 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2764 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(unsigned __int64 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(longlong1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2768 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(ulonglong1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2770 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(longlong2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2772 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(ulonglong2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2776 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(long val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2778 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(unsigned long val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(long1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2782 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(ulong1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2784 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(long2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2786 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(ulong2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(long4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2790 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(ulong4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2794 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(float val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(float1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2798 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(float2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2800 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(float4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2836 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 2837 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
surf3Dwrite(T val, ::surface< void, 3>  surf, int x, int y, int z, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2838 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)s;(void)mode;
#line 2856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}

























#line 2883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 2859 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
surf3Dwrite(T val, ::surface< void, 3>  surf, int x, int y, int z, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 2862 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 2871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 2865 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(char val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(signed char val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2869 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(unsigned char val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(char1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2873 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(uchar1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2875 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(char2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2877 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(uchar2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(char4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2881 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(uchar4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(short val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(unsigned short val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(short1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2889 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(ushort1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2891 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(short2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(ushort2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2895 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(short4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(ushort4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2899 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(int val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2901 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(unsigned val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2903 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(int1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2905 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(uint1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2907 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(int2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2909 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(uint2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(int4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2913 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(uint4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2915 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(__int64 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2917 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(unsigned __int64 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2919 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(longlong1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2921 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(ulonglong1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2923 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(longlong2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2925 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(ulonglong2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2929 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(long val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(unsigned long val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2933 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(long1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2935 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(ulong1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2937 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(long2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2939 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(ulong2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2941 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(long4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(ulong4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2947 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(float val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2949 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(float1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2951 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(float2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2953 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(float4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2989 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 2990 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
surf1DLayeredwrite(T val, ::surface< void, 241>  surf, int x, int layer, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2991 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)s;(void)mode;
#line 3009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}

























#line 3036 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 3011 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 3012 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
surf1DLayeredwrite(T val, ::surface< void, 241>  surf, int x, int layer, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3013 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3015 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 3024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 3018 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(char val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3020 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(signed char val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3022 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(unsigned char val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(char1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3026 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(uchar1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3028 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(char2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(uchar2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(char4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3034 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(uchar4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3036 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(short val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3038 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(unsigned short val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3040 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(short1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3042 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(ushort1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(short2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3046 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(ushort2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(short4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3050 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(ushort4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3052 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(int val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(unsigned val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3056 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(int1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(uint1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3060 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(int2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(uint2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3064 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(int4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3066 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(uint4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3068 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(__int64 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3070 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(unsigned __int64 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3072 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(longlong1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3074 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(ulonglong1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3076 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(longlong2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3078 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(ulonglong2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3082 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(long val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3084 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(unsigned long val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(long1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3088 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(ulong1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3090 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(long2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3092 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(ulong2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3094 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(long4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3096 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(ulong4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(float val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(float1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(float2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(float4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 3154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
surf2DLayeredwrite(T val, ::surface< void, 242>  surf, int x, int y, int layer, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)s;(void)mode;
#line 3173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}

























#line 3200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 3175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 3176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
surf2DLayeredwrite(T val, ::surface< void, 242>  surf, int x, int y, int layer, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 3188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 3182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(char val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(signed char val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(unsigned char val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(char1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(uchar1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(char2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(uchar2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(char4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(uchar4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(short val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(unsigned short val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(short1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(ushort1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(short2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(ushort2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(short4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(ushort4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(int val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(unsigned val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(int1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(uint1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(int2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(uint2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(int4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(uint4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(__int64 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(unsigned __int64 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(longlong1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(ulonglong1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(longlong2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(ulonglong2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(long val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(unsigned long val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(long1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(ulong1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(long2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(ulong2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3258 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(long4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(ulong4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(float val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(float1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(float2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(float4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 3296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
surfCubemapwrite(T val, ::surface< void, 12>  surf, int x, int y, int face, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3297 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)s;(void)mode;
#line 3315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}

























#line 3342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 3317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 3318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
surfCubemapwrite(T val, ::surface< void, 12>  surf, int x, int y, int face, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3319 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 3321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 3330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 3324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(char val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3326 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(signed char val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(unsigned char val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(char1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(uchar1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(char2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(uchar2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(char4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(uchar4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(short val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(unsigned short val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(short1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(ushort1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(short2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3352 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(ushort2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(short4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(ushort4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(int val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(unsigned val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(int1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(uint1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(int2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(uint2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(int4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(uint4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(__int64 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(unsigned __int64 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(longlong1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(ulonglong1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3382 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(longlong2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(ulonglong2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(long val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(unsigned long val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(long1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(ulong1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(long2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(ulong2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(long4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(ulong4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(float val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(float1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(float2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(float4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 3438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
surfCubemapLayeredwrite(T val, ::surface< void, 252>  surf, int x, int y, int layerFace, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3439 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)s;(void)mode;
#line 3457 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}

























#line 3484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 3459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 3460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
surfCubemapLayeredwrite(T val, ::surface< void, 252>  surf, int x, int y, int layerFace, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3461 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 3463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
::exit(___);}







#line 3472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
#line 3466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(char val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3468 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(signed char val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(unsigned char val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(char1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3474 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(uchar1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3476 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(char2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3478 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(uchar2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3480 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(char4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(uchar4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(short val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(unsigned short val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(short1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3490 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(ushort1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3492 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(short2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(ushort2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3496 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(short4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3498 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(ushort4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(int val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3502 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(unsigned val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3504 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(int1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3506 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(uint1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3508 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(int2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(uint2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3512 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(int4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(uint4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3516 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(__int64 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(unsigned __int64 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3520 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(longlong1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3522 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(ulonglong1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3524 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(longlong2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3526 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(ulonglong2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3530 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(long val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3532 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(unsigned long val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3534 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(long1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(ulong1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(long2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(ulong2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(long4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3544 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(ulong4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3548 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(float val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3550 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(float1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(float2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(float4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 94 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(char val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 95 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 97 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 99 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(signed char val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(unsigned char val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(char1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(uchar1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(char2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(uchar2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(char4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(uchar4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(short val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(unsigned short val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(short1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(ushort1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(short2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(ushort2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(short4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(ushort4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(int val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(unsigned val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 187 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(int1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(uint1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(int2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(uint2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(int4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(uint4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(__int64 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(unsigned __int64 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(longlong1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(ulonglong1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(longlong2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(ulonglong2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(long val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(unsigned long val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(long1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(ulong1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(long2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(ulong2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(long4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(ulong4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(float val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(float1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(float2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(float4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(char val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(signed char val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(unsigned char val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(char1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 352 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(uchar1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(char2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(uchar2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(char4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(uchar4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(short val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 382 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(unsigned short val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(short1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(ushort1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(short2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(ushort2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(short4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 423 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(ushort4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 428 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(int val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 426 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(unsigned val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 429 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 431 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(int1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(uint1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 439 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 441 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(int2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 453 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 446 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(uint2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 447 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(int4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 452 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 454 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(uint4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 457 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 468 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 461 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(__int64 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 464 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 473 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(unsigned __int64 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 478 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 471 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(longlong1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 474 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 476 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(ulonglong1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 477 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(longlong2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(ulonglong2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 498 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(long val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 496 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 505 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 498 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(unsigned long val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 501 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 503 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(long1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 504 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 506 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 508 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(ulong1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 509 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 520 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(long2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 516 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 525 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(ulong2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 519 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 521 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 530 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 523 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(long4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 524 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 526 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 535 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 528 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(ulong4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 535 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(float val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 547 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(float1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 541 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 543 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(float2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 546 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 548 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 550 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(float4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 553 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 562 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 578 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(char val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 579 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 590 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(signed char val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 588 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(unsigned char val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 591 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 593 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(char1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 594 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(uchar1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 599 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 603 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(char2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 606 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 615 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 608 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(uchar2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 609 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 620 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(char4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 614 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(uchar4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 621 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(short val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 635 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 628 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(unsigned short val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 629 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(short1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 634 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 636 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(ushort1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 639 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 641 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 650 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 643 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(short2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 655 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 648 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(ushort2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 649 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 651 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(short4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 665 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 658 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(ushort4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 659 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 663 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(int val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 675 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(unsigned val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 669 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 671 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 673 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(int1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 676 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(uint1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 679 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 690 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(int2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 684 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 695 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(uint2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 689 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 691 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 700 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 693 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(int4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 705 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 698 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(uint4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 703 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(__int64 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 708 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(unsigned __int64 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 709 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 720 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(longlong1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 714 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 716 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(ulonglong1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 721 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(longlong2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 724 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 728 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(ulonglong2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 729 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(long val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 738 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(unsigned long val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 741 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 743 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 752 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(long1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 746 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 757 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(ulong1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 762 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 755 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(long2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 767 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 760 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(ulong2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 761 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 763 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 772 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 765 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(long4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 768 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 770 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(ulong4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 771 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 773 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 782 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(float val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 778 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 789 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 782 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(float1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 783 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 785 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 794 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 787 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(float2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 790 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 799 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 792 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(float4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 793 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 795 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 804 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 820 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(char val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 821 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 823 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 832 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 825 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(signed char val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 826 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 828 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 837 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 830 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(unsigned char val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 831 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 833 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 835 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(char1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 836 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 838 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 847 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 840 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(uchar1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 841 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 843 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 852 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 845 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(char2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 846 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 857 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 850 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(uchar2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 851 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 862 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 855 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(char4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(uchar4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 872 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 865 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(short val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 866 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 877 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 870 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(unsigned short val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 873 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 875 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(short1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 878 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 880 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(ushort1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 881 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 892 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(short2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(ushort2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 891 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 902 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 895 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(short4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 896 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 907 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 900 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(ushort4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 901 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 903 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 912 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 905 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(int val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 908 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 917 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 910 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(unsigned val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 913 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 915 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(int1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 918 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 927 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 920 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(uint1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 921 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 923 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 925 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(int2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 926 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 937 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(uint2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 933 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 942 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 935 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(int4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 947 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 940 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(uint4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 941 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(__int64 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 948 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 950 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(unsigned __int64 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 951 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 953 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 962 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 955 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(longlong1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 956 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 967 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 960 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(ulonglong1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 961 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 963 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 965 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(longlong2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 966 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 968 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 977 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(ulonglong2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 973 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 982 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 977 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(long val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 989 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 982 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(unsigned long val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 983 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 985 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 994 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 987 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(long1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 988 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 990 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 999 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(ulong1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 993 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 995 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1004 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 997 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(long2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 1000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1002 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(ulong2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1003 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 1005 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1014 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(long4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1008 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 1010 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1019 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1012 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(ulong4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1013 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 1015 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1019 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(float val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1020 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 1022 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(float1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1025 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 1027 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1036 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1029 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(float2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 1032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1041 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1034 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(float4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1035 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 1037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1046 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(char val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1063 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1065 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1074 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1067 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(signed char val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1068 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1070 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1079 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1072 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(unsigned char val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1073 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1075 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1084 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1077 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(char1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1078 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1080 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1089 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1082 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(uchar1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1083 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1085 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1094 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1087 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(char2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1088 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1090 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1099 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1092 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(uchar2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1093 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1095 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1097 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(char4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1098 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(uchar4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(short val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(unsigned short val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(short1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(ushort1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(short2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(ushort2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(short4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(ushort4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(int val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(unsigned val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(int1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(uint1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(int2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(uint2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(int4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(uint4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1187 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(__int64 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(unsigned __int64 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(longlong1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(ulonglong1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(longlong2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(ulonglong2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(long val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(unsigned long val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(long1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(ulong1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(long2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(ulong2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(long4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(ulong4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(float val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(float1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(float2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(float4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(char val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(signed char val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1322 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(unsigned char val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1327 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(char1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(uchar1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1326 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(char2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(uchar2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(char4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1352 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1345 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(uchar4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(short val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(unsigned short val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(short1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(ushort1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(short2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1382 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(ushort2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(short4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(ushort4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(int val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(unsigned val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(int1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(uint1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(int2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1415 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(uint2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(int4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1423 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(uint4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1426 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1428 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(__int64 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1431 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1435 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(unsigned __int64 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1447 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(longlong1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1441 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1452 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(ulonglong1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1446 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1457 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1450 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(longlong2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1453 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1455 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(ulonglong2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(long val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1465 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1474 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(unsigned long val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1468 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(long1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1473 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1475 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1477 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(ulong1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1478 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1480 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(long2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1485 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(ulong2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1490 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1492 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(long4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1495 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1504 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1497 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(ulong4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1498 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1509 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1504 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(float val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1505 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1516 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1509 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(float1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1512 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1521 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(float2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1517 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1526 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1519 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(float4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1520 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1522 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1548 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(char val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1549 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1553 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(signed char val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1556 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1565 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(unsigned char val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1559 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1561 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1570 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1563 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(char1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1566 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(uchar1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1569 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1580 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1573 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(char2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1574 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1576 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1585 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1578 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(uchar2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1579 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1590 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(char4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1588 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(uchar4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1591 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1593 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(short val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1594 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(unsigned short val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1599 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1603 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(short1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1606 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1615 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1608 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(ushort1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1609 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1620 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(short2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1614 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(ushort2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1621 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(short4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1635 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1628 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(ushort4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1629 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(int val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1634 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1636 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(unsigned val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1639 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1641 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1650 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1643 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(int1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1655 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1648 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(uint1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1649 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1651 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(int2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1665 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1658 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(uint2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1659 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1663 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(int4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1675 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(uint4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1669 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1671 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1673 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(__int64 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1676 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(unsigned __int64 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1679 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1690 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(longlong1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1684 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1695 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(ulonglong1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1689 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1691 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1700 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1693 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(longlong2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1705 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1698 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(ulonglong2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1705 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(long val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1708 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1717 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(unsigned long val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(long1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1716 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1727 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1720 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(ulong1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1721 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1732 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(long2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1728 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1737 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(ulong2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1733 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1742 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(long4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1738 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(ulong4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1741 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1743 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1752 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(float val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1759 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1752 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(float1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1755 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1764 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1757 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(float2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1760 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 1762 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(float4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1763 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1765 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
::exit(___);}







#line 1774 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_functions.hpp"
#line 141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
template< class T, cudaTextureReadMode readMode> static __forceinline ::uint4 
#line 143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
__utexfetchi(texture< T, 1, readMode>  t, ::int4 i) 
#line 144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;
#line 146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
::exit(___);}







#line 155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
#line 148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
template< class T, cudaTextureReadMode readMode> static __forceinline ::int4 
#line 150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
__itexfetchi(texture< T, 1, readMode>  t, ::int4 i) 
#line 151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;
#line 153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
::exit(___);}







#line 162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
#line 155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
template< class T, cudaTextureReadMode readMode> static __forceinline ::float4 
#line 157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
__ftexfetchi(texture< T, 1, readMode>  t, ::int4 i) 
#line 158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;
#line 160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
::exit(___);}







#line 169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
#line 162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::uint4 
#line 164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
__utexfetch(texture< T, texType, readMode>  t, ::float4 i, int d = texType) 
#line 165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)d;
#line 172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
::exit(___);}















#line 189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
#line 174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::int4 
#line 176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
__itexfetch(texture< T, texType, readMode>  t, ::float4 i, int d = texType) 
#line 177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)d;
#line 184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
::exit(___);}















#line 201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
#line 186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::float4 
#line 188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
__ftexfetch(texture< T, texType, readMode>  t, ::float4 i, int d = texType) 
#line 189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)d;
#line 196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
::exit(___);}















#line 213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
#line 198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::uint4 
#line 200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
__utexfetchc(texture< T, texType, readMode>  t, ::float4 i) 
#line 201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;
#line 203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
::exit(___);}







#line 212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
#line 205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::int4 
#line 207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
__itexfetchc(texture< T, texType, readMode>  t, ::float4 i) 
#line 208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;
#line 210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
::exit(___);}







#line 219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
#line 212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::float4 
#line 214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
__ftexfetchc(texture< T, texType, readMode>  t, ::float4 i) 
#line 215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;
#line 217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
::exit(___);}







#line 226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
#line 219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::uint4 
#line 221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
__utexfetchl(texture< T, texType, readMode>  t, ::float4 i, int l, int d = texType & 15) 
#line 222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)l;(void)d;
#line 228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
::exit(___);}













#line 243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
#line 230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::int4 
#line 232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
__itexfetchl(texture< T, texType, readMode>  t, ::float4 i, int l, int d = texType & 15) 
#line 233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)l;(void)d;
#line 239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
::exit(___);}













#line 254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
#line 241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::float4 
#line 243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
__ftexfetchl(texture< T, texType, readMode>  t, ::float4 i, int l, int d = texType & 15) 
#line 244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)l;(void)d;
#line 250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
::exit(___);}













#line 265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
#line 252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::uint4 
#line 254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
__utexfetchlc(texture< T, texType, readMode>  t, ::float4 i, int l) 
#line 255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)l;
#line 257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
::exit(___);}







#line 266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
#line 259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::int4 
#line 261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
__itexfetchlc(texture< T, texType, readMode>  t, ::float4 i, int l) 
#line 262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)l;
#line 264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
::exit(___);}







#line 273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
#line 266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::float4 
#line 268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
__ftexfetchlc(texture< T, texType, readMode>  t, ::float4 i, int l) 
#line 269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)l;
#line 271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
::exit(___);}







#line 280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
#line 280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char tex1Dfetch(texture< char, 1, cudaReadModeElementType>  t, int x); 
#line 282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline signed char tex1Dfetch(texture< signed char, 1, cudaReadModeElementType>  t, int x); 
#line 284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex1Dfetch(texture< unsigned char, 1, cudaReadModeElementType>  t, int x); 
#line 286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char1 tex1Dfetch(texture< char1, 1, cudaReadModeElementType>  t, int x); 
#line 288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex1Dfetch(texture< uchar1, 1, cudaReadModeElementType>  t, int x); 
#line 290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char2 tex1Dfetch(texture< char2, 1, cudaReadModeElementType>  t, int x); 
#line 292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex1Dfetch(texture< uchar2, 1, cudaReadModeElementType>  t, int x); 
#line 294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char4 tex1Dfetch(texture< char4, 1, cudaReadModeElementType>  t, int x); 
#line 296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex1Dfetch(texture< uchar4, 1, cudaReadModeElementType>  t, int x); 
#line 304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short tex1Dfetch(texture< short, 1, cudaReadModeElementType>  t, int x); 
#line 306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex1Dfetch(texture< unsigned short, 1, cudaReadModeElementType>  t, int x); 
#line 308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short1 tex1Dfetch(texture< short1, 1, cudaReadModeElementType>  t, int x); 
#line 310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex1Dfetch(texture< ushort1, 1, cudaReadModeElementType>  t, int x); 
#line 312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short2 tex1Dfetch(texture< short2, 1, cudaReadModeElementType>  t, int x); 
#line 314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex1Dfetch(texture< ushort2, 1, cudaReadModeElementType>  t, int x); 
#line 316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short4 tex1Dfetch(texture< short4, 1, cudaReadModeElementType>  t, int x); 
#line 318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex1Dfetch(texture< ushort4, 1, cudaReadModeElementType>  t, int x); 
#line 326 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int tex1Dfetch(texture< int, 1, cudaReadModeElementType>  t, int x); 
#line 328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex1Dfetch(texture< unsigned, 1, cudaReadModeElementType>  t, int x); 
#line 330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int1 tex1Dfetch(texture< int1, 1, cudaReadModeElementType>  t, int x); 
#line 332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex1Dfetch(texture< uint1, 1, cudaReadModeElementType>  t, int x); 
#line 334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int2 tex1Dfetch(texture< int2, 1, cudaReadModeElementType>  t, int x); 
#line 336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex1Dfetch(texture< uint2, 1, cudaReadModeElementType>  t, int x); 
#line 338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int4 tex1Dfetch(texture< int4, 1, cudaReadModeElementType>  t, int x); 
#line 340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex1Dfetch(texture< uint4, 1, cudaReadModeElementType>  t, int x); 
#line 350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long tex1Dfetch(texture< long, 1, cudaReadModeElementType>  t, int x); 
#line 352 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex1Dfetch(texture< unsigned long, 1, cudaReadModeElementType>  t, int x); 
#line 354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long1 tex1Dfetch(texture< long1, 1, cudaReadModeElementType>  t, int x); 
#line 356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex1Dfetch(texture< ulong1, 1, cudaReadModeElementType>  t, int x); 
#line 358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long2 tex1Dfetch(texture< long2, 1, cudaReadModeElementType>  t, int x); 
#line 360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex1Dfetch(texture< ulong2, 1, cudaReadModeElementType>  t, int x); 
#line 362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long4 tex1Dfetch(texture< long4, 1, cudaReadModeElementType>  t, int x); 
#line 364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex1Dfetch(texture< ulong4, 1, cudaReadModeElementType>  t, int x); 
#line 374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex1Dfetch(texture< float, 1, cudaReadModeElementType>  t, int x); 
#line 376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1Dfetch(texture< float1, 1, cudaReadModeElementType>  t, int x); 
#line 378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1Dfetch(texture< float2, 1, cudaReadModeElementType>  t, int x); 
#line 380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1Dfetch(texture< float4, 1, cudaReadModeElementType>  t, int x); 
#line 388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex1Dfetch(texture< char, 1, cudaReadModeNormalizedFloat>  t, int x); 
#line 390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex1Dfetch(texture< signed char, 1, cudaReadModeNormalizedFloat>  t, int x); 
#line 392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex1Dfetch(texture< unsigned char, 1, cudaReadModeNormalizedFloat>  t, int x); 
#line 394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1Dfetch(texture< char1, 1, cudaReadModeNormalizedFloat>  t, int x); 
#line 396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1Dfetch(texture< uchar1, 1, cudaReadModeNormalizedFloat>  t, int x); 
#line 398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1Dfetch(texture< char2, 1, cudaReadModeNormalizedFloat>  t, int x); 
#line 400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1Dfetch(texture< uchar2, 1, cudaReadModeNormalizedFloat>  t, int x); 
#line 402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1Dfetch(texture< char4, 1, cudaReadModeNormalizedFloat>  t, int x); 
#line 404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1Dfetch(texture< uchar4, 1, cudaReadModeNormalizedFloat>  t, int x); 
#line 412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex1Dfetch(texture< short, 1, cudaReadModeNormalizedFloat>  t, int x); 
#line 414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex1Dfetch(texture< unsigned short, 1, cudaReadModeNormalizedFloat>  t, int x); 
#line 416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1Dfetch(texture< short1, 1, cudaReadModeNormalizedFloat>  t, int x); 
#line 418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1Dfetch(texture< ushort1, 1, cudaReadModeNormalizedFloat>  t, int x); 
#line 420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1Dfetch(texture< short2, 1, cudaReadModeNormalizedFloat>  t, int x); 
#line 422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1Dfetch(texture< ushort2, 1, cudaReadModeNormalizedFloat>  t, int x); 
#line 424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1Dfetch(texture< short4, 1, cudaReadModeNormalizedFloat>  t, int x); 
#line 426 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1Dfetch(texture< ushort4, 1, cudaReadModeNormalizedFloat>  t, int x); 
#line 434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char tex1D(texture< char, 1, cudaReadModeElementType>  t, float x); 
#line 436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline signed char tex1D(texture< signed char, 1, cudaReadModeElementType>  t, float x); 
#line 438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex1D(texture< unsigned char, 1, cudaReadModeElementType>  t, float x); 
#line 440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char1 tex1D(texture< char1, 1, cudaReadModeElementType>  t, float x); 
#line 442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex1D(texture< uchar1, 1, cudaReadModeElementType>  t, float x); 
#line 444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char2 tex1D(texture< char2, 1, cudaReadModeElementType>  t, float x); 
#line 446 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex1D(texture< uchar2, 1, cudaReadModeElementType>  t, float x); 
#line 448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char4 tex1D(texture< char4, 1, cudaReadModeElementType>  t, float x); 
#line 450 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex1D(texture< uchar4, 1, cudaReadModeElementType>  t, float x); 
#line 458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short tex1D(texture< short, 1, cudaReadModeElementType>  t, float x); 
#line 460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex1D(texture< unsigned short, 1, cudaReadModeElementType>  t, float x); 
#line 462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short1 tex1D(texture< short1, 1, cudaReadModeElementType>  t, float x); 
#line 464 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex1D(texture< ushort1, 1, cudaReadModeElementType>  t, float x); 
#line 466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short2 tex1D(texture< short2, 1, cudaReadModeElementType>  t, float x); 
#line 468 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex1D(texture< ushort2, 1, cudaReadModeElementType>  t, float x); 
#line 470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short4 tex1D(texture< short4, 1, cudaReadModeElementType>  t, float x); 
#line 472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex1D(texture< ushort4, 1, cudaReadModeElementType>  t, float x); 
#line 480 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int tex1D(texture< int, 1, cudaReadModeElementType>  t, float x); 
#line 482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex1D(texture< unsigned, 1, cudaReadModeElementType>  t, float x); 
#line 484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int1 tex1D(texture< int1, 1, cudaReadModeElementType>  t, float x); 
#line 486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex1D(texture< uint1, 1, cudaReadModeElementType>  t, float x); 
#line 488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int2 tex1D(texture< int2, 1, cudaReadModeElementType>  t, float x); 
#line 490 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex1D(texture< uint2, 1, cudaReadModeElementType>  t, float x); 
#line 492 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int4 tex1D(texture< int4, 1, cudaReadModeElementType>  t, float x); 
#line 494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex1D(texture< uint4, 1, cudaReadModeElementType>  t, float x); 
#line 510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long tex1D(texture< long, 1, cudaReadModeElementType>  t, float x); 
#line 512 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex1D(texture< unsigned long, 1, cudaReadModeElementType>  t, float x); 
#line 514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long1 tex1D(texture< long1, 1, cudaReadModeElementType>  t, float x); 
#line 516 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex1D(texture< ulong1, 1, cudaReadModeElementType>  t, float x); 
#line 518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long2 tex1D(texture< long2, 1, cudaReadModeElementType>  t, float x); 
#line 520 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex1D(texture< ulong2, 1, cudaReadModeElementType>  t, float x); 
#line 522 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long4 tex1D(texture< long4, 1, cudaReadModeElementType>  t, float x); 
#line 524 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex1D(texture< ulong4, 1, cudaReadModeElementType>  t, float x); 
#line 534 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex1D(texture< float, 1, cudaReadModeElementType>  t, float x); 
#line 536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1D(texture< float1, 1, cudaReadModeElementType>  t, float x); 
#line 538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1D(texture< float2, 1, cudaReadModeElementType>  t, float x); 
#line 540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1D(texture< float4, 1, cudaReadModeElementType>  t, float x); 
#line 548 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex1D(texture< char, 1, cudaReadModeNormalizedFloat>  t, float x); 
#line 550 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex1D(texture< signed char, 1, cudaReadModeNormalizedFloat>  t, float x); 
#line 552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex1D(texture< unsigned char, 1, cudaReadModeNormalizedFloat>  t, float x); 
#line 554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1D(texture< char1, 1, cudaReadModeNormalizedFloat>  t, float x); 
#line 556 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1D(texture< uchar1, 1, cudaReadModeNormalizedFloat>  t, float x); 
#line 558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1D(texture< char2, 1, cudaReadModeNormalizedFloat>  t, float x); 
#line 560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1D(texture< uchar2, 1, cudaReadModeNormalizedFloat>  t, float x); 
#line 562 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1D(texture< char4, 1, cudaReadModeNormalizedFloat>  t, float x); 
#line 564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1D(texture< uchar4, 1, cudaReadModeNormalizedFloat>  t, float x); 
#line 572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex1D(texture< short, 1, cudaReadModeNormalizedFloat>  t, float x); 
#line 574 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex1D(texture< unsigned short, 1, cudaReadModeNormalizedFloat>  t, float x); 
#line 576 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1D(texture< short1, 1, cudaReadModeNormalizedFloat>  t, float x); 
#line 578 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1D(texture< ushort1, 1, cudaReadModeNormalizedFloat>  t, float x); 
#line 580 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1D(texture< short2, 1, cudaReadModeNormalizedFloat>  t, float x); 
#line 582 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1D(texture< ushort2, 1, cudaReadModeNormalizedFloat>  t, float x); 
#line 584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1D(texture< short4, 1, cudaReadModeNormalizedFloat>  t, float x); 
#line 586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1D(texture< ushort4, 1, cudaReadModeNormalizedFloat>  t, float x); 
#line 594 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char tex2D(texture< char, 2, cudaReadModeElementType>  t, float x, float y); 
#line 596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline signed char tex2D(texture< signed char, 2, cudaReadModeElementType>  t, float x, float y); 
#line 598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex2D(texture< unsigned char, 2, cudaReadModeElementType>  t, float x, float y); 
#line 600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char1 tex2D(texture< char1, 2, cudaReadModeElementType>  t, float x, float y); 
#line 602 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex2D(texture< uchar1, 2, cudaReadModeElementType>  t, float x, float y); 
#line 604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char2 tex2D(texture< char2, 2, cudaReadModeElementType>  t, float x, float y); 
#line 606 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex2D(texture< uchar2, 2, cudaReadModeElementType>  t, float x, float y); 
#line 608 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char4 tex2D(texture< char4, 2, cudaReadModeElementType>  t, float x, float y); 
#line 610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex2D(texture< uchar4, 2, cudaReadModeElementType>  t, float x, float y); 
#line 618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short tex2D(texture< short, 2, cudaReadModeElementType>  t, float x, float y); 
#line 620 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex2D(texture< unsigned short, 2, cudaReadModeElementType>  t, float x, float y); 
#line 622 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short1 tex2D(texture< short1, 2, cudaReadModeElementType>  t, float x, float y); 
#line 624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex2D(texture< ushort1, 2, cudaReadModeElementType>  t, float x, float y); 
#line 626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short2 tex2D(texture< short2, 2, cudaReadModeElementType>  t, float x, float y); 
#line 628 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex2D(texture< ushort2, 2, cudaReadModeElementType>  t, float x, float y); 
#line 630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short4 tex2D(texture< short4, 2, cudaReadModeElementType>  t, float x, float y); 
#line 632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex2D(texture< ushort4, 2, cudaReadModeElementType>  t, float x, float y); 
#line 640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int tex2D(texture< int, 2, cudaReadModeElementType>  t, float x, float y); 
#line 642 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex2D(texture< unsigned, 2, cudaReadModeElementType>  t, float x, float y); 
#line 644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int1 tex2D(texture< int1, 2, cudaReadModeElementType>  t, float x, float y); 
#line 646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex2D(texture< uint1, 2, cudaReadModeElementType>  t, float x, float y); 
#line 648 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int2 tex2D(texture< int2, 2, cudaReadModeElementType>  t, float x, float y); 
#line 650 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex2D(texture< uint2, 2, cudaReadModeElementType>  t, float x, float y); 
#line 652 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int4 tex2D(texture< int4, 2, cudaReadModeElementType>  t, float x, float y); 
#line 654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex2D(texture< uint4, 2, cudaReadModeElementType>  t, float x, float y); 
#line 664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long tex2D(texture< long, 2, cudaReadModeElementType>  t, float x, float y); 
#line 666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex2D(texture< unsigned long, 2, cudaReadModeElementType>  t, float x, float y); 
#line 668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long1 tex2D(texture< long1, 2, cudaReadModeElementType>  t, float x, float y); 
#line 670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex2D(texture< ulong1, 2, cudaReadModeElementType>  t, float x, float y); 
#line 672 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long2 tex2D(texture< long2, 2, cudaReadModeElementType>  t, float x, float y); 
#line 674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex2D(texture< ulong2, 2, cudaReadModeElementType>  t, float x, float y); 
#line 676 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long4 tex2D(texture< long4, 2, cudaReadModeElementType>  t, float x, float y); 
#line 678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex2D(texture< ulong4, 2, cudaReadModeElementType>  t, float x, float y); 
#line 688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex2D(texture< float, 2, cudaReadModeElementType>  t, float x, float y); 
#line 690 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2D(texture< float1, 2, cudaReadModeElementType>  t, float x, float y); 
#line 692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2D(texture< float2, 2, cudaReadModeElementType>  t, float x, float y); 
#line 694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2D(texture< float4, 2, cudaReadModeElementType>  t, float x, float y); 
#line 702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex2D(texture< char, 2, cudaReadModeNormalizedFloat>  t, float x, float y); 
#line 704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex2D(texture< signed char, 2, cudaReadModeNormalizedFloat>  t, float x, float y); 
#line 706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex2D(texture< unsigned char, 2, cudaReadModeNormalizedFloat>  t, float x, float y); 
#line 708 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2D(texture< char1, 2, cudaReadModeNormalizedFloat>  t, float x, float y); 
#line 710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2D(texture< uchar1, 2, cudaReadModeNormalizedFloat>  t, float x, float y); 
#line 712 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2D(texture< char2, 2, cudaReadModeNormalizedFloat>  t, float x, float y); 
#line 714 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2D(texture< uchar2, 2, cudaReadModeNormalizedFloat>  t, float x, float y); 
#line 716 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2D(texture< char4, 2, cudaReadModeNormalizedFloat>  t, float x, float y); 
#line 718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2D(texture< uchar4, 2, cudaReadModeNormalizedFloat>  t, float x, float y); 
#line 726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex2D(texture< short, 2, cudaReadModeNormalizedFloat>  t, float x, float y); 
#line 728 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex2D(texture< unsigned short, 2, cudaReadModeNormalizedFloat>  t, float x, float y); 
#line 730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2D(texture< short1, 2, cudaReadModeNormalizedFloat>  t, float x, float y); 
#line 732 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2D(texture< ushort1, 2, cudaReadModeNormalizedFloat>  t, float x, float y); 
#line 734 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2D(texture< short2, 2, cudaReadModeNormalizedFloat>  t, float x, float y); 
#line 736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2D(texture< ushort2, 2, cudaReadModeNormalizedFloat>  t, float x, float y); 
#line 738 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2D(texture< short4, 2, cudaReadModeNormalizedFloat>  t, float x, float y); 
#line 740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2D(texture< ushort4, 2, cudaReadModeNormalizedFloat>  t, float x, float y); 
#line 748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char tex1DLayered(texture< char, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline signed char tex1DLayered(texture< signed char, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 752 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex1DLayered(texture< unsigned char, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 754 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char1 tex1DLayered(texture< char1, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex1DLayered(texture< uchar1, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char2 tex1DLayered(texture< char2, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 760 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex1DLayered(texture< uchar2, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 762 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char4 tex1DLayered(texture< char4, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 764 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex1DLayered(texture< uchar4, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 772 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short tex1DLayered(texture< short, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 774 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex1DLayered(texture< unsigned short, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 776 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short1 tex1DLayered(texture< short1, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 778 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex1DLayered(texture< ushort1, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short2 tex1DLayered(texture< short2, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 782 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex1DLayered(texture< ushort2, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 784 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short4 tex1DLayered(texture< short4, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 786 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex1DLayered(texture< ushort4, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 794 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int tex1DLayered(texture< int, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex1DLayered(texture< unsigned, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 798 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int1 tex1DLayered(texture< int1, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 800 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex1DLayered(texture< uint1, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 802 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int2 tex1DLayered(texture< int2, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 804 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex1DLayered(texture< uint2, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 806 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int4 tex1DLayered(texture< int4, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 808 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex1DLayered(texture< uint4, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 818 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long tex1DLayered(texture< long, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 820 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex1DLayered(texture< unsigned long, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 822 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long1 tex1DLayered(texture< long1, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 824 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex1DLayered(texture< ulong1, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 826 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long2 tex1DLayered(texture< long2, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 828 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex1DLayered(texture< ulong2, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 830 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long4 tex1DLayered(texture< long4, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 832 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex1DLayered(texture< ulong4, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayered(texture< float, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 844 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayered(texture< float1, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 846 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayered(texture< float2, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayered(texture< float4, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayered(texture< char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer); 
#line 858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayered(texture< signed char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer); 
#line 860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayered(texture< unsigned char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer); 
#line 862 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayered(texture< char1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer); 
#line 864 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayered(texture< uchar1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer); 
#line 866 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayered(texture< char2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer); 
#line 868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayered(texture< uchar2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer); 
#line 870 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayered(texture< char4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer); 
#line 872 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayered(texture< uchar4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer); 
#line 880 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayered(texture< short, 241, cudaReadModeNormalizedFloat>  t, float x, int layer); 
#line 882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayered(texture< unsigned short, 241, cudaReadModeNormalizedFloat>  t, float x, int layer); 
#line 884 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayered(texture< short1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer); 
#line 886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayered(texture< ushort1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer); 
#line 888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayered(texture< short2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer); 
#line 890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayered(texture< ushort2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer); 
#line 892 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayered(texture< short4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer); 
#line 894 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayered(texture< ushort4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer); 
#line 902 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char tex2DLayered(texture< char, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 904 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline signed char tex2DLayered(texture< signed char, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex2DLayered(texture< unsigned char, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 908 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char1 tex2DLayered(texture< char1, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 910 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex2DLayered(texture< uchar1, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 912 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char2 tex2DLayered(texture< char2, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 914 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex2DLayered(texture< uchar2, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char4 tex2DLayered(texture< char4, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 918 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex2DLayered(texture< uchar4, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 926 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short tex2DLayered(texture< short, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex2DLayered(texture< unsigned short, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short1 tex2DLayered(texture< short1, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex2DLayered(texture< ushort1, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 934 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short2 tex2DLayered(texture< short2, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex2DLayered(texture< ushort2, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short4 tex2DLayered(texture< short4, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 940 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex2DLayered(texture< ushort4, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 948 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int tex2DLayered(texture< int, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 950 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex2DLayered(texture< unsigned, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int1 tex2DLayered(texture< int1, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 954 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex2DLayered(texture< uint1, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 956 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int2 tex2DLayered(texture< int2, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex2DLayered(texture< uint2, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 960 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int4 tex2DLayered(texture< int4, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 962 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex2DLayered(texture< uint4, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long tex2DLayered(texture< long, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 974 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex2DLayered(texture< unsigned long, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 976 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long1 tex2DLayered(texture< long1, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex2DLayered(texture< ulong1, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long2 tex2DLayered(texture< long2, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 982 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex2DLayered(texture< ulong2, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 984 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long4 tex2DLayered(texture< long4, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 986 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex2DLayered(texture< ulong4, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayered(texture< float, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayered(texture< float1, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 1000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayered(texture< float2, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 1002 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayered(texture< float4, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 1010 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayered(texture< char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer); 
#line 1012 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayered(texture< signed char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer); 
#line 1014 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayered(texture< unsigned char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer); 
#line 1016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayered(texture< char1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer); 
#line 1018 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayered(texture< uchar1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer); 
#line 1020 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayered(texture< char2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer); 
#line 1022 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayered(texture< uchar2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer); 
#line 1024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayered(texture< char4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer); 
#line 1026 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayered(texture< uchar4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer); 
#line 1034 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayered(texture< short, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer); 
#line 1036 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayered(texture< unsigned short, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer); 
#line 1038 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayered(texture< short1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer); 
#line 1040 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayered(texture< ushort1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer); 
#line 1042 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayered(texture< short2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer); 
#line 1044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayered(texture< ushort2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer); 
#line 1046 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayered(texture< short4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer); 
#line 1048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayered(texture< ushort4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer); 
#line 1056 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char tex3D(texture< char, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline signed char tex3D(texture< signed char, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1060 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex3D(texture< unsigned char, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char1 tex3D(texture< char1, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1064 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex3D(texture< uchar1, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1066 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char2 tex3D(texture< char2, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1068 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex3D(texture< uchar2, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1070 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char4 tex3D(texture< char4, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1072 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex3D(texture< uchar4, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1080 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short tex3D(texture< short, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1082 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex3D(texture< unsigned short, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1084 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short1 tex3D(texture< short1, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex3D(texture< ushort1, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1088 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short2 tex3D(texture< short2, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1090 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex3D(texture< ushort2, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1092 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short4 tex3D(texture< short4, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1094 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex3D(texture< ushort4, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int tex3D(texture< int, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex3D(texture< unsigned, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int1 tex3D(texture< int1, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex3D(texture< uint1, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int2 tex3D(texture< int2, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex3D(texture< uint2, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int4 tex3D(texture< int4, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex3D(texture< uint4, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long tex3D(texture< long, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex3D(texture< unsigned long, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long1 tex3D(texture< long1, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex3D(texture< ulong1, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long2 tex3D(texture< long2, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex3D(texture< ulong2, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long4 tex3D(texture< long4, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex3D(texture< ulong4, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex3D(texture< float, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3D(texture< float1, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3D(texture< float2, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3D(texture< float4, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex3D(texture< char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex3D(texture< signed char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex3D(texture< unsigned char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3D(texture< char1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3D(texture< uchar1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3D(texture< char2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3D(texture< uchar2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3D(texture< char4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3D(texture< uchar4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex3D(texture< short, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex3D(texture< unsigned short, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3D(texture< short1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3D(texture< ushort1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3D(texture< short2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3D(texture< ushort2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3D(texture< short4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3D(texture< ushort4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char texCubemap(texture< char, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline signed char texCubemap(texture< signed char, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned char texCubemap(texture< unsigned char, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char1 texCubemap(texture< char1, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar1 texCubemap(texture< uchar1, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char2 texCubemap(texture< char2, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar2 texCubemap(texture< uchar2, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char4 texCubemap(texture< char4, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar4 texCubemap(texture< uchar4, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short texCubemap(texture< short, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned short texCubemap(texture< unsigned short, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short1 texCubemap(texture< short1, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort1 texCubemap(texture< ushort1, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short2 texCubemap(texture< short2, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort2 texCubemap(texture< ushort2, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short4 texCubemap(texture< short4, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort4 texCubemap(texture< ushort4, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int texCubemap(texture< int, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1258 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned texCubemap(texture< unsigned, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int1 texCubemap(texture< int1, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint1 texCubemap(texture< uint1, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int2 texCubemap(texture< int2, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint2 texCubemap(texture< uint2, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int4 texCubemap(texture< int4, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint4 texCubemap(texture< uint4, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long texCubemap(texture< long, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned long texCubemap(texture< unsigned long, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long1 texCubemap(texture< long1, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong1 texCubemap(texture< ulong1, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long2 texCubemap(texture< long2, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong2 texCubemap(texture< ulong2, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long4 texCubemap(texture< long4, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong4 texCubemap(texture< ulong4, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float texCubemap(texture< float, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemap(texture< float1, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemap(texture< float2, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemap(texture< float4, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float texCubemap(texture< char, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float texCubemap(texture< signed char, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1322 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float texCubemap(texture< unsigned char, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemap(texture< char1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1326 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemap(texture< uchar1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemap(texture< char2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemap(texture< uchar2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemap(texture< char4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemap(texture< uchar4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float texCubemap(texture< short, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float texCubemap(texture< unsigned short, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemap(texture< short1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemap(texture< ushort1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemap(texture< short2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1352 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemap(texture< ushort2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemap(texture< short4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemap(texture< ushort4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char texCubemapLayered(texture< char, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline signed char texCubemapLayered(texture< signed char, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned char texCubemapLayered(texture< unsigned char, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char1 texCubemapLayered(texture< char1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar1 texCubemapLayered(texture< uchar1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char2 texCubemapLayered(texture< char2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar2 texCubemapLayered(texture< uchar2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char4 texCubemapLayered(texture< char4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar4 texCubemapLayered(texture< uchar4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short texCubemapLayered(texture< short, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned short texCubemapLayered(texture< unsigned short, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short1 texCubemapLayered(texture< short1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort1 texCubemapLayered(texture< ushort1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short2 texCubemapLayered(texture< short2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort2 texCubemapLayered(texture< ushort2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short4 texCubemapLayered(texture< short4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort4 texCubemapLayered(texture< ushort4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int texCubemapLayered(texture< int, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned texCubemapLayered(texture< unsigned, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int1 texCubemapLayered(texture< int1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint1 texCubemapLayered(texture< uint1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int2 texCubemapLayered(texture< int2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint2 texCubemapLayered(texture< uint2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int4 texCubemapLayered(texture< int4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint4 texCubemapLayered(texture< uint4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long texCubemapLayered(texture< long, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned long texCubemapLayered(texture< unsigned long, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long1 texCubemapLayered(texture< long1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong1 texCubemapLayered(texture< ulong1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long2 texCubemapLayered(texture< long2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong2 texCubemapLayered(texture< ulong2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1446 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long4 texCubemapLayered(texture< long4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong4 texCubemapLayered(texture< ulong4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLayered(texture< float, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLayered(texture< float1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLayered(texture< float2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1464 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLayered(texture< float4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLayered(texture< char, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer); 
#line 1474 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLayered(texture< signed char, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer); 
#line 1476 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLayered(texture< unsigned char, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer); 
#line 1478 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLayered(texture< char1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer); 
#line 1480 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLayered(texture< uchar1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer); 
#line 1482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLayered(texture< char2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer); 
#line 1484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLayered(texture< uchar2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer); 
#line 1486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLayered(texture< char4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer); 
#line 1488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLayered(texture< uchar4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer); 
#line 1496 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLayered(texture< short, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer); 
#line 1498 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLayered(texture< unsigned short, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer); 
#line 1500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLayered(texture< short1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer); 
#line 1502 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLayered(texture< ushort1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer); 
#line 1504 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLayered(texture< short2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer); 
#line 1506 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLayered(texture< ushort2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer); 
#line 1508 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLayered(texture< short4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer); 
#line 1510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLayered(texture< ushort4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer); 
#line 1581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
template< int comp, class T, cudaTextureReadMode readMode> static __forceinline ::int4 
#line 1583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
__itex2Dgather(texture< T, 2, readMode>  t, ::float2 i, int 
#line 1584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
c = comp) 
#line 1585 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)c;
#line 1593 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
::exit(___);}

















#line 1612 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
#line 1595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
template< int comp, class T, cudaTextureReadMode readMode> static __forceinline ::uint4 
#line 1597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
__utex2Dgather(texture< T, 2, readMode>  t, ::float2 i, int 
#line 1598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
c = comp) 
#line 1599 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)c;
#line 1607 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
::exit(___);}

















#line 1626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
#line 1609 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
template< int comp, class T, cudaTextureReadMode readMode> static __forceinline ::float4 
#line 1611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
__ftex2Dgather(texture< T, 2, readMode>  t, ::float2 i, int 
#line 1612 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
c = comp) 
#line 1613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)c;
#line 1621 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
::exit(___);}

















#line 1640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
#line 1623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char4 tex2Dgather(texture< char, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char4 tex2Dgather(texture< signed char, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1627 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex2Dgather(texture< unsigned char, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1629 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char4 tex2Dgather(texture< char1, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex2Dgather(texture< uchar1, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char4 tex2Dgather(texture< char2, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1635 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex2Dgather(texture< uchar2, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char4 tex2Dgather(texture< char3, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1639 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex2Dgather(texture< uchar3, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1641 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char4 tex2Dgather(texture< char4, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1643 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex2Dgather(texture< uchar4, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short4 tex2Dgather(texture< short, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1647 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex2Dgather(texture< unsigned short, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1649 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short4 tex2Dgather(texture< short1, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1651 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex2Dgather(texture< ushort1, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short4 tex2Dgather(texture< short2, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1655 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex2Dgather(texture< ushort2, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1657 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short4 tex2Dgather(texture< short3, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1659 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex2Dgather(texture< ushort3, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short4 tex2Dgather(texture< short4, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1663 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex2Dgather(texture< ushort4, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1665 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int4 tex2Dgather(texture< int, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex2Dgather(texture< unsigned, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1669 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int4 tex2Dgather(texture< int1, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1671 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex2Dgather(texture< uint1, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1673 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int4 tex2Dgather(texture< int2, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1675 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex2Dgather(texture< uint2, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1677 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int4 tex2Dgather(texture< int3, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1679 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex2Dgather(texture< uint3, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int4 tex2Dgather(texture< int4, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex2Dgather(texture< uint4, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< float, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1687 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< float1, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1689 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< float2, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1691 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< float3, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1693 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< float4, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< signed char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< unsigned char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1708 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< char1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< uchar1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1712 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< char2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1714 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< uchar2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1716 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< char3, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< uchar3, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1720 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< char4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< uchar4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1724 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< short, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< unsigned short, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1728 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< short1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< ushort1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1732 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< short2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1734 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< ushort2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< short3, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1738 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< ushort3, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< short4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1742 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< ushort4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1834 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::uint4 
#line 1836 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
__utexfetchlod(texture< T, texType, readMode>  t, ::float4 i, float level, int 
#line 1837 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
d = texType) 
#line 1838 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)level;(void)d;
#line 1845 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
::exit(___);}















#line 1862 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
#line 1847 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::int4 
#line 1849 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
__itexfetchlod(texture< T, texType, readMode>  t, ::float4 i, float level, int 
#line 1850 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
d = texType) 
#line 1851 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)level;(void)d;
#line 1858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
::exit(___);}















#line 1875 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
#line 1860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::float4 
#line 1862 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
__ftexfetchlod(texture< T, texType, readMode>  t, ::float4 i, float level, int 
#line 1863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
d = texType) 
#line 1864 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)level;(void)d;
#line 1871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
::exit(___);}















#line 1888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
#line 1874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::uint4 
#line 1876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
__utexfetchlodc(texture< T, texType, readMode>  t, ::float4 i, float level) 
#line 1877 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)level;
#line 1879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
::exit(___);}







#line 1888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
#line 1881 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::int4 
#line 1883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
__itexfetchlodc(texture< T, texType, readMode>  t, ::float4 i, float level) 
#line 1884 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)level;
#line 1886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
::exit(___);}







#line 1895 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
#line 1888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::float4 
#line 1890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
__ftexfetchlodc(texture< T, texType, readMode>  t, ::float4 i, float level) 
#line 1891 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)level;
#line 1893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
::exit(___);}







#line 1902 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
#line 1895 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::uint4 
#line 1897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
__utexfetchlodl(texture< T, texType, readMode>  t, ::float4 i, int l, float 
#line 1898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
level, int d = texType & 15) 
#line 1899 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)l;(void)level;(void)d;
#line 1905 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
::exit(___);}













#line 1920 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
#line 1907 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::int4 
#line 1909 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
__itexfetchlodl(texture< T, texType, readMode>  t, ::float4 i, int l, float 
#line 1910 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
level, int d = texType & 15) 
#line 1911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)l;(void)level;(void)d;
#line 1917 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
::exit(___);}













#line 1932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
#line 1919 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::float4 
#line 1921 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
__ftexfetchlodl(texture< T, texType, readMode>  t, ::float4 i, int l, float 
#line 1922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
level, int d = texType & 15) 
#line 1923 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)l;(void)level;(void)d;
#line 1929 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
::exit(___);}













#line 1944 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
#line 1932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::uint4 
#line 1934 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
__utexfetchlodlc(texture< T, texType, readMode>  t, ::float4 i, int l, float 
#line 1935 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
level) 
#line 1936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)l;(void)level;
#line 1938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
::exit(___);}







#line 1947 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
#line 1940 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::int4 
#line 1942 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
__itexfetchlodlc(texture< T, texType, readMode>  t, ::float4 i, int l, float 
#line 1943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
level) 
#line 1944 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)l;(void)level;
#line 1946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
::exit(___);}







#line 1955 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
#line 1948 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::float4 
#line 1950 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
__ftexfetchlodlc(texture< T, texType, readMode>  t, ::float4 i, int l, float 
#line 1951 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
level) 
#line 1952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)l;(void)level;
#line 1954 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
::exit(___);}







#line 1963 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
#line 1963 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char tex1DLod(texture< char, 1, cudaReadModeElementType>  t, float x, float level); 
#line 1965 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline signed char tex1DLod(texture< signed char, 1, cudaReadModeElementType>  t, float x, float level); 
#line 1967 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex1DLod(texture< unsigned char, 1, cudaReadModeElementType>  t, float x, float level); 
#line 1969 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char1 tex1DLod(texture< char1, 1, cudaReadModeElementType>  t, float x, float level); 
#line 1971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex1DLod(texture< uchar1, 1, cudaReadModeElementType>  t, float x, float level); 
#line 1973 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char2 tex1DLod(texture< char2, 1, cudaReadModeElementType>  t, float x, float level); 
#line 1975 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex1DLod(texture< uchar2, 1, cudaReadModeElementType>  t, float x, float level); 
#line 1977 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char4 tex1DLod(texture< char4, 1, cudaReadModeElementType>  t, float x, float level); 
#line 1979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex1DLod(texture< uchar4, 1, cudaReadModeElementType>  t, float x, float level); 
#line 1987 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short tex1DLod(texture< short, 1, cudaReadModeElementType>  t, float x, float level); 
#line 1989 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex1DLod(texture< unsigned short, 1, cudaReadModeElementType>  t, float x, float level); 
#line 1991 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short1 tex1DLod(texture< short1, 1, cudaReadModeElementType>  t, float x, float level); 
#line 1993 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex1DLod(texture< ushort1, 1, cudaReadModeElementType>  t, float x, float level); 
#line 1995 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short2 tex1DLod(texture< short2, 1, cudaReadModeElementType>  t, float x, float level); 
#line 1997 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex1DLod(texture< ushort2, 1, cudaReadModeElementType>  t, float x, float level); 
#line 1999 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short4 tex1DLod(texture< short4, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2001 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex1DLod(texture< ushort4, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int tex1DLod(texture< int, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2011 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex1DLod(texture< unsigned, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2013 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int1 tex1DLod(texture< int1, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2015 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex1DLod(texture< uint1, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int2 tex1DLod(texture< int2, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2019 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex1DLod(texture< uint2, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2021 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int4 tex1DLod(texture< int4, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2023 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex1DLod(texture< uint4, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2039 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long tex1DLod(texture< long, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2041 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex1DLod(texture< unsigned long, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long1 tex1DLod(texture< long1, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2045 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex1DLod(texture< ulong1, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long2 tex1DLod(texture< long2, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2049 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex1DLod(texture< ulong2, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2051 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long4 tex1DLod(texture< long4, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex1DLod(texture< ulong4, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2063 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLod(texture< float, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2065 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLod(texture< float1, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2067 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLod(texture< float2, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLod(texture< float4, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2077 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLod(texture< char, 1, cudaReadModeNormalizedFloat>  t, float x, float level); 
#line 2079 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLod(texture< signed char, 1, cudaReadModeNormalizedFloat>  t, float x, float level); 
#line 2081 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLod(texture< unsigned char, 1, cudaReadModeNormalizedFloat>  t, float x, float level); 
#line 2083 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLod(texture< char1, 1, cudaReadModeNormalizedFloat>  t, float x, float level); 
#line 2085 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLod(texture< uchar1, 1, cudaReadModeNormalizedFloat>  t, float x, float level); 
#line 2087 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLod(texture< char2, 1, cudaReadModeNormalizedFloat>  t, float x, float level); 
#line 2089 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLod(texture< uchar2, 1, cudaReadModeNormalizedFloat>  t, float x, float level); 
#line 2091 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLod(texture< char4, 1, cudaReadModeNormalizedFloat>  t, float x, float level); 
#line 2093 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLod(texture< uchar4, 1, cudaReadModeNormalizedFloat>  t, float x, float level); 
#line 2101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLod(texture< short, 1, cudaReadModeNormalizedFloat>  t, float x, float level); 
#line 2103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLod(texture< unsigned short, 1, cudaReadModeNormalizedFloat>  t, float x, float level); 
#line 2105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLod(texture< short1, 1, cudaReadModeNormalizedFloat>  t, float x, float level); 
#line 2107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLod(texture< ushort1, 1, cudaReadModeNormalizedFloat>  t, float x, float level); 
#line 2109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLod(texture< short2, 1, cudaReadModeNormalizedFloat>  t, float x, float level); 
#line 2111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLod(texture< ushort2, 1, cudaReadModeNormalizedFloat>  t, float x, float level); 
#line 2113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLod(texture< short4, 1, cudaReadModeNormalizedFloat>  t, float x, float level); 
#line 2115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLod(texture< ushort4, 1, cudaReadModeNormalizedFloat>  t, float x, float level); 
#line 2123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char tex2DLod(texture< char, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline signed char tex2DLod(texture< signed char, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex2DLod(texture< unsigned char, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char1 tex2DLod(texture< char1, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex2DLod(texture< uchar1, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char2 tex2DLod(texture< char2, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex2DLod(texture< uchar2, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char4 tex2DLod(texture< char4, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex2DLod(texture< uchar4, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short tex2DLod(texture< short, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex2DLod(texture< unsigned short, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short1 tex2DLod(texture< short1, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex2DLod(texture< ushort1, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short2 tex2DLod(texture< short2, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex2DLod(texture< ushort2, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short4 tex2DLod(texture< short4, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex2DLod(texture< ushort4, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int tex2DLod(texture< int, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex2DLod(texture< unsigned, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int1 tex2DLod(texture< int1, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex2DLod(texture< uint1, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int2 tex2DLod(texture< int2, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex2DLod(texture< uint2, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int4 tex2DLod(texture< int4, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex2DLod(texture< uint4, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long tex2DLod(texture< long, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex2DLod(texture< unsigned long, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long1 tex2DLod(texture< long1, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex2DLod(texture< ulong1, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long2 tex2DLod(texture< long2, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex2DLod(texture< ulong2, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long4 tex2DLod(texture< long4, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex2DLod(texture< ulong4, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLod(texture< float, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLod(texture< float1, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLod(texture< float2, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLod(texture< float4, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLod(texture< char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level); 
#line 2233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLod(texture< signed char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level); 
#line 2235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLod(texture< unsigned char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level); 
#line 2237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLod(texture< char1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level); 
#line 2239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLod(texture< uchar1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level); 
#line 2241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLod(texture< char2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level); 
#line 2243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLod(texture< uchar2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level); 
#line 2245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLod(texture< char4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level); 
#line 2247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLod(texture< uchar4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level); 
#line 2255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLod(texture< short, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level); 
#line 2257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLod(texture< unsigned short, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level); 
#line 2259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLod(texture< short1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level); 
#line 2261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLod(texture< ushort1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level); 
#line 2263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLod(texture< short2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level); 
#line 2265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLod(texture< ushort2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level); 
#line 2267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLod(texture< short4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level); 
#line 2269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLod(texture< ushort4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level); 
#line 2277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char tex1DLayeredLod(texture< char, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline signed char tex1DLayeredLod(texture< signed char, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex1DLayeredLod(texture< unsigned char, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char1 tex1DLayeredLod(texture< char1, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex1DLayeredLod(texture< uchar1, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char2 tex1DLayeredLod(texture< char2, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex1DLayeredLod(texture< uchar2, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char4 tex1DLayeredLod(texture< char4, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex1DLayeredLod(texture< uchar4, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short tex1DLayeredLod(texture< short, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex1DLayeredLod(texture< unsigned short, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short1 tex1DLayeredLod(texture< short1, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex1DLayeredLod(texture< ushort1, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short2 tex1DLayeredLod(texture< short2, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex1DLayeredLod(texture< ushort2, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short4 tex1DLayeredLod(texture< short4, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex1DLayeredLod(texture< ushort4, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int tex1DLayeredLod(texture< int, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex1DLayeredLod(texture< unsigned, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2327 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int1 tex1DLayeredLod(texture< int1, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex1DLayeredLod(texture< uint1, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int2 tex1DLayeredLod(texture< int2, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex1DLayeredLod(texture< uint2, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int4 tex1DLayeredLod(texture< int4, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex1DLayeredLod(texture< uint4, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long tex1DLayeredLod(texture< long, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex1DLayeredLod(texture< unsigned long, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long1 tex1DLayeredLod(texture< long1, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex1DLayeredLod(texture< ulong1, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long2 tex1DLayeredLod(texture< long2, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex1DLayeredLod(texture< ulong2, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long4 tex1DLayeredLod(texture< long4, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex1DLayeredLod(texture< ulong4, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayeredLod(texture< float, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayeredLod(texture< float1, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayeredLod(texture< float2, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayeredLod(texture< float4, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayeredLod(texture< char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level); 
#line 2387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayeredLod(texture< signed char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level); 
#line 2389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayeredLod(texture< unsigned char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level); 
#line 2391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayeredLod(texture< char1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level); 
#line 2393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayeredLod(texture< uchar1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level); 
#line 2395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayeredLod(texture< char2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level); 
#line 2397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayeredLod(texture< uchar2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level); 
#line 2399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayeredLod(texture< char4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level); 
#line 2401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayeredLod(texture< uchar4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level); 
#line 2409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayeredLod(texture< short, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level); 
#line 2411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayeredLod(texture< unsigned short, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level); 
#line 2413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayeredLod(texture< short1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level); 
#line 2415 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayeredLod(texture< ushort1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level); 
#line 2417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayeredLod(texture< short2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level); 
#line 2419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayeredLod(texture< ushort2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level); 
#line 2421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayeredLod(texture< short4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level); 
#line 2423 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayeredLod(texture< ushort4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level); 
#line 2431 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char tex2DLayeredLod(texture< char, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline signed char tex2DLayeredLod(texture< signed char, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2435 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex2DLayeredLod(texture< unsigned char, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char1 tex2DLayeredLod(texture< char1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2439 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex2DLayeredLod(texture< uchar1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2441 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char2 tex2DLayeredLod(texture< char2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex2DLayeredLod(texture< uchar2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char4 tex2DLayeredLod(texture< char4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2447 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex2DLayeredLod(texture< uchar4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2455 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short tex2DLayeredLod(texture< short, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2457 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex2DLayeredLod(texture< unsigned short, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short1 tex2DLayeredLod(texture< short1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2461 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex2DLayeredLod(texture< ushort1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short2 tex2DLayeredLod(texture< short2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2465 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex2DLayeredLod(texture< ushort2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short4 tex2DLayeredLod(texture< short4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex2DLayeredLod(texture< ushort4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2477 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int tex2DLayeredLod(texture< int, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex2DLayeredLod(texture< unsigned, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int1 tex2DLayeredLod(texture< int1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex2DLayeredLod(texture< uint1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2485 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int2 tex2DLayeredLod(texture< int2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex2DLayeredLod(texture< uint2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int4 tex2DLayeredLod(texture< int4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2491 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex2DLayeredLod(texture< uint4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2501 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long tex2DLayeredLod(texture< long, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2503 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex2DLayeredLod(texture< unsigned long, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2505 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long1 tex2DLayeredLod(texture< long1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex2DLayeredLod(texture< ulong1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2509 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long2 tex2DLayeredLod(texture< long2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex2DLayeredLod(texture< ulong2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long4 tex2DLayeredLod(texture< long4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex2DLayeredLod(texture< ulong4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2525 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayeredLod(texture< float, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2527 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayeredLod(texture< float1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayeredLod(texture< float2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayeredLod(texture< float4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2539 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayeredLod(texture< char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level); 
#line 2541 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayeredLod(texture< signed char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level); 
#line 2543 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayeredLod(texture< unsigned char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level); 
#line 2545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayeredLod(texture< char1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level); 
#line 2547 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayeredLod(texture< uchar1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level); 
#line 2549 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayeredLod(texture< char2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level); 
#line 2551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayeredLod(texture< uchar2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level); 
#line 2553 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayeredLod(texture< char4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level); 
#line 2555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayeredLod(texture< uchar4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level); 
#line 2563 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayeredLod(texture< short, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level); 
#line 2565 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayeredLod(texture< unsigned short, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level); 
#line 2567 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayeredLod(texture< short1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level); 
#line 2569 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayeredLod(texture< ushort1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level); 
#line 2571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayeredLod(texture< short2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level); 
#line 2573 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayeredLod(texture< ushort2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level); 
#line 2575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayeredLod(texture< short4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level); 
#line 2577 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayeredLod(texture< ushort4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level); 
#line 2585 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char tex3DLod(texture< char, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2587 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline signed char tex3DLod(texture< signed char, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex3DLod(texture< unsigned char, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2591 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char1 tex3DLod(texture< char1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2593 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex3DLod(texture< uchar1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char2 tex3DLod(texture< char2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex3DLod(texture< uchar2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2599 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char4 tex3DLod(texture< char4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex3DLod(texture< uchar4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2609 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short tex3DLod(texture< short, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex3DLod(texture< unsigned short, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short1 tex3DLod(texture< short1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2615 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex3DLod(texture< ushort1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short2 tex3DLod(texture< short2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex3DLod(texture< ushort2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2621 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short4 tex3DLod(texture< short4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex3DLod(texture< ushort4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int tex3DLod(texture< int, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex3DLod(texture< unsigned, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2635 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int1 tex3DLod(texture< int1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex3DLod(texture< uint1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2639 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int2 tex3DLod(texture< int2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2641 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex3DLod(texture< uint2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2643 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int4 tex3DLod(texture< int4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex3DLod(texture< uint4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2655 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long tex3DLod(texture< long, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2657 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex3DLod(texture< unsigned long, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2659 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long1 tex3DLod(texture< long1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex3DLod(texture< ulong1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2663 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long2 tex3DLod(texture< long2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2665 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex3DLod(texture< ulong2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long4 tex3DLod(texture< long4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2669 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex3DLod(texture< ulong4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2679 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex3DLod(texture< float, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3DLod(texture< float1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3DLod(texture< float2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3DLod(texture< float4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2693 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex3DLod(texture< char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2695 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex3DLod(texture< signed char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2697 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex3DLod(texture< unsigned char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3DLod(texture< char1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3DLod(texture< uchar1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2703 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3DLod(texture< char2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2705 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3DLod(texture< uchar2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2707 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3DLod(texture< char4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2709 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3DLod(texture< uchar4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2717 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex3DLod(texture< short, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex3DLod(texture< unsigned short, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2721 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3DLod(texture< short1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3DLod(texture< ushort1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3DLod(texture< short2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2727 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3DLod(texture< ushort2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2729 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3DLod(texture< short4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3DLod(texture< ushort4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2739 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char texCubemapLod(texture< char, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2741 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline signed char texCubemapLod(texture< signed char, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2743 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned char texCubemapLod(texture< unsigned char, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char1 texCubemapLod(texture< char1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar1 texCubemapLod(texture< uchar1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2749 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char2 texCubemapLod(texture< char2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar2 texCubemapLod(texture< uchar2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char4 texCubemapLod(texture< char4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2755 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar4 texCubemapLod(texture< uchar4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2763 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short texCubemapLod(texture< short, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2765 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned short texCubemapLod(texture< unsigned short, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2767 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short1 texCubemapLod(texture< short1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort1 texCubemapLod(texture< ushort1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2771 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short2 texCubemapLod(texture< short2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2773 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort2 texCubemapLod(texture< ushort2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2775 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short4 texCubemapLod(texture< short4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort4 texCubemapLod(texture< ushort4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2785 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int texCubemapLod(texture< int, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2787 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned texCubemapLod(texture< unsigned, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2789 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int1 texCubemapLod(texture< int1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2791 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint1 texCubemapLod(texture< uint1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2793 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int2 texCubemapLod(texture< int2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2795 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint2 texCubemapLod(texture< uint2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2797 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int4 texCubemapLod(texture< int4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2799 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint4 texCubemapLod(texture< uint4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2809 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long texCubemapLod(texture< long, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2811 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned long texCubemapLod(texture< unsigned long, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2813 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long1 texCubemapLod(texture< long1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2815 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong1 texCubemapLod(texture< ulong1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2817 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long2 texCubemapLod(texture< long2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2819 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong2 texCubemapLod(texture< ulong2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2821 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long4 texCubemapLod(texture< long4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2823 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong4 texCubemapLod(texture< ulong4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2833 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLod(texture< float, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2835 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLod(texture< float1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2837 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLod(texture< float2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2839 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLod(texture< float4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2847 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLod(texture< char, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2849 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLod(texture< signed char, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2851 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLod(texture< unsigned char, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLod(texture< char1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2855 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLod(texture< uchar1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2857 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLod(texture< char2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2859 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLod(texture< uchar2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLod(texture< char4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLod(texture< uchar4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLod(texture< short, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2873 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLod(texture< unsigned short, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2875 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLod(texture< short1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2877 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLod(texture< ushort1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLod(texture< short2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2881 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLod(texture< ushort2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLod(texture< short4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLod(texture< ushort4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char texCubemapLayeredLod(texture< char, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2895 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline signed char texCubemapLayeredLod(texture< signed char, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned char texCubemapLayeredLod(texture< unsigned char, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2899 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char1 texCubemapLayeredLod(texture< char1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2901 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar1 texCubemapLayeredLod(texture< uchar1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2903 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char2 texCubemapLayeredLod(texture< char2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2905 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar2 texCubemapLayeredLod(texture< uchar2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2907 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char4 texCubemapLayeredLod(texture< char4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2909 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar4 texCubemapLayeredLod(texture< uchar4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2917 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short texCubemapLayeredLod(texture< short, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2919 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned short texCubemapLayeredLod(texture< unsigned short, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2921 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short1 texCubemapLayeredLod(texture< short1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2923 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort1 texCubemapLayeredLod(texture< ushort1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2925 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short2 texCubemapLayeredLod(texture< short2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2927 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort2 texCubemapLayeredLod(texture< ushort2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2929 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short4 texCubemapLayeredLod(texture< short4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort4 texCubemapLayeredLod(texture< ushort4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2939 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int texCubemapLayeredLod(texture< int, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2941 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned texCubemapLayeredLod(texture< unsigned, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int1 texCubemapLayeredLod(texture< int1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint1 texCubemapLayeredLod(texture< uint1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2947 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int2 texCubemapLayeredLod(texture< int2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2949 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint2 texCubemapLayeredLod(texture< uint2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2951 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int4 texCubemapLayeredLod(texture< int4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2953 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint4 texCubemapLayeredLod(texture< uint4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2963 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long texCubemapLayeredLod(texture< long, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2965 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned long texCubemapLayeredLod(texture< unsigned long, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2967 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long1 texCubemapLayeredLod(texture< long1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2969 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong1 texCubemapLayeredLod(texture< ulong1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long2 texCubemapLayeredLod(texture< long2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2973 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong2 texCubemapLayeredLod(texture< ulong2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2975 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long4 texCubemapLayeredLod(texture< long4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2977 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong4 texCubemapLayeredLod(texture< ulong4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2987 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLayeredLod(texture< float, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2989 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLayeredLod(texture< float1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2991 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLayeredLod(texture< float2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2993 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLayeredLod(texture< float4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 3001 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLayeredLod(texture< char, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level); 
#line 3003 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLayeredLod(texture< signed char, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level); 
#line 3005 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLayeredLod(texture< unsigned char, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level); 
#line 3007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLayeredLod(texture< char1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level); 
#line 3009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLayeredLod(texture< uchar1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level); 
#line 3011 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLayeredLod(texture< char2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level); 
#line 3013 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLayeredLod(texture< uchar2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level); 
#line 3015 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLayeredLod(texture< char4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level); 
#line 3017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLayeredLod(texture< uchar4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level); 
#line 3025 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLayeredLod(texture< short, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level); 
#line 3027 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLayeredLod(texture< unsigned short, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level); 
#line 3029 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLayeredLod(texture< short1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level); 
#line 3031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLayeredLod(texture< ushort1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level); 
#line 3033 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLayeredLod(texture< short2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level); 
#line 3035 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLayeredLod(texture< ushort2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level); 
#line 3037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLayeredLod(texture< short4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level); 
#line 3039 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLayeredLod(texture< ushort4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level); 
#line 3042 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::uint4 
#line 3044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
__utexfetchgrad(texture< T, texType, readMode>  t, ::float4 i, ::float4 dPdx, ::float4 dPdy, int d = texType) 
#line 3045 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)dPdx;(void)dPdy;(void)d;
#line 3052 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
::exit(___);}















#line 3069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
#line 3054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::int4 
#line 3056 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
__itexfetchgrad(texture< T, texType, readMode>  t, ::float4 i, ::float4 dPdx, ::float4 dPdy, int d = texType) 
#line 3057 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)dPdx;(void)dPdy;(void)d;
#line 3064 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
::exit(___);}















#line 3081 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
#line 3066 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::float4 
#line 3068 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
__ftexfetchgrad(texture< T, texType, readMode>  t, ::float4 i, ::float4 dPdx, ::float4 dPdy, int d = texType) 
#line 3069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)dPdx;(void)dPdy;(void)d;
#line 3076 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
::exit(___);}















#line 3093 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
#line 3078 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::uint4 
#line 3080 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
__utexfetchgradl(texture< T, texType, readMode>  t, ::float4 i, int l, ::float4 dPdx, ::float4 dPdy, int d = texType & 15) 
#line 3081 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)l;(void)dPdx;(void)dPdy;(void)d;
#line 3087 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
::exit(___);}













#line 3102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
#line 3089 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::int4 
#line 3091 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
__itexfetchgradl(texture< T, texType, readMode>  t, ::float4 i, int l, ::float4 dPdx, ::float4 dPdy, int d = texType & 15) 
#line 3092 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)l;(void)dPdx;(void)dPdy;(void)d;
#line 3098 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
::exit(___);}













#line 3113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
#line 3100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::float4 
#line 3102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
__ftexfetchgradl(texture< T, texType, readMode>  t, ::float4 i, int l, ::float4 dPdx, ::float4 dPdy, int d = texType & 15) 
#line 3103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)l;(void)dPdx;(void)dPdy;(void)d;
#line 3109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
::exit(___);}













#line 3124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
#line 3118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char tex1DGrad(texture< char, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline signed char tex1DGrad(texture< signed char, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex1DGrad(texture< unsigned char, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char1 tex1DGrad(texture< char1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex1DGrad(texture< uchar1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char2 tex1DGrad(texture< char2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex1DGrad(texture< uchar2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char4 tex1DGrad(texture< char4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex1DGrad(texture< uchar4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short tex1DGrad(texture< short, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex1DGrad(texture< unsigned short, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short1 tex1DGrad(texture< short1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex1DGrad(texture< ushort1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short2 tex1DGrad(texture< short2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex1DGrad(texture< ushort2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short4 tex1DGrad(texture< short4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex1DGrad(texture< ushort4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int tex1DGrad(texture< int, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex1DGrad(texture< unsigned, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int1 tex1DGrad(texture< int1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex1DGrad(texture< uint1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int2 tex1DGrad(texture< int2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex1DGrad(texture< uint2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int4 tex1DGrad(texture< int4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex1DGrad(texture< uint4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long tex1DGrad(texture< long, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex1DGrad(texture< unsigned long, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long1 tex1DGrad(texture< long1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex1DGrad(texture< ulong1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long2 tex1DGrad(texture< long2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex1DGrad(texture< ulong2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long4 tex1DGrad(texture< long4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex1DGrad(texture< ulong4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex1DGrad(texture< float, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DGrad(texture< float1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DGrad(texture< float2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DGrad(texture< float4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex1DGrad(texture< char, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy); 
#line 3234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex1DGrad(texture< signed char, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy); 
#line 3236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex1DGrad(texture< unsigned char, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy); 
#line 3238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DGrad(texture< char1, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy); 
#line 3240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DGrad(texture< uchar1, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy); 
#line 3242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DGrad(texture< char2, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy); 
#line 3244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DGrad(texture< uchar2, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy); 
#line 3246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DGrad(texture< char4, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy); 
#line 3248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DGrad(texture< uchar4, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy); 
#line 3256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex1DGrad(texture< short, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy); 
#line 3258 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex1DGrad(texture< unsigned short, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy); 
#line 3260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DGrad(texture< short1, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy); 
#line 3262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DGrad(texture< ushort1, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy); 
#line 3264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DGrad(texture< short2, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy); 
#line 3266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DGrad(texture< ushort2, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy); 
#line 3268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DGrad(texture< short4, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy); 
#line 3270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DGrad(texture< ushort4, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy); 
#line 3278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char tex2DGrad(texture< char, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline signed char tex2DGrad(texture< signed char, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex2DGrad(texture< unsigned char, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char1 tex2DGrad(texture< char1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex2DGrad(texture< uchar1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char2 tex2DGrad(texture< char2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex2DGrad(texture< uchar2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char4 tex2DGrad(texture< char4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex2DGrad(texture< uchar4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short tex2DGrad(texture< short, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex2DGrad(texture< unsigned short, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short1 tex2DGrad(texture< short1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex2DGrad(texture< ushort1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short2 tex2DGrad(texture< short2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex2DGrad(texture< ushort2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short4 tex2DGrad(texture< short4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex2DGrad(texture< ushort4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int tex2DGrad(texture< int, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3326 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex2DGrad(texture< unsigned, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int1 tex2DGrad(texture< int1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex2DGrad(texture< uint1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int2 tex2DGrad(texture< int2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex2DGrad(texture< uint2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int4 tex2DGrad(texture< int4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex2DGrad(texture< uint4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long tex2DGrad(texture< long, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex2DGrad(texture< unsigned long, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3352 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long1 tex2DGrad(texture< long1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex2DGrad(texture< ulong1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long2 tex2DGrad(texture< long2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex2DGrad(texture< ulong2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long4 tex2DGrad(texture< long4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex2DGrad(texture< ulong4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex2DGrad(texture< float, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DGrad(texture< float1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DGrad(texture< float2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DGrad(texture< float4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex2DGrad(texture< char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex2DGrad(texture< signed char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex2DGrad(texture< unsigned char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DGrad(texture< char1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DGrad(texture< uchar1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DGrad(texture< char2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DGrad(texture< uchar2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DGrad(texture< char4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DGrad(texture< uchar4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex2DGrad(texture< short, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex2DGrad(texture< unsigned short, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DGrad(texture< short1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DGrad(texture< ushort1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DGrad(texture< short2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DGrad(texture< ushort2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DGrad(texture< short4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DGrad(texture< ushort4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char tex1DLayeredGrad(texture< char, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline signed char tex1DLayeredGrad(texture< signed char, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex1DLayeredGrad(texture< unsigned char, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char1 tex1DLayeredGrad(texture< char1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex1DLayeredGrad(texture< uchar1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char2 tex1DLayeredGrad(texture< char2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex1DLayeredGrad(texture< uchar2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3446 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char4 tex1DLayeredGrad(texture< char4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex1DLayeredGrad(texture< uchar4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short tex1DLayeredGrad(texture< short, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex1DLayeredGrad(texture< unsigned short, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short1 tex1DLayeredGrad(texture< short1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex1DLayeredGrad(texture< ushort1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3464 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short2 tex1DLayeredGrad(texture< short2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex1DLayeredGrad(texture< ushort2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3468 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short4 tex1DLayeredGrad(texture< short4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex1DLayeredGrad(texture< ushort4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3478 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int tex1DLayeredGrad(texture< int, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3480 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex1DLayeredGrad(texture< unsigned, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int1 tex1DLayeredGrad(texture< int1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex1DLayeredGrad(texture< uint1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int2 tex1DLayeredGrad(texture< int2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex1DLayeredGrad(texture< uint2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3490 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int4 tex1DLayeredGrad(texture< int4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3492 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex1DLayeredGrad(texture< uint4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3502 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long tex1DLayeredGrad(texture< long, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3504 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex1DLayeredGrad(texture< unsigned long, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3506 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long1 tex1DLayeredGrad(texture< long1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3508 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex1DLayeredGrad(texture< ulong1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long2 tex1DLayeredGrad(texture< long2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3512 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex1DLayeredGrad(texture< ulong2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long4 tex1DLayeredGrad(texture< long4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3516 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex1DLayeredGrad(texture< ulong4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3526 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayeredGrad(texture< float, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3528 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayeredGrad(texture< float1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3530 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayeredGrad(texture< float2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3532 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayeredGrad(texture< float4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayeredGrad(texture< char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy); 
#line 3542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayeredGrad(texture< signed char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy); 
#line 3544 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayeredGrad(texture< unsigned char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy); 
#line 3546 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayeredGrad(texture< char1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy); 
#line 3548 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayeredGrad(texture< uchar1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy); 
#line 3550 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayeredGrad(texture< char2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy); 
#line 3552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayeredGrad(texture< uchar2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy); 
#line 3554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayeredGrad(texture< char4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy); 
#line 3556 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayeredGrad(texture< uchar4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy); 
#line 3564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayeredGrad(texture< short, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy); 
#line 3566 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayeredGrad(texture< unsigned short, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy); 
#line 3568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayeredGrad(texture< short1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy); 
#line 3570 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayeredGrad(texture< ushort1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy); 
#line 3572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayeredGrad(texture< short2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy); 
#line 3574 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayeredGrad(texture< ushort2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy); 
#line 3576 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayeredGrad(texture< short4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy); 
#line 3578 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayeredGrad(texture< ushort4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy); 
#line 3586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char tex2DLayeredGrad(texture< char, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3588 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline signed char tex2DLayeredGrad(texture< signed char, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3590 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex2DLayeredGrad(texture< unsigned char, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3592 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char1 tex2DLayeredGrad(texture< char1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3594 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex2DLayeredGrad(texture< uchar1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char2 tex2DLayeredGrad(texture< char2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex2DLayeredGrad(texture< uchar2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char4 tex2DLayeredGrad(texture< char4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3602 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex2DLayeredGrad(texture< uchar4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short tex2DLayeredGrad(texture< short, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3612 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex2DLayeredGrad(texture< unsigned short, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3614 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short1 tex2DLayeredGrad(texture< short1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex2DLayeredGrad(texture< ushort1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short2 tex2DLayeredGrad(texture< short2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3620 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex2DLayeredGrad(texture< ushort2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3622 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short4 tex2DLayeredGrad(texture< short4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex2DLayeredGrad(texture< ushort4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int tex2DLayeredGrad(texture< int, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3634 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex2DLayeredGrad(texture< unsigned, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3636 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int1 tex2DLayeredGrad(texture< int1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex2DLayeredGrad(texture< uint1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int2 tex2DLayeredGrad(texture< int2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3642 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex2DLayeredGrad(texture< uint2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int4 tex2DLayeredGrad(texture< int4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex2DLayeredGrad(texture< uint4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long tex2DLayeredGrad(texture< long, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3658 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex2DLayeredGrad(texture< unsigned long, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long1 tex2DLayeredGrad(texture< long1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex2DLayeredGrad(texture< ulong1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long2 tex2DLayeredGrad(texture< long2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex2DLayeredGrad(texture< ulong2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long4 tex2DLayeredGrad(texture< long4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex2DLayeredGrad(texture< ulong4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayeredGrad(texture< float, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3682 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayeredGrad(texture< float1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3684 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayeredGrad(texture< float2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayeredGrad(texture< float4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayeredGrad(texture< char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayeredGrad(texture< signed char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3698 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayeredGrad(texture< unsigned char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3700 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayeredGrad(texture< char1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayeredGrad(texture< uchar1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayeredGrad(texture< char2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayeredGrad(texture< uchar2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3708 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayeredGrad(texture< char4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayeredGrad(texture< uchar4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayeredGrad(texture< short, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3720 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayeredGrad(texture< unsigned short, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayeredGrad(texture< short1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3724 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayeredGrad(texture< ushort1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayeredGrad(texture< short2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3728 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayeredGrad(texture< ushort2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayeredGrad(texture< short4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3732 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayeredGrad(texture< ushort4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char tex3DGrad(texture< char, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3742 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline signed char tex3DGrad(texture< signed char, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3744 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex3DGrad(texture< unsigned char, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3746 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char1 tex3DGrad(texture< char1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex3DGrad(texture< uchar1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char2 tex3DGrad(texture< char2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3752 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex3DGrad(texture< uchar2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3754 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline char4 tex3DGrad(texture< char4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex3DGrad(texture< uchar4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3764 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short tex3DGrad(texture< short, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex3DGrad(texture< unsigned short, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3768 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short1 tex3DGrad(texture< short1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3770 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex3DGrad(texture< ushort1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3772 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short2 tex3DGrad(texture< short2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3774 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex3DGrad(texture< ushort2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3776 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline short4 tex3DGrad(texture< short4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3778 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex3DGrad(texture< ushort4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3786 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int tex3DGrad(texture< int, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex3DGrad(texture< unsigned, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3790 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int1 tex3DGrad(texture< int1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3792 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex3DGrad(texture< uint1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3794 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int2 tex3DGrad(texture< int2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex3DGrad(texture< uint2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3798 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline int4 tex3DGrad(texture< int4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3800 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex3DGrad(texture< uint4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3810 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long tex3DGrad(texture< long, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3812 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex3DGrad(texture< unsigned long, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3814 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long1 tex3DGrad(texture< long1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3816 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex3DGrad(texture< ulong1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3818 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long2 tex3DGrad(texture< long2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3820 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex3DGrad(texture< ulong2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3822 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline long4 tex3DGrad(texture< long4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3824 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex3DGrad(texture< ulong4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3834 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex3DGrad(texture< float, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3836 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3DGrad(texture< float1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3838 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3DGrad(texture< float2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3840 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3DGrad(texture< float4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex3DGrad(texture< char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3850 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex3DGrad(texture< signed char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3852 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex3DGrad(texture< unsigned char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3854 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3DGrad(texture< char1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3DGrad(texture< uchar1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3DGrad(texture< char2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3DGrad(texture< uchar2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3862 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3DGrad(texture< char4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3864 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3DGrad(texture< uchar4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3872 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex3DGrad(texture< short, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float tex3DGrad(texture< unsigned short, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3DGrad(texture< short1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3878 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3DGrad(texture< ushort1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3880 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3DGrad(texture< short2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3DGrad(texture< ushort2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3884 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3DGrad(texture< short4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3DGrad(texture< ushort4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 80 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char tex1Dfetch(texture< char, 1, cudaReadModeElementType>  t, int x) 
#line 81 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 89 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 91 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline signed char tex1Dfetch(texture< signed char, 1, cudaReadModeElementType>  t, int x) 
#line 92 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 96 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 98 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char tex1Dfetch(texture< unsigned char, 1, cudaReadModeElementType>  t, int x) 
#line 99 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char1 tex1Dfetch(texture< char1, 1, cudaReadModeElementType>  t, int x) 
#line 106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 tex1Dfetch(texture< uchar1, 1, cudaReadModeElementType>  t, int x) 
#line 113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char2 tex1Dfetch(texture< char2, 1, cudaReadModeElementType>  t, int x) 
#line 120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 tex1Dfetch(texture< uchar2, 1, cudaReadModeElementType>  t, int x) 
#line 127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex1Dfetch(texture< char4, 1, cudaReadModeElementType>  t, int x) 
#line 134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex1Dfetch(texture< uchar4, 1, cudaReadModeElementType>  t, int x) 
#line 141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short tex1Dfetch(texture< short, 1, cudaReadModeElementType>  t, int x) 
#line 154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short tex1Dfetch(texture< unsigned short, 1, cudaReadModeElementType>  t, int x) 
#line 161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short1 tex1Dfetch(texture< short1, 1, cudaReadModeElementType>  t, int x) 
#line 168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 tex1Dfetch(texture< ushort1, 1, cudaReadModeElementType>  t, int x) 
#line 175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short2 tex1Dfetch(texture< short2, 1, cudaReadModeElementType>  t, int x) 
#line 182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 tex1Dfetch(texture< ushort2, 1, cudaReadModeElementType>  t, int x) 
#line 189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex1Dfetch(texture< short4, 1, cudaReadModeElementType>  t, int x) 
#line 196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex1Dfetch(texture< ushort4, 1, cudaReadModeElementType>  t, int x) 
#line 203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int tex1Dfetch(texture< int, 1, cudaReadModeElementType>  t, int x) 
#line 216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned tex1Dfetch(texture< unsigned, 1, cudaReadModeElementType>  t, int x) 
#line 223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int1 tex1Dfetch(texture< int1, 1, cudaReadModeElementType>  t, int x) 
#line 230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 tex1Dfetch(texture< uint1, 1, cudaReadModeElementType>  t, int x) 
#line 237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int2 tex1Dfetch(texture< int2, 1, cudaReadModeElementType>  t, int x) 
#line 244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 tex1Dfetch(texture< uint2, 1, cudaReadModeElementType>  t, int x) 
#line 251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex1Dfetch(texture< int4, 1, cudaReadModeElementType>  t, int x) 
#line 258 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex1Dfetch(texture< uint4, 1, cudaReadModeElementType>  t, int x) 
#line 265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long tex1Dfetch(texture< long, 1, cudaReadModeElementType>  t, int x) 
#line 280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long tex1Dfetch(texture< unsigned long, 1, cudaReadModeElementType>  t, int x) 
#line 287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long1 tex1Dfetch(texture< long1, 1, cudaReadModeElementType>  t, int x) 
#line 294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 tex1Dfetch(texture< ulong1, 1, cudaReadModeElementType>  t, int x) 
#line 301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long2 tex1Dfetch(texture< long2, 1, cudaReadModeElementType>  t, int x) 
#line 308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 tex1Dfetch(texture< ulong2, 1, cudaReadModeElementType>  t, int x) 
#line 315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 319 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long4 tex1Dfetch(texture< long4, 1, cudaReadModeElementType>  t, int x) 
#line 322 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 326 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 tex1Dfetch(texture< ulong4, 1, cudaReadModeElementType>  t, int x) 
#line 329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1Dfetch(texture< float, 1, cudaReadModeElementType>  t, int x) 
#line 344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1Dfetch(texture< float1, 1, cudaReadModeElementType>  t, int x) 
#line 351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1Dfetch(texture< float2, 1, cudaReadModeElementType>  t, int x) 
#line 358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1Dfetch(texture< float4, 1, cudaReadModeElementType>  t, int x) 
#line 365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1Dfetch(texture< char, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1Dfetch(texture< signed char, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1Dfetch(texture< unsigned char, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1Dfetch(texture< char1, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1Dfetch(texture< uchar1, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1Dfetch(texture< char2, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 429 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1Dfetch(texture< uchar2, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 435 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1Dfetch(texture< char4, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1Dfetch(texture< uchar4, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 446 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 464 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1Dfetch(texture< short, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 465 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 478 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1Dfetch(texture< unsigned short, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 468 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 473 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 475 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1Dfetch(texture< short1, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 476 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1Dfetch(texture< ushort1, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 502 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 491 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1Dfetch(texture< short2, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 492 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 497 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1Dfetch(texture< ushort2, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 505 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1Dfetch(texture< short4, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 508 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 526 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1Dfetch(texture< ushort4, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 516 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 521 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 534 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char tex1D(texture< char, 1, cudaReadModeElementType>  t, float x) 
#line 530 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 549 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline signed char tex1D(texture< signed char, 1, cudaReadModeElementType>  t, float x) 
#line 541 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 556 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 547 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char tex1D(texture< unsigned char, 1, cudaReadModeElementType>  t, float x) 
#line 548 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 563 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char1 tex1D(texture< char1, 1, cudaReadModeElementType>  t, float x) 
#line 555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 559 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 570 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 561 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 tex1D(texture< uchar1, 1, cudaReadModeElementType>  t, float x) 
#line 562 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 566 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 577 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char2 tex1D(texture< char2, 1, cudaReadModeElementType>  t, float x) 
#line 569 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 573 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 tex1D(texture< uchar2, 1, cudaReadModeElementType>  t, float x) 
#line 576 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 580 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 591 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 582 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex1D(texture< char4, 1, cudaReadModeElementType>  t, float x) 
#line 583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 587 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex1D(texture< uchar4, 1, cudaReadModeElementType>  t, float x) 
#line 590 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 594 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 602 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short tex1D(texture< short, 1, cudaReadModeElementType>  t, float x) 
#line 603 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 607 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 609 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short tex1D(texture< unsigned short, 1, cudaReadModeElementType>  t, float x) 
#line 610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 614 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short1 tex1D(texture< short1, 1, cudaReadModeElementType>  t, float x) 
#line 617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 621 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 tex1D(texture< ushort1, 1, cudaReadModeElementType>  t, float x) 
#line 624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 628 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 639 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short2 tex1D(texture< short2, 1, cudaReadModeElementType>  t, float x) 
#line 631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 635 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 tex1D(texture< ushort2, 1, cudaReadModeElementType>  t, float x) 
#line 638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 642 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex1D(texture< short4, 1, cudaReadModeElementType>  t, float x) 
#line 645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 649 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 651 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex1D(texture< ushort4, 1, cudaReadModeElementType>  t, float x) 
#line 652 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int tex1D(texture< int, 1, cudaReadModeElementType>  t, float x) 
#line 665 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 669 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 671 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned tex1D(texture< unsigned, 1, cudaReadModeElementType>  t, float x) 
#line 672 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 676 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 687 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int1 tex1D(texture< int1, 1, cudaReadModeElementType>  t, float x) 
#line 679 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 tex1D(texture< uint1, 1, cudaReadModeElementType>  t, float x) 
#line 686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 690 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int2 tex1D(texture< int2, 1, cudaReadModeElementType>  t, float x) 
#line 693 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 697 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 708 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 tex1D(texture< uint2, 1, cudaReadModeElementType>  t, float x) 
#line 700 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex1D(texture< int4, 1, cudaReadModeElementType>  t, float x) 
#line 707 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex1D(texture< uint4, 1, cudaReadModeElementType>  t, float x) 
#line 714 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 729 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 734 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long tex1D(texture< long, 1, cudaReadModeElementType>  t, float x) 
#line 735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 739 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 741 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long tex1D(texture< unsigned long, 1, cudaReadModeElementType>  t, float x) 
#line 742 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 746 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 757 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long1 tex1D(texture< long1, 1, cudaReadModeElementType>  t, float x) 
#line 749 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 764 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 755 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 tex1D(texture< ulong1, 1, cudaReadModeElementType>  t, float x) 
#line 756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 760 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 771 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 762 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long2 tex1D(texture< long2, 1, cudaReadModeElementType>  t, float x) 
#line 763 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 767 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 778 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 tex1D(texture< ulong2, 1, cudaReadModeElementType>  t, float x) 
#line 770 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 774 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 785 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 776 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long4 tex1D(texture< long4, 1, cudaReadModeElementType>  t, float x) 
#line 777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 781 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 792 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 783 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 tex1D(texture< ulong4, 1, cudaReadModeElementType>  t, float x) 
#line 784 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 799 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 798 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1D(texture< float, 1, cudaReadModeElementType>  t, float x) 
#line 799 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 803 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 814 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 805 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1D(texture< float1, 1, cudaReadModeElementType>  t, float x) 
#line 806 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 810 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 821 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 812 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1D(texture< float2, 1, cudaReadModeElementType>  t, float x) 
#line 813 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 817 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 828 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 819 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1D(texture< float4, 1, cudaReadModeElementType>  t, float x) 
#line 820 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 824 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 835 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 832 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1D(texture< char, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 833 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 855 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 844 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1D(texture< signed char, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 845 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 850 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 852 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1D(texture< unsigned char, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1D(texture< char1, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 866 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1D(texture< uchar1, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 869 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1D(texture< char2, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 877 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 895 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 884 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1D(texture< uchar2, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 903 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 892 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1D(texture< char4, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 900 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1D(texture< uchar4, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 901 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 919 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 914 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1D(texture< short, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 915 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 920 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 933 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1D(texture< unsigned short, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 923 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 941 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1D(texture< short1, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 949 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1D(texture< ushort1, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 939 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 944 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1D(texture< short2, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 947 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 965 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 954 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1D(texture< ushort2, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 955 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 960 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 973 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 962 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1D(texture< short4, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 963 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 968 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 981 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1D(texture< ushort4, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 976 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 989 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 984 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char tex2D(texture< char, 2, cudaReadModeElementType>  t, float x, float y) 
#line 985 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 993 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1004 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 995 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline signed char tex2D(texture< signed char, 2, cudaReadModeElementType>  t, float x, float y) 
#line 996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1011 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1002 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char tex2D(texture< unsigned char, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1003 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1018 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char1 tex2D(texture< char1, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1010 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1014 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1025 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 tex2D(texture< uchar1, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1021 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1023 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char2 tex2D(texture< char2, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1028 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1039 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 tex2D(texture< uchar2, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1035 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1046 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex2D(texture< char4, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1038 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1042 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex2D(texture< uchar4, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1045 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1049 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1060 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1057 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short tex2D(texture< short, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1073 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1064 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short tex2D(texture< unsigned short, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1065 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1080 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1071 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short1 tex2D(texture< short1, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1072 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1076 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1087 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1078 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 tex2D(texture< ushort1, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1079 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1083 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1094 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1085 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short2 tex2D(texture< short2, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1090 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1092 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 tex2D(texture< ushort2, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1093 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1097 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1099 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex2D(texture< short4, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex2D(texture< ushort4, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int tex2D(texture< int, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned tex2D(texture< unsigned, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int1 tex2D(texture< int1, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 tex2D(texture< uint1, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int2 tex2D(texture< int2, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 tex2D(texture< uint2, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex2D(texture< int4, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex2D(texture< uint4, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long tex2D(texture< long, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long tex2D(texture< unsigned long, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long1 tex2D(texture< long1, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 tex2D(texture< ulong1, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long2 tex2D(texture< long2, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 tex2D(texture< ulong2, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long4 tex2D(texture< long4, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 tex2D(texture< ulong4, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2D(texture< float, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2D(texture< float1, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2D(texture< float2, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2D(texture< float4, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2D(texture< char, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2D(texture< signed char, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2D(texture< unsigned char, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2D(texture< char1, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2D(texture< uchar1, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2D(texture< char2, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1326 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2D(texture< uchar2, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1352 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2D(texture< char4, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2D(texture< uchar4, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2D(texture< short, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1382 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2D(texture< unsigned short, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2D(texture< short1, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2D(texture< ushort1, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2D(texture< short2, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2D(texture< ushort2, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2D(texture< short4, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2D(texture< ushort4, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char tex1DLayered(texture< char, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1453 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline signed char tex1DLayered(texture< signed char, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char tex1DLayered(texture< unsigned char, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1452 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char1 tex1DLayered(texture< char1, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1474 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1465 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 tex1DLayered(texture< uchar1, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char2 tex1DLayered(texture< char2, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1473 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1477 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 tex1DLayered(texture< uchar2, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1480 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1495 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex1DLayered(texture< char4, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1491 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1502 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex1DLayered(texture< uchar4, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1498 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1509 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1506 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short tex1DLayered(texture< short, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1522 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short tex1DLayered(texture< unsigned short, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1520 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short1 tex1DLayered(texture< short1, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1521 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1525 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1527 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 tex1DLayered(texture< ushort1, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1528 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1532 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1543 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1534 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short2 tex1DLayered(texture< short2, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1535 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1539 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1550 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1541 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 tex1DLayered(texture< ushort2, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1546 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1548 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex1DLayered(texture< short4, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1549 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1553 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex1DLayered(texture< ushort4, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1556 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int tex1DLayered(texture< int, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1569 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1573 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned tex1DLayered(texture< unsigned, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1576 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1580 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1591 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1582 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int1 tex1DLayered(texture< int1, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1587 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 tex1DLayered(texture< uint1, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1590 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1594 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int2 tex1DLayered(texture< int2, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1612 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1603 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 tex1DLayered(texture< uint2, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1608 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex1DLayered(texture< int4, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1615 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex1DLayered(texture< uint4, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1622 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long tex1DLayered(texture< long, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1648 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1639 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long tex1DLayered(texture< unsigned long, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1655 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long1 tex1DLayered(texture< long1, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1647 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1651 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 tex1DLayered(texture< ulong1, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1658 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1669 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long2 tex1DLayered(texture< long2, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1665 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1676 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 tex1DLayered(texture< ulong2, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1672 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long4 tex1DLayered(texture< long4, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1675 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1679 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1690 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 tex1DLayered(texture< ulong4, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1682 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1697 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayered(texture< float, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1697 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1712 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1703 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLayered(texture< float1, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1708 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLayered(texture< float2, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1717 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLayered(texture< float4, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1733 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayered(texture< char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1742 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayered(texture< signed char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1743 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1761 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayered(texture< unsigned char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLayered(texture< char1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1759 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1764 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLayered(texture< uchar1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1767 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1772 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1785 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1774 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLayered(texture< char2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1775 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1793 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1782 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLayered(texture< uchar2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1783 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1801 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1790 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLayered(texture< char4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1791 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1809 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1798 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLayered(texture< uchar4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1799 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1804 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1817 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1812 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayered(texture< short, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1813 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1818 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1831 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1820 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayered(texture< unsigned short, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1821 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1826 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1839 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1828 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLayered(texture< short1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1834 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1847 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1836 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLayered(texture< ushort1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1837 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1855 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1844 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLayered(texture< short2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1845 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1850 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1852 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLayered(texture< ushort2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLayered(texture< short4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1866 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLayered(texture< ushort4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1869 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char tex2DLayered(texture< char, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1891 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1902 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline signed char tex2DLayered(texture< signed char, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1894 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1909 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1900 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char tex2DLayered(texture< unsigned char, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1901 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1905 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1907 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char1 tex2DLayered(texture< char1, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1908 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1912 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1923 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1914 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 tex2DLayered(texture< uchar1, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1915 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1919 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1921 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char2 tex2DLayered(texture< char2, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1926 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1937 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 tex2DLayered(texture< uchar2, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1929 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1933 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1944 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1935 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex2DLayered(texture< char4, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1940 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1951 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1942 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex2DLayered(texture< uchar4, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1947 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1955 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short tex2DLayered(texture< short, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1956 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1960 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1962 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short tex2DLayered(texture< unsigned short, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1963 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1967 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1969 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short1 tex2DLayered(texture< short1, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1974 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1985 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1976 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 tex2DLayered(texture< ushort1, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1977 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1981 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1983 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short2 tex2DLayered(texture< short2, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1984 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1988 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1999 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1990 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 tex2DLayered(texture< ushort2, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1991 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1995 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2006 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 1997 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex2DLayered(texture< short4, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2002 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2013 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2004 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex2DLayered(texture< ushort4, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2005 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2020 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int tex2DLayered(texture< int, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2018 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2022 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2033 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned tex2DLayered(texture< unsigned, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2025 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2029 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2040 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int1 tex2DLayered(texture< int1, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2036 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2038 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 tex2DLayered(texture< uint1, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2039 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2045 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int2 tex2DLayered(texture< int2, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2046 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2050 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2061 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2052 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 tex2DLayered(texture< uint2, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2057 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2068 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2059 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex2DLayered(texture< int4, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2060 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2064 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2075 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2066 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex2DLayered(texture< uint4, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2067 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2071 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2082 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2081 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long tex2DLayered(texture< long, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2082 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2097 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2088 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long tex2DLayered(texture< unsigned long, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2089 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2093 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2095 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long1 tex2DLayered(texture< long1, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2096 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 tex2DLayered(texture< ulong1, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long2 tex2DLayered(texture< long2, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 tex2DLayered(texture< ulong2, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long4 tex2DLayered(texture< long4, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 tex2DLayered(texture< ulong4, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayered(texture< float, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLayered(texture< float1, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLayered(texture< float2, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLayered(texture< float4, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayered(texture< char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayered(texture< signed char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayered(texture< unsigned char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLayered(texture< char1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLayered(texture< uchar1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLayered(texture< char2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLayered(texture< uchar2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLayered(texture< char4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2258 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLayered(texture< uchar4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayered(texture< short, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayered(texture< unsigned short, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLayered(texture< short1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLayered(texture< ushort1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLayered(texture< short2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLayered(texture< ushort2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLayered(texture< short4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLayered(texture< ushort4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char tex3D(texture< char, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline signed char tex3D(texture< signed char, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char tex3D(texture< unsigned char, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char1 tex3D(texture< char1, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 tex3D(texture< uchar1, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char2 tex3D(texture< char2, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 tex3D(texture< uchar2, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2382 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex3D(texture< char4, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex3D(texture< uchar4, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short tex3D(texture< short, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short tex3D(texture< unsigned short, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short1 tex3D(texture< short1, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2423 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 tex3D(texture< ushort1, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2426 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2441 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short2 tex3D(texture< short2, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2439 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 tex3D(texture< ushort2, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2455 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2446 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex3D(texture< short4, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2447 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2453 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex3D(texture< ushort4, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2454 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int tex3D(texture< int, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2471 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2473 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned tex3D(texture< unsigned, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2474 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2478 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2480 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int1 tex3D(texture< int1, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2485 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2496 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 tex3D(texture< uint1, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2492 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2503 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int2 tex3D(texture< int2, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2495 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2501 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 tex3D(texture< uint2, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2502 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2506 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2517 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2508 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex3D(texture< int4, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2509 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2524 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex3D(texture< uint4, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2516 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2520 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2530 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long tex3D(texture< long, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2535 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2546 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2537 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long tex3D(texture< unsigned long, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2553 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2544 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long1 tex3D(texture< long1, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2549 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 tex3D(texture< ulong1, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2556 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2567 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long2 tex3D(texture< long2, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2559 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2563 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2574 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2565 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 tex3D(texture< ulong2, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2566 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2570 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long4 tex3D(texture< long4, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2573 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2577 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2588 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2579 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 tex3D(texture< ulong4, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2580 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2594 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3D(texture< float, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2599 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex3D(texture< float1, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2602 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2606 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2608 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex3D(texture< float2, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2609 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2615 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex3D(texture< float4, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2620 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2628 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3D(texture< char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2629 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2651 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3D(texture< signed char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2641 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2659 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2648 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3D(texture< unsigned char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2649 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex3D(texture< char1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2657 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2675 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex3D(texture< uchar1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2665 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2672 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex3D(texture< char2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2673 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2691 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex3D(texture< uchar2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex3D(texture< char4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2689 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2707 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex3D(texture< uchar4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2697 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3D(texture< short, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2716 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2729 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3D(texture< unsigned short, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2724 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2737 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex3D(texture< short1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2727 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2732 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2734 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex3D(texture< ushort1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2742 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex3D(texture< short2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2743 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2761 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex3D(texture< ushort2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex3D(texture< short4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2759 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2764 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex3D(texture< ushort4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2767 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2772 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2785 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char texCubemap(texture< char, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2781 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2789 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2800 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2791 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline signed char texCubemap(texture< signed char, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2792 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2807 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2798 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char texCubemap(texture< unsigned char, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2799 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2803 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2814 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2805 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char1 texCubemap(texture< char1, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2806 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2810 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2821 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2812 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 texCubemap(texture< uchar1, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2813 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2817 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2828 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2819 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char2 texCubemap(texture< char2, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2820 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2824 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2835 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2826 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 texCubemap(texture< uchar2, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2827 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2831 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2833 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char4 texCubemap(texture< char4, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2834 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2838 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2849 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2840 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 texCubemap(texture< uchar4, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2841 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2845 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short texCubemap(texture< short, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2854 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2869 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short texCubemap(texture< unsigned short, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2865 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short1 texCubemap(texture< short1, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2872 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 texCubemap(texture< ushort1, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2875 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2881 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short2 texCubemap(texture< short2, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 texCubemap(texture< ushort2, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2889 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2904 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2895 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short4 texCubemap(texture< short4, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2896 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2900 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2902 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 texCubemap(texture< ushort4, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2903 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2907 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2918 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2915 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int texCubemap(texture< int, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2920 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned texCubemap(texture< unsigned, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2923 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2927 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2929 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int1 texCubemap(texture< int1, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2934 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 texCubemap(texture< uint1, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2937 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2941 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int2 texCubemap(texture< int2, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2944 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2948 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2959 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2950 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 texCubemap(texture< uint2, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2951 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2955 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2966 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int4 texCubemap(texture< int4, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2962 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2973 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2964 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 texCubemap(texture< uint4, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2965 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2969 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long texCubemap(texture< long, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2984 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2995 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2986 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long texCubemap(texture< unsigned long, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2987 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2991 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3002 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 2993 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long1 texCubemap(texture< long1, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2994 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 texCubemap(texture< ulong1, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 3001 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3005 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long2 texCubemap(texture< long2, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 3008 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3012 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3023 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3014 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 texCubemap(texture< ulong2, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 3015 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3019 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3021 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long4 texCubemap(texture< long4, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 3022 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3026 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3028 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 texCubemap(texture< ulong4, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 3029 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3033 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemap(texture< float, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 3044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3059 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3050 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemap(texture< float1, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 3051 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3055 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3066 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3057 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemap(texture< float2, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 3058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3073 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3064 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemap(texture< float4, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 3065 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3080 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3077 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemap(texture< char, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3078 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3087 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3089 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemap(texture< signed char, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3090 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3095 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3097 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemap(texture< unsigned char, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3098 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemap(texture< char1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemap(texture< uchar1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemap(texture< char2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemap(texture< uchar2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemap(texture< char4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemap(texture< uchar4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemap(texture< short, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemap(texture< unsigned short, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemap(texture< short1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemap(texture< ushort1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemap(texture< short2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemap(texture< ushort2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemap(texture< short4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemap(texture< ushort4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char texCubemapLayered(texture< char, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline signed char texCubemapLayered(texture< signed char, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char texCubemapLayered(texture< unsigned char, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char1 texCubemapLayered(texture< char1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 texCubemapLayered(texture< uchar1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char2 texCubemapLayered(texture< char2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 texCubemapLayered(texture< uchar2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char4 texCubemapLayered(texture< char4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 texCubemapLayered(texture< uchar4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short texCubemapLayered(texture< short, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short texCubemapLayered(texture< unsigned short, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short1 texCubemapLayered(texture< short1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 texCubemapLayered(texture< ushort1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short2 texCubemapLayered(texture< short2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 texCubemapLayered(texture< ushort2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short4 texCubemapLayered(texture< short4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3345 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 texCubemapLayered(texture< ushort4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3352 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int texCubemapLayered(texture< int, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned texCubemapLayered(texture< unsigned, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int1 texCubemapLayered(texture< int1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 texCubemapLayered(texture< uint1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int2 texCubemapLayered(texture< int2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 texCubemapLayered(texture< uint2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3415 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int4 texCubemapLayered(texture< int4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 texCubemapLayered(texture< uint4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3429 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3428 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long texCubemapLayered(texture< long, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3429 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3435 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long texCubemapLayered(texture< unsigned long, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long1 texCubemapLayered(texture< long1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3447 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 texCubemapLayered(texture< ulong1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3450 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3454 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3465 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long2 texCubemapLayered(texture< long2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3457 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3461 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 texCubemapLayered(texture< ulong2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3464 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3468 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long4 texCubemapLayered(texture< long4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3471 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3475 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3477 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 texCubemapLayered(texture< ulong4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3478 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3492 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLayered(texture< float, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3497 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3508 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemapLayered(texture< float1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3504 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3506 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemapLayered(texture< float2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3522 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemapLayered(texture< float4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3526 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLayered(texture< char, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3527 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3549 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLayered(texture< signed char, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3539 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3544 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3546 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLayered(texture< unsigned char, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3547 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3565 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemapLayered(texture< char1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3573 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3562 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemapLayered(texture< uchar1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3563 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3570 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemapLayered(texture< char2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3576 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3578 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemapLayered(texture< uchar2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3579 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemapLayered(texture< char4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3587 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3592 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3594 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemapLayered(texture< uchar4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3608 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLayered(texture< short, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3609 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3614 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3627 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLayered(texture< unsigned short, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3622 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3635 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemapLayered(texture< short1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3643 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemapLayered(texture< ushort1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3651 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemapLayered(texture< short2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3641 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3659 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3648 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemapLayered(texture< ushort2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3649 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemapLayered(texture< short4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3657 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3675 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemapLayered(texture< ushort4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3665 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3703 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex2Dgather(texture< char, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3708 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex2Dgather(texture< signed char, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3709 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3720 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex2Dgather(texture< unsigned char, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3714 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3716 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex2Dgather(texture< char1, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3721 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex2Dgather(texture< uchar1, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3724 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3728 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex2Dgather(texture< char2, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3729 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3733 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex2Dgather(texture< uchar2, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3734 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3738 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex2Dgather(texture< char3, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3739 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3741 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3743 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex2Dgather(texture< uchar3, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3744 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3746 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3755 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex2Dgather(texture< char4, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3749 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3760 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex2Dgather(texture< uchar4, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3754 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3765 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex2Dgather(texture< short, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3759 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3761 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3770 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3763 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex2Dgather(texture< unsigned short, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3764 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3775 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3768 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex2Dgather(texture< short1, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3771 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3773 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex2Dgather(texture< ushort1, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3774 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3776 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3785 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3778 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex2Dgather(texture< short2, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3779 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3781 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3790 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3783 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex2Dgather(texture< ushort2, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3784 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3786 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3795 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex2Dgather(texture< short3, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3789 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3791 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3800 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3793 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex2Dgather(texture< ushort3, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3794 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3805 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3798 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex2Dgather(texture< short4, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3799 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3801 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3810 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3803 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex2Dgather(texture< ushort4, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3804 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3806 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3815 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3808 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex2Dgather(texture< int, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3809 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3811 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3820 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3813 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex2Dgather(texture< unsigned, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3814 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3816 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3825 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3818 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex2Dgather(texture< int1, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3819 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3821 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3830 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3823 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex2Dgather(texture< uint1, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3824 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3826 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3835 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3828 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex2Dgather(texture< int2, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3831 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3840 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3833 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex2Dgather(texture< uint2, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3834 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3836 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3845 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3838 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex2Dgather(texture< int3, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3839 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3841 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3850 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3843 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex2Dgather(texture< uint3, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3844 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3846 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3855 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex2Dgather(texture< int4, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3849 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3851 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex2Dgather(texture< uint4, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3854 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3865 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< float, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3859 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3870 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< float1, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3864 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3866 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3875 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< float2, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3869 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3880 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3873 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< float3, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3878 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< float4, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3881 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3891 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3902 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3895 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< signed char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3896 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3907 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3900 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< unsigned char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3901 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3903 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3912 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3905 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< char1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3908 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3917 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3910 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< uchar1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3913 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3915 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< char2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3918 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3927 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3920 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< uchar2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3921 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3923 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3925 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< char3, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3926 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3937 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< uchar3, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3933 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3942 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3935 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< char4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3947 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3940 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< uchar4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3941 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< short, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3948 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3950 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< unsigned short, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3951 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3953 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3962 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3955 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< short1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3956 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3967 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3960 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< ushort1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3961 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3963 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3965 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< short2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3966 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3968 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3977 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< ushort2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3973 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3982 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3975 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< short3, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3976 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3987 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< ushort3, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3981 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3983 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3985 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< short4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3986 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3988 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3997 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 3990 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< ushort4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3991 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3993 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 4002 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char tex1DLod(texture< char, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4008 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4027 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4018 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline signed char tex1DLod(texture< signed char, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4019 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4023 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4034 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4025 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char tex1DLod(texture< unsigned char, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4026 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4041 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char1 tex1DLod(texture< char1, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4033 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4039 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 tex1DLod(texture< uchar1, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4040 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4055 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4046 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char2 tex1DLod(texture< char2, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4051 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 tex1DLod(texture< uchar2, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4060 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex1DLod(texture< char4, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4061 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4065 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4076 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4067 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex1DLod(texture< uchar4, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4068 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4072 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4083 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4080 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short tex1DLod(texture< short, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4081 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4085 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4096 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4087 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short tex1DLod(texture< unsigned short, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4088 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4092 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4094 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short1 tex1DLod(texture< short1, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4095 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4099 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 tex1DLod(texture< ushort1, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short2 tex1DLod(texture< short2, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 tex1DLod(texture< ushort2, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex1DLod(texture< short4, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex1DLod(texture< ushort4, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int tex1DLod(texture< int, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned tex1DLod(texture< unsigned, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int1 tex1DLod(texture< int1, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 tex1DLod(texture< uint1, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int2 tex1DLod(texture< int2, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 tex1DLod(texture< uint2, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex1DLod(texture< int4, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex1DLod(texture< uint4, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long tex1DLod(texture< long, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long tex1DLod(texture< unsigned long, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long1 tex1DLod(texture< long1, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 tex1DLod(texture< ulong1, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long2 tex1DLod(texture< long2, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 tex1DLod(texture< ulong2, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long4 tex1DLod(texture< long4, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 tex1DLod(texture< ulong4, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLod(texture< float, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLod(texture< float1, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLod(texture< float2, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4297 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLod(texture< float4, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLod(texture< char, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4322 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLod(texture< signed char, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLod(texture< unsigned char, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLod(texture< char1, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLod(texture< uchar1, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4352 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLod(texture< char2, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLod(texture< uchar2, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLod(texture< char4, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLod(texture< uchar4, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLod(texture< short, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLod(texture< unsigned short, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLod(texture< short1, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLod(texture< ushort1, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4435 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLod(texture< short2, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLod(texture< ushort2, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLod(texture< short4, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4441 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4446 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLod(texture< ushort4, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4454 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char tex2DLod(texture< char, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4471 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4473 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline signed char tex2DLod(texture< signed char, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4474 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4478 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4480 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char tex2DLod(texture< unsigned char, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4485 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4496 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char1 tex2DLod(texture< char1, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4492 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4503 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 tex2DLod(texture< uchar1, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4495 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4501 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char2 tex2DLod(texture< char2, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4502 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4506 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4517 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4508 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 tex2DLod(texture< uchar2, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4509 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4524 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex2DLod(texture< char4, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4516 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4520 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4522 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex2DLod(texture< uchar4, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4523 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4527 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4535 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short tex2DLod(texture< short, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short tex2DLod(texture< unsigned short, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4543 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4547 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4549 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short1 tex2DLod(texture< short1, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4550 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4565 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4556 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 tex2DLod(texture< ushort1, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4561 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4563 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short2 tex2DLod(texture< short2, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4579 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4570 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 tex2DLod(texture< ushort2, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4577 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex2DLod(texture< short4, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4578 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4582 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4593 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex2DLod(texture< ushort4, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4585 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int tex2DLod(texture< int, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4602 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned tex2DLod(texture< unsigned, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4609 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4620 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int1 tex2DLod(texture< int1, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4612 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4627 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 tex2DLod(texture< uint1, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4634 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int2 tex2DLod(texture< int2, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4641 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 tex2DLod(texture< uint2, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4648 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4639 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex2DLod(texture< int4, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4655 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex2DLod(texture< uint4, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4647 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4651 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long tex2DLod(texture< long, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4677 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long tex2DLod(texture< unsigned long, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4669 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4673 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4684 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4675 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long1 tex2DLod(texture< long1, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4676 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4691 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4682 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 tex2DLod(texture< ulong1, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4687 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4698 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4689 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long2 tex2DLod(texture< long2, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4690 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4705 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 tex2DLod(texture< ulong2, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4697 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4712 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4703 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long4 tex2DLod(texture< long4, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4708 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 tex2DLod(texture< ulong4, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLod(texture< float, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4741 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4732 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLod(texture< float1, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4733 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4737 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4739 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLod(texture< float2, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4744 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4755 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4746 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLod(texture< float4, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4762 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4759 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLod(texture< char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4760 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4782 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4771 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLod(texture< signed char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4772 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4790 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4779 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLod(texture< unsigned char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4785 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4798 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4787 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLod(texture< char1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4793 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4806 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4795 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLod(texture< uchar1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4801 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4814 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4803 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLod(texture< char2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4804 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4809 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4822 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4811 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLod(texture< uchar2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4812 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4817 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4830 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4819 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLod(texture< char4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4820 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4825 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4838 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4827 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLod(texture< uchar4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4828 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4833 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4846 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4841 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLod(texture< short, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4847 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4849 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLod(texture< unsigned short, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4850 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4855 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4857 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLod(texture< short1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4865 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLod(texture< ushort1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4866 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4884 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4873 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLod(texture< short2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4892 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4881 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLod(texture< ushort2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4900 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4889 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLod(texture< short4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4895 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4908 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLod(texture< ushort4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4903 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char tex1DLayeredLod(texture< char, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 4912 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 4920 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline signed char tex1DLayeredLod(texture< signed char, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 4923 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 4927 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4929 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char tex1DLayeredLod(texture< unsigned char, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 4930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 4934 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char1 tex1DLayeredLod(texture< char1, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 4937 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 4941 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 tex1DLayeredLod(texture< uchar1, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 4944 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 4948 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4959 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4950 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char2 tex1DLayeredLod(texture< char2, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 4951 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 4955 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4966 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 tex1DLayeredLod(texture< uchar2, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 4958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 4962 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4973 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4964 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex1DLayeredLod(texture< char4, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 4965 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 4969 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex1DLayeredLod(texture< uchar4, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 4972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 4976 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4987 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4984 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short tex1DLayeredLod(texture< short, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 4985 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 4989 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4991 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short tex1DLayeredLod(texture< unsigned short, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 4992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 4996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 4998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short1 tex1DLayeredLod(texture< short1, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 4999 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5003 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5014 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5005 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 tex1DLayeredLod(texture< ushort1, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5006 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5010 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5021 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5012 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short2 tex1DLayeredLod(texture< short2, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5013 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5028 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5019 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 tex1DLayeredLod(texture< ushort2, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5020 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5035 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5026 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex1DLayeredLod(texture< short4, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5027 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5042 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5033 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex1DLayeredLod(texture< ushort4, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5034 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5038 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5049 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5046 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int tex1DLayeredLod(texture< int, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5051 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned tex1DLayeredLod(texture< unsigned, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5060 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int1 tex1DLayeredLod(texture< int1, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5061 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5065 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5076 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5067 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 tex1DLayeredLod(texture< uint1, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5068 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5072 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5083 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5074 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int2 tex1DLayeredLod(texture< int2, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5075 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5079 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5090 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5081 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 tex1DLayeredLod(texture< uint2, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5082 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5097 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5088 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex1DLayeredLod(texture< int4, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5089 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5093 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5095 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex1DLayeredLod(texture< uint4, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5096 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long tex1DLayeredLod(texture< long, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long tex1DLayeredLod(texture< unsigned long, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long1 tex1DLayeredLod(texture< long1, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 tex1DLayeredLod(texture< ulong1, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long2 tex1DLayeredLod(texture< long2, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 tex1DLayeredLod(texture< ulong2, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long4 tex1DLayeredLod(texture< long4, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 tex1DLayeredLod(texture< ulong4, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayeredLod(texture< float, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLayeredLod(texture< float1, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLayeredLod(texture< float2, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLayeredLod(texture< float4, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayeredLod(texture< char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayeredLod(texture< signed char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayeredLod(texture< unsigned char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLayeredLod(texture< char1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLayeredLod(texture< uchar1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLayeredLod(texture< char2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5258 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLayeredLod(texture< uchar2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLayeredLod(texture< char4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLayeredLod(texture< uchar4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayeredLod(texture< short, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayeredLod(texture< unsigned short, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLayeredLod(texture< short1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLayeredLod(texture< ushort1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5322 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLayeredLod(texture< short2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLayeredLod(texture< ushort2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLayeredLod(texture< short4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLayeredLod(texture< ushort4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5352 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char tex2DLayeredLod(texture< char, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline signed char tex2DLayeredLod(texture< signed char, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char tex2DLayeredLod(texture< unsigned char, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char1 tex2DLayeredLod(texture< char1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 tex2DLayeredLod(texture< uchar1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char2 tex2DLayeredLod(texture< char2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5415 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 tex2DLayeredLod(texture< uchar2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex2DLayeredLod(texture< char4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5429 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex2DLayeredLod(texture< uchar4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short tex2DLayeredLod(texture< short, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short tex2DLayeredLod(texture< unsigned short, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5441 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5447 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short1 tex2DLayeredLod(texture< short1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5452 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5454 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 tex2DLayeredLod(texture< ushort1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5455 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5461 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short2 tex2DLayeredLod(texture< short2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5477 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5468 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 tex2DLayeredLod(texture< ushort2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5473 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5475 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex2DLayeredLod(texture< short4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5476 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5480 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5491 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex2DLayeredLod(texture< ushort4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5498 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5495 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int tex2DLayeredLod(texture< int, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5496 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5502 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned tex2DLayeredLod(texture< unsigned, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5503 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5509 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int1 tex2DLayeredLod(texture< int1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5525 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5516 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 tex2DLayeredLod(texture< uint1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5517 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5521 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5532 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5523 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int2 tex2DLayeredLod(texture< int2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5524 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5528 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5539 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5530 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 tex2DLayeredLod(texture< uint2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5535 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5546 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5537 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex2DLayeredLod(texture< int4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5553 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5544 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex2DLayeredLod(texture< uint4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5549 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5559 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long tex2DLayeredLod(texture< long, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5566 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long tex2DLayeredLod(texture< unsigned long, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5567 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5582 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5573 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long1 tex2DLayeredLod(texture< long1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5574 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5578 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5580 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 tex2DLayeredLod(texture< ulong1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5585 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5587 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long2 tex2DLayeredLod(texture< long2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5588 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5592 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5603 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5594 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 tex2DLayeredLod(texture< ulong2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5599 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long4 tex2DLayeredLod(texture< long4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5602 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5606 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5608 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 tex2DLayeredLod(texture< ulong4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5609 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayeredLod(texture< float, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5628 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5639 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLayeredLod(texture< float1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5635 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLayeredLod(texture< float2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5642 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLayeredLod(texture< float4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5649 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5657 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayeredLod(texture< char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5658 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5669 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayeredLod(texture< signed char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5675 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5677 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayeredLod(texture< unsigned char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLayeredLod(texture< char1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5691 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5693 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLayeredLod(texture< uchar1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5712 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLayeredLod(texture< char2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5707 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5720 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5709 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLayeredLod(texture< uchar2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5728 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5717 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLayeredLod(texture< char4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLayeredLod(texture< uchar4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5744 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5739 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayeredLod(texture< short, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayeredLod(texture< unsigned short, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5755 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLayeredLod(texture< short1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5761 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5774 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5763 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLayeredLod(texture< ushort1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5764 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5782 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5771 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLayeredLod(texture< short2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5772 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5790 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5779 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLayeredLod(texture< ushort2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5785 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5798 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5787 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLayeredLod(texture< short4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5793 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5806 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5795 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLayeredLod(texture< ushort4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5801 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5814 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5809 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char tex3DLod(texture< char, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5810 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5818 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5820 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline signed char tex3DLod(texture< signed char, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5821 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5825 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5836 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5827 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char tex3DLod(texture< unsigned char, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5828 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5832 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5843 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5834 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char1 tex3DLod(texture< char1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5835 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5839 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5850 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5841 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 tex3DLod(texture< uchar1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5846 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5857 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char2 tex3DLod(texture< char2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5849 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5864 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5855 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 tex3DLod(texture< uchar2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5862 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex3DLod(texture< char4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5878 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5869 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex3DLod(texture< uchar4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5870 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short tex3DLod(texture< short, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5889 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short tex3DLod(texture< unsigned short, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5894 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5905 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5896 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short1 tex3DLod(texture< short1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5901 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5912 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5903 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 tex3DLod(texture< ushort1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5904 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5908 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5919 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5910 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short2 tex3DLod(texture< short2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5915 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5926 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5917 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 tex3DLod(texture< ushort2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5918 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5933 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5924 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex3DLod(texture< short4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5925 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5929 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5940 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex3DLod(texture< ushort4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5947 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5944 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int tex3DLod(texture< int, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5949 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5960 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5951 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned tex3DLod(texture< unsigned, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5956 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5967 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int1 tex3DLod(texture< int1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5959 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5963 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5974 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5965 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 tex3DLod(texture< uint1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5966 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5981 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int2 tex3DLod(texture< int2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5973 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5977 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5988 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 tex3DLod(texture< uint2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5984 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5995 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5986 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex3DLod(texture< int4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5987 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5991 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6002 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 5993 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex3DLod(texture< uint4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5994 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6008 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long tex3DLod(texture< long, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6013 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6015 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long tex3DLod(texture< unsigned long, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6020 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6022 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long1 tex3DLod(texture< long1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6023 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6027 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6038 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6029 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 tex3DLod(texture< ulong1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6034 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6045 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6036 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long2 tex3DLod(texture< long2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6041 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6052 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 tex3DLod(texture< ulong2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6059 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6050 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long4 tex3DLod(texture< long4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6051 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6055 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6066 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6057 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 tex3DLod(texture< ulong4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6073 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6072 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3DLod(texture< float, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6073 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6077 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6088 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6079 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex3DLod(texture< float1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6080 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6084 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6095 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex3DLod(texture< float2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6087 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6091 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6093 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex3DLod(texture< float4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6094 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6098 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3DLod(texture< char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3DLod(texture< signed char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3DLod(texture< unsigned char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex3DLod(texture< char1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex3DLod(texture< uchar1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex3DLod(texture< char2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex3DLod(texture< uchar2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex3DLod(texture< char4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex3DLod(texture< uchar4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3DLod(texture< short, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3DLod(texture< unsigned short, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex3DLod(texture< short1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex3DLod(texture< ushort1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex3DLod(texture< short2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex3DLod(texture< ushort2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex3DLod(texture< short4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex3DLod(texture< ushort4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6258 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char texCubemapLod(texture< char, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline signed char texCubemapLod(texture< signed char, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char texCubemapLod(texture< unsigned char, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char1 texCubemapLod(texture< char1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 texCubemapLod(texture< uchar1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6297 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char2 texCubemapLod(texture< char2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 texCubemapLod(texture< uchar2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char4 texCubemapLod(texture< char4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6327 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 texCubemapLod(texture< uchar4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6319 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short texCubemapLod(texture< short, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short texCubemapLod(texture< unsigned short, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6345 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short1 texCubemapLod(texture< short1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6352 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 texCubemapLod(texture< ushort1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short2 texCubemapLod(texture< short2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 texCubemapLod(texture< ushort2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6382 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short4 texCubemapLod(texture< short4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 texCubemapLod(texture< ushort4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int texCubemapLod(texture< int, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned texCubemapLod(texture< unsigned, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int1 texCubemapLod(texture< int1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6423 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 texCubemapLod(texture< uint1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6415 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int2 texCubemapLod(texture< int2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6426 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6428 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 texCubemapLod(texture< uint2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6429 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6435 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int4 texCubemapLod(texture< int4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 texCubemapLod(texture< uint4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6447 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6457 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long texCubemapLod(texture< long, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6473 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6464 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long texCubemapLod(texture< unsigned long, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6465 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6480 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6471 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long1 texCubemapLod(texture< long1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6476 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6478 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 texCubemapLod(texture< ulong1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6485 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long2 texCubemapLod(texture< long2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6490 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6501 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6492 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 texCubemapLod(texture< ulong2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6497 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6508 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long4 texCubemapLod(texture< long4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6504 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6506 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 texCubemapLod(texture< ulong4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6522 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6521 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLod(texture< float, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6522 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6526 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6537 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6528 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemapLod(texture< float1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6533 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6544 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6535 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemapLod(texture< float2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemapLod(texture< float4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6543 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6547 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLod(texture< char, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6556 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6565 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6578 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6567 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLod(texture< signed char, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6573 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLod(texture< unsigned char, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6576 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6594 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemapLod(texture< char1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6602 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6591 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemapLod(texture< uchar1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6592 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6599 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemapLod(texture< char2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6607 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemapLod(texture< uchar2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6608 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6615 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemapLod(texture< char4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6621 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6634 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemapLod(texture< uchar4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6629 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6642 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLod(texture< short, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6643 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLod(texture< unsigned short, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6651 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemapLod(texture< short1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6659 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6672 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemapLod(texture< ushort1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6669 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemapLod(texture< short2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6675 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6677 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemapLod(texture< ushort2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemapLod(texture< short4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6691 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6693 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemapLod(texture< ushort4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6712 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6707 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char texCubemapLayeredLod(texture< char, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6708 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6716 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6727 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline signed char texCubemapLayeredLod(texture< signed char, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6734 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char texCubemapLayeredLod(texture< unsigned char, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6741 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6732 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char1 texCubemapLayeredLod(texture< char1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6733 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6737 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6739 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 texCubemapLayeredLod(texture< uchar1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6744 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6755 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6746 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char2 texCubemapLayeredLod(texture< char2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6762 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 texCubemapLayeredLod(texture< uchar2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6754 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6760 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char4 texCubemapLayeredLod(texture< char4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6761 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6765 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6776 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6767 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 texCubemapLayeredLod(texture< uchar4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6768 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6772 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6783 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short texCubemapLayeredLod(texture< short, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6781 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6785 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6787 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short texCubemapLayeredLod(texture< unsigned short, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6792 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6803 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6794 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short1 texCubemapLayeredLod(texture< short1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6795 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6799 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6810 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6801 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 texCubemapLayeredLod(texture< ushort1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6802 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6806 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6817 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6808 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short2 texCubemapLayeredLod(texture< short2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6809 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6813 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6824 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6815 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 texCubemapLayeredLod(texture< ushort2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6816 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6820 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6831 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6822 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short4 texCubemapLayeredLod(texture< short4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6823 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6827 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6838 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 texCubemapLayeredLod(texture< ushort4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6830 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6834 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6845 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int texCubemapLayeredLod(texture< int, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6843 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6847 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6849 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned texCubemapLayeredLod(texture< unsigned, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6850 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6854 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6865 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int1 texCubemapLayeredLod(texture< int1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6857 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6872 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 texCubemapLayeredLod(texture< uint1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6864 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6870 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int2 texCubemapLayeredLod(texture< int2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6875 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6877 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 texCubemapLayeredLod(texture< uint2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6878 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6884 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int4 texCubemapLayeredLod(texture< int4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6889 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6900 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6891 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 texCubemapLayeredLod(texture< uint4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6892 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6896 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6907 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long texCubemapLayeredLod(texture< long, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6907 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6913 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long texCubemapLayeredLod(texture< unsigned long, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6914 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6918 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6929 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6920 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long1 texCubemapLayeredLod(texture< long1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6921 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6925 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6927 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 texCubemapLayeredLod(texture< ulong1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6934 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long2 texCubemapLayeredLod(texture< long2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6935 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6939 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6950 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6941 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 texCubemapLayeredLod(texture< ulong2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6942 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6948 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long4 texCubemapLayeredLod(texture< long4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6949 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6953 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6964 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6955 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 texCubemapLayeredLod(texture< ulong4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6956 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6960 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLayeredLod(texture< float, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6975 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6986 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6977 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemapLayeredLod(texture< float1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6982 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6993 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6984 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemapLayeredLod(texture< float2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6985 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6989 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 6991 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemapLayeredLod(texture< float4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7004 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLayeredLod(texture< char, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7005 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7014 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7027 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLayeredLod(texture< signed char, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7022 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7035 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLayeredLod(texture< unsigned char, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7025 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemapLayeredLod(texture< char1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7033 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7038 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7051 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7040 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemapLayeredLod(texture< uchar1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7041 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7046 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7059 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemapLayeredLod(texture< char2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7049 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7067 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7056 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemapLayeredLod(texture< uchar2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7057 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7075 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7064 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemapLayeredLod(texture< char4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7065 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7070 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7083 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7072 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemapLayeredLod(texture< uchar4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7073 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7078 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7091 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLayeredLod(texture< short, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7087 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7092 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7094 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLayeredLod(texture< unsigned short, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7095 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemapLayeredLod(texture< short1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemapLayeredLod(texture< ushort1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemapLayeredLod(texture< short2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemapLayeredLod(texture< ushort2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemapLayeredLod(texture< short4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemapLayeredLod(texture< ushort4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char tex1DGrad(texture< char, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline signed char tex1DGrad(texture< signed char, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char tex1DGrad(texture< unsigned char, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char1 tex1DGrad(texture< char1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7187 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 tex1DGrad(texture< uchar1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char2 tex1DGrad(texture< char2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 tex1DGrad(texture< uchar2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex1DGrad(texture< char4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex1DGrad(texture< uchar4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short tex1DGrad(texture< short, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short tex1DGrad(texture< unsigned short, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short1 tex1DGrad(texture< short1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 tex1DGrad(texture< ushort1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7258 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short2 tex1DGrad(texture< short2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 tex1DGrad(texture< ushort2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex1DGrad(texture< short4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex1DGrad(texture< ushort4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int tex1DGrad(texture< int, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7297 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned tex1DGrad(texture< unsigned, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int1 tex1DGrad(texture< int1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7322 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 tex1DGrad(texture< uint1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int2 tex1DGrad(texture< int2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7327 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 tex1DGrad(texture< uint2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex1DGrad(texture< int4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex1DGrad(texture< uint4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long tex1DGrad(texture< long, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long tex1DGrad(texture< unsigned long, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long1 tex1DGrad(texture< long1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 tex1DGrad(texture< ulong1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long2 tex1DGrad(texture< long2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 tex1DGrad(texture< ulong2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long4 tex1DGrad(texture< long4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 tex1DGrad(texture< ulong4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7426 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DGrad(texture< float, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7431 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DGrad(texture< float1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DGrad(texture< float2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7441 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7447 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DGrad(texture< float4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7452 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DGrad(texture< char, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7461 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DGrad(texture< signed char, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7473 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7478 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7491 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7480 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DGrad(texture< unsigned char, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DGrad(texture< char1, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7496 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DGrad(texture< uchar1, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7497 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7502 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7504 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DGrad(texture< char2, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7505 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7523 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7512 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DGrad(texture< uchar2, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7520 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DGrad(texture< char4, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7521 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7526 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7539 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7528 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DGrad(texture< uchar4, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7534 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7547 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DGrad(texture< short, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7543 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7548 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7561 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7550 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DGrad(texture< unsigned short, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7556 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7569 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DGrad(texture< short1, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7559 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7577 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7566 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DGrad(texture< ushort1, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7567 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7585 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7574 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DGrad(texture< short2, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7580 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7593 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7582 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DGrad(texture< ushort2, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7588 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7590 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DGrad(texture< short4, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7591 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7609 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DGrad(texture< ushort4, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7599 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7612 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char tex2DGrad(texture< char, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7621 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline signed char tex2DGrad(texture< signed char, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7628 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7639 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char tex2DGrad(texture< unsigned char, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7635 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char1 tex2DGrad(texture< char1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7642 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 tex2DGrad(texture< uchar1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7649 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7651 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char2 tex2DGrad(texture< char2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7652 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7658 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 tex2DGrad(texture< uchar2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7659 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7663 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7665 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex2DGrad(texture< char4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7672 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex2DGrad(texture< uchar4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7673 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7677 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short tex2DGrad(texture< short, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7690 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short tex2DGrad(texture< unsigned short, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7693 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7697 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7708 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short1 tex2DGrad(texture< short1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7700 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 tex2DGrad(texture< ushort1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7707 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short2 tex2DGrad(texture< short2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7714 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7729 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7720 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 tex2DGrad(texture< ushort2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7721 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7727 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex2DGrad(texture< short4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7728 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7732 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7743 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7734 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex2DGrad(texture< ushort4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7739 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int tex2DGrad(texture< int, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7752 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7763 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7754 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned tex2DGrad(texture< unsigned, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7755 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7759 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7770 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7761 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int1 tex2DGrad(texture< int1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7762 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7768 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 tex2DGrad(texture< uint1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7773 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7784 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7775 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int2 tex2DGrad(texture< int2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7776 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7791 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7782 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 tex2DGrad(texture< uint2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7783 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7787 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7798 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7789 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex2DGrad(texture< int4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7790 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7794 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7805 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex2DGrad(texture< uint4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7797 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7801 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7812 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7811 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long tex2DGrad(texture< long, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7812 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7816 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7827 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7818 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long tex2DGrad(texture< unsigned long, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7819 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7823 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7834 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7825 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long1 tex2DGrad(texture< long1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7826 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7830 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7841 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7832 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 tex2DGrad(texture< ulong1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7833 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7837 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7839 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long2 tex2DGrad(texture< long2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7840 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7844 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7855 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7846 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 tex2DGrad(texture< ulong2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7847 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7851 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7862 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long4 tex2DGrad(texture< long4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7854 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7869 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 tex2DGrad(texture< ulong4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7865 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7875 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DGrad(texture< float, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7880 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7891 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DGrad(texture< float1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7889 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DGrad(texture< float2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7894 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7905 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7896 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DGrad(texture< float4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7901 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7912 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7909 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DGrad(texture< char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7910 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7919 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7921 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DGrad(texture< signed char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7927 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7940 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7929 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DGrad(texture< unsigned char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7935 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7948 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7937 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DGrad(texture< char1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7956 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DGrad(texture< uchar1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7951 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7964 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7953 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DGrad(texture< char2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7954 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7959 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7961 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DGrad(texture< uchar2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7962 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7967 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7969 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DGrad(texture< char4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7975 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7988 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7977 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DGrad(texture< uchar4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7983 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7991 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DGrad(texture< short, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7997 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8010 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 7999 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DGrad(texture< unsigned short, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 8000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 8005 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8018 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DGrad(texture< short1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 8008 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 8013 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8026 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8015 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DGrad(texture< ushort1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 8016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 8021 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8034 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8023 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DGrad(texture< short2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 8024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 8029 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8042 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DGrad(texture< ushort2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 8032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 8037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8050 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8039 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DGrad(texture< short4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 8040 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 8045 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DGrad(texture< ushort4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 8048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 8053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8066 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8061 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char tex1DLayeredGrad(texture< char, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8070 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8081 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8072 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline signed char tex1DLayeredGrad(texture< signed char, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8073 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8077 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8088 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8079 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char tex1DLayeredGrad(texture< unsigned char, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8080 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8084 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8095 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char1 tex1DLayeredGrad(texture< char1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8087 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8091 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8093 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 tex1DLayeredGrad(texture< uchar1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8094 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8098 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char2 tex1DLayeredGrad(texture< char2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 tex1DLayeredGrad(texture< uchar2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex1DLayeredGrad(texture< char4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex1DLayeredGrad(texture< uchar4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short tex1DLayeredGrad(texture< short, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short tex1DLayeredGrad(texture< unsigned short, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short1 tex1DLayeredGrad(texture< short1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 tex1DLayeredGrad(texture< ushort1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short2 tex1DLayeredGrad(texture< short2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 tex1DLayeredGrad(texture< ushort2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex1DLayeredGrad(texture< short4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex1DLayeredGrad(texture< ushort4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int tex1DLayeredGrad(texture< int, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned tex1DLayeredGrad(texture< unsigned, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int1 tex1DLayeredGrad(texture< int1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 tex1DLayeredGrad(texture< uint1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int2 tex1DLayeredGrad(texture< int2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 tex1DLayeredGrad(texture< uint2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex1DLayeredGrad(texture< int4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex1DLayeredGrad(texture< uint4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long tex1DLayeredGrad(texture< long, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long tex1DLayeredGrad(texture< unsigned long, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long1 tex1DLayeredGrad(texture< long1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 tex1DLayeredGrad(texture< ulong1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8297 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long2 tex1DLayeredGrad(texture< long2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 tex1DLayeredGrad(texture< ulong2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long4 tex1DLayeredGrad(texture< long4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 tex1DLayeredGrad(texture< ulong4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayeredGrad(texture< float, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLayeredGrad(texture< float1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLayeredGrad(texture< float2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8345 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLayeredGrad(texture< float4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayeredGrad(texture< char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayeredGrad(texture< signed char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayeredGrad(texture< unsigned char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLayeredGrad(texture< char1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLayeredGrad(texture< uchar1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLayeredGrad(texture< char2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLayeredGrad(texture< uchar2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8429 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLayeredGrad(texture< char4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8426 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLayeredGrad(texture< uchar4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayeredGrad(texture< short, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8441 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8446 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayeredGrad(texture< unsigned short, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8454 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLayeredGrad(texture< short1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8457 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8475 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8464 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLayeredGrad(texture< ushort1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8465 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLayeredGrad(texture< short2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8473 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8478 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8491 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8480 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLayeredGrad(texture< ushort2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLayeredGrad(texture< short4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8496 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLayeredGrad(texture< ushort4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8497 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8502 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char tex2DLayeredGrad(texture< char, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8519 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8530 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8521 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline signed char tex2DLayeredGrad(texture< signed char, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8522 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8526 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8537 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8528 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char tex2DLayeredGrad(texture< unsigned char, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8533 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8544 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8535 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char1 tex2DLayeredGrad(texture< char1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 tex2DLayeredGrad(texture< uchar1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8543 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8547 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8549 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char2 tex2DLayeredGrad(texture< char2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8550 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8565 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8556 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 tex2DLayeredGrad(texture< uchar2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8561 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8563 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex2DLayeredGrad(texture< char4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8579 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8570 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex2DLayeredGrad(texture< uchar4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short tex2DLayeredGrad(texture< short, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8588 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8599 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8590 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short tex2DLayeredGrad(texture< unsigned short, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8591 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8606 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short1 tex2DLayeredGrad(texture< short1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8602 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 tex2DLayeredGrad(texture< ushort1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8609 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8620 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short2 tex2DLayeredGrad(texture< short2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8612 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8627 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 tex2DLayeredGrad(texture< ushort2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8634 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex2DLayeredGrad(texture< short4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8641 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex2DLayeredGrad(texture< ushort4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8648 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int tex2DLayeredGrad(texture< int, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8650 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8652 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned tex2DLayeredGrad(texture< unsigned, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8657 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8659 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int1 tex2DLayeredGrad(texture< int1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8675 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 tex2DLayeredGrad(texture< uint1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8671 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8682 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8673 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int2 tex2DLayeredGrad(texture< int2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8689 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 tex2DLayeredGrad(texture< uint2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8687 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex2DLayeredGrad(texture< int4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8703 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex2DLayeredGrad(texture< uint4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8695 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8709 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long tex2DLayeredGrad(texture< long, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8714 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8716 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long tex2DLayeredGrad(texture< unsigned long, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8717 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8721 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8732 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long1 tex2DLayeredGrad(texture< long1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8724 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8728 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8739 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 tex2DLayeredGrad(texture< ulong1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8746 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8737 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long2 tex2DLayeredGrad(texture< long2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8738 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8742 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8744 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 tex2DLayeredGrad(texture< ulong2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8749 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8760 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long4 tex2DLayeredGrad(texture< long4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8752 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8767 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 tex2DLayeredGrad(texture< ulong4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8759 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8763 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8774 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8773 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayeredGrad(texture< float, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8774 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8778 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8789 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLayeredGrad(texture< float1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8781 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8785 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8787 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLayeredGrad(texture< float2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8792 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8803 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8794 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLayeredGrad(texture< float4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8795 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8799 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8810 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8807 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayeredGrad(texture< char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8808 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8817 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8830 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8819 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayeredGrad(texture< signed char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8820 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8825 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8838 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8827 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayeredGrad(texture< unsigned char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8828 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8833 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8846 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8835 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLayeredGrad(texture< char1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8836 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8841 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8854 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8843 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLayeredGrad(texture< uchar1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8844 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8849 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8862 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8851 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLayeredGrad(texture< char2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8852 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8857 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8870 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8859 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLayeredGrad(texture< uchar2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8865 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8878 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLayeredGrad(texture< char4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8873 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8875 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLayeredGrad(texture< uchar4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8881 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8894 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8889 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayeredGrad(texture< short, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8895 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8908 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayeredGrad(texture< unsigned short, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8903 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8905 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLayeredGrad(texture< short1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8924 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8913 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLayeredGrad(texture< ushort1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8914 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8919 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8921 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLayeredGrad(texture< short2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8927 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8940 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8929 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLayeredGrad(texture< ushort2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8935 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8948 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8937 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLayeredGrad(texture< short4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8956 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLayeredGrad(texture< ushort4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8951 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8964 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8959 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char tex3DGrad(texture< char, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 8960 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 8968 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline signed char tex3DGrad(texture< signed char, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 8971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 8975 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8986 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8977 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char tex3DGrad(texture< unsigned char, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 8978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 8982 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8993 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8984 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char1 tex3DGrad(texture< char1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 8985 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 8989 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8991 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 tex3DGrad(texture< uchar1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 8992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 8996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 8998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char2 tex3DGrad(texture< char2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 8999 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9003 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9014 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 9005 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 tex3DGrad(texture< uchar2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9006 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9010 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9021 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 9012 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex3DGrad(texture< char4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9013 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9028 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 9019 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex3DGrad(texture< uchar4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9020 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9035 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 9032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short tex3DGrad(texture< short, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9033 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 9039 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short tex3DGrad(texture< unsigned short, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9040 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9055 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 9046 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short1 tex3DGrad(texture< short1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9051 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 9053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 tex3DGrad(texture< ushort1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 9060 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short2 tex3DGrad(texture< short2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9061 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9065 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9076 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 9067 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 tex3DGrad(texture< ushort2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9068 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9072 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9083 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 9074 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex3DGrad(texture< short4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9075 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9079 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9090 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 9081 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex3DGrad(texture< ushort4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9082 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9097 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 9094 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int tex3DGrad(texture< int, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9095 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9099 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 9101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned tex3DGrad(texture< unsigned, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 9108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int1 tex3DGrad(texture< int1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 9115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 tex3DGrad(texture< uint1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 9122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int2 tex3DGrad(texture< int2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 9129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 tex3DGrad(texture< uint2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 9136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex3DGrad(texture< int4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 9143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex3DGrad(texture< uint4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 9158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long tex3DGrad(texture< long, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 9165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long tex3DGrad(texture< unsigned long, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 9172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long1 tex3DGrad(texture< long1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 9179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 tex3DGrad(texture< ulong1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 9186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long2 tex3DGrad(texture< long2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9187 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 9193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 tex3DGrad(texture< ulong2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 9200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline long4 tex3DGrad(texture< long4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 9207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 tex3DGrad(texture< ulong4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 9222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3DGrad(texture< float, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 9229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex3DGrad(texture< float1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 9236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex3DGrad(texture< float2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 9243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex3DGrad(texture< float4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 9256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3DGrad(texture< char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 9279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 9268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3DGrad(texture< signed char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 9287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 9276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3DGrad(texture< unsigned char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 9295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 9284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex3DGrad(texture< char1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 9303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 9292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex3DGrad(texture< uchar1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 9311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 9300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex3DGrad(texture< char2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 9319 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 9308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex3DGrad(texture< uchar2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 9327 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 9316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex3DGrad(texture< char4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9322 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 9335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 9324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex3DGrad(texture< uchar4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 9343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 9338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3DGrad(texture< short, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 9357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 9346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3DGrad(texture< unsigned short, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9352 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 9365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 9354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex3DGrad(texture< short1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 9373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 9362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex3DGrad(texture< ushort1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 9381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 9370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex3DGrad(texture< short2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 9389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 9378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex3DGrad(texture< ushort2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 9397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 9386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex3DGrad(texture< short4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 9405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 9394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex3DGrad(texture< ushort4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 9413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_fetch_functions.hpp"
#line 70 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_v4f32_s32(cudaTextureObject_t, int, float *, float *, float *, float *); } 
#line 71 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_v4f32_f32(cudaTextureObject_t, float, float *, float *, float *, float *); } 
#line 72 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_level_v4f32_f32(cudaTextureObject_t, float, float, float *, float *, float *, float *); } 
#line 73 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_grad_v4f32_f32(cudaTextureObject_t, float, float, float, float *, float *, float *, float *); } 
#line 74 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_v4s32_s32(cudaTextureObject_t, int, int *, int *, int *, int *); } 
#line 75 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_v4s32_f32(cudaTextureObject_t, float, int *, int *, int *, int *); } 
#line 76 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_level_v4s32_f32(cudaTextureObject_t, float, float, int *, int *, int *, int *); } 
#line 77 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_grad_v4s32_f32(cudaTextureObject_t, float, float, float, int *, int *, int *, int *); } 
#line 78 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_v4u32_s32(cudaTextureObject_t, int, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 79 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_v4u32_f32(cudaTextureObject_t, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 80 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_level_v4u32_f32(cudaTextureObject_t, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 81 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_grad_v4u32_f32(cudaTextureObject_t, float, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 83 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_array_v4f32_s32(cudaTextureObject_t, int, int, float *, float *, float *, float *); } 
#line 84 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_array_v4f32_f32(cudaTextureObject_t, int, float, float *, float *, float *, float *); } 
#line 85 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_array_level_v4f32_f32(cudaTextureObject_t, int, float, float, float *, float *, float *, float *); } 
#line 86 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_array_grad_v4f32_f32(cudaTextureObject_t, int, float, float, float, float *, float *, float *, float *); } 
#line 87 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_array_v4s32_s32(cudaTextureObject_t, int, int, int *, int *, int *, int *); } 
#line 88 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_array_v4s32_f32(cudaTextureObject_t, int, float, int *, int *, int *, int *); } 
#line 89 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_array_level_v4s32_f32(cudaTextureObject_t, int, float, float, int *, int *, int *, int *); } 
#line 90 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_array_grad_v4s32_f32(cudaTextureObject_t, int, float, float, float, int *, int *, int *, int *); } 
#line 91 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_array_v4u32_s32(cudaTextureObject_t, int, int, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 92 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_array_v4u32_f32(cudaTextureObject_t, int, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 93 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_array_level_v4u32_f32(cudaTextureObject_t, int, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 94 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_array_grad_v4u32_f32(cudaTextureObject_t, int, float, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 96 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_v4f32_s32(cudaTextureObject_t, int, int, float *, float *, float *, float *); } 
#line 97 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_v4f32_f32(cudaTextureObject_t, float, float, float *, float *, float *, float *); } 
#line 98 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_level_v4f32_f32(cudaTextureObject_t, float, float, float, float *, float *, float *, float *); } 
#line 99 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_grad_v4f32_f32(cudaTextureObject_t, float, float, float, float, float, float, float *, float *, float *, float *); } 
#line 100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_v4s32_s32(cudaTextureObject_t, int, int, int *, int *, int *, int *); } 
#line 101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_v4s32_f32(cudaTextureObject_t, float, float, int *, int *, int *, int *); } 
#line 102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_level_v4s32_f32(cudaTextureObject_t, float, float, float, int *, int *, int *, int *); } 
#line 103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_grad_v4s32_f32(cudaTextureObject_t, float, float, float, float, float, float, int *, int *, int *, int *); } 
#line 104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_v4u32_s32(cudaTextureObject_t, int, int, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_v4u32_f32(cudaTextureObject_t, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_level_v4u32_f32(cudaTextureObject_t, float, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_grad_v4u32_f32(cudaTextureObject_t, float, float, float, float, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_array_v4f32_s32(cudaTextureObject_t, int, int, int, float *, float *, float *, float *); } 
#line 110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_array_v4f32_f32(cudaTextureObject_t, int, float, float, float *, float *, float *, float *); } 
#line 111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_array_level_v4f32_f32(cudaTextureObject_t, int, float, float, float, float *, float *, float *, float *); } 
#line 112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_array_grad_v4f32_f32(cudaTextureObject_t, int, float, float, float, float, float, float, float *, float *, float *, float *); } 
#line 113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_array_v4s32_s32(cudaTextureObject_t, int, int, int, int *, int *, int *, int *); } 
#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_array_v4s32_f32(cudaTextureObject_t, int, float, float, int *, int *, int *, int *); } 
#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_array_level_v4s32_f32(cudaTextureObject_t, int, float, float, float, int *, int *, int *, int *); } 
#line 116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_array_grad_v4s32_f32(cudaTextureObject_t, int, float, float, float, float, float, float, int *, int *, int *, int *); } 
#line 117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_array_v4u32_s32(cudaTextureObject_t, int, int, int, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_array_v4u32_f32(cudaTextureObject_t, int, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_array_level_v4u32_f32(cudaTextureObject_t, int, float, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_array_grad_v4u32_f32(cudaTextureObject_t, int, float, float, float, float, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_3d_v4f32_s32(cudaTextureObject_t, int, int, int, float *, float *, float *, float *); } 
#line 123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_3d_v4f32_f32(cudaTextureObject_t, float, float, float, float *, float *, float *, float *); } 
#line 124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_3d_level_v4f32_f32(cudaTextureObject_t, float, float, float, float, float *, float *, float *, float *); } 
#line 125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_3d_grad_v4f32_f32(cudaTextureObject_t, float, float, float, float, float, float, float, float, float, float *, float *, float *, float *); } 
#line 126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_3d_v4s32_s32(cudaTextureObject_t, int, int, int, int *, int *, int *, int *); } 
#line 127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_3d_v4s32_f32(cudaTextureObject_t, float, float, float, int *, int *, int *, int *); } 
#line 128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_3d_level_v4s32_f32(cudaTextureObject_t, float, float, float, float, int *, int *, int *, int *); } 
#line 129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_3d_grad_v4s32_f32(cudaTextureObject_t, float, float, float, float, float, float, float, float, float, int *, int *, int *, int *); } 
#line 130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_3d_v4u32_s32(cudaTextureObject_t, int, int, int, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_3d_v4u32_f32(cudaTextureObject_t, float, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_3d_level_v4u32_f32(cudaTextureObject_t, float, float, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_3d_grad_v4u32_f32(cudaTextureObject_t, float, float, float, float, float, float, float, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_cube_v4f32_f32(cudaTextureObject_t, float, float, float, float *, float *, float *, float *); } 
#line 136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_cube_level_v4f32_f32(cudaTextureObject_t, float, float, float, float, float *, float *, float *, float *); } 
#line 137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_cube_v4s32_f32(cudaTextureObject_t, float, float, float, int *, int *, int *, int *); } 
#line 138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_cube_level_v4s32_f32(cudaTextureObject_t, float, float, float, float, int *, int *, int *, int *); } 
#line 139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_cube_v4u32_f32(cudaTextureObject_t, float, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_cube_level_v4u32_f32(cudaTextureObject_t, float, float, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_cube_array_v4f32_f32(cudaTextureObject_t, int, float, float, float, float *, float *, float *, float *); } 
#line 143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_cube_array_level_v4f32_f32(cudaTextureObject_t, int, float, float, float, float, float *, float *, float *, float *); } 
#line 144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_cube_array_v4s32_f32(cudaTextureObject_t, int, float, float, float, int *, int *, int *, int *); } 
#line 145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_cube_array_level_v4s32_f32(cudaTextureObject_t, int, float, float, float, float, int *, int *, int *, int *); } 
#line 146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_cube_array_v4u32_f32(cudaTextureObject_t, int, float, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tex_cube_array_level_v4u32_f32(cudaTextureObject_t, int, float, float, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tld4_r_2d_v4f32_f32(cudaTextureObject_t, float, float, float *, float *, float *, float *); } 
#line 150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tld4_g_2d_v4f32_f32(cudaTextureObject_t, float, float, float *, float *, float *, float *); } 
#line 151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tld4_b_2d_v4f32_f32(cudaTextureObject_t, float, float, float *, float *, float *, float *); } 
#line 152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tld4_a_2d_v4f32_f32(cudaTextureObject_t, float, float, float *, float *, float *, float *); } 
#line 153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tld4_r_2d_v4s32_f32(cudaTextureObject_t, float, float, int *, int *, int *, int *); } 
#line 154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tld4_g_2d_v4s32_f32(cudaTextureObject_t, float, float, int *, int *, int *, int *); } 
#line 155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tld4_b_2d_v4s32_f32(cudaTextureObject_t, float, float, int *, int *, int *, int *); } 
#line 156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tld4_a_2d_v4s32_f32(cudaTextureObject_t, float, float, int *, int *, int *, int *); } 
#line 157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tld4_r_2d_v4u32_f32(cudaTextureObject_t, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tld4_g_2d_v4u32_f32(cudaTextureObject_t, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tld4_b_2d_v4u32_f32(cudaTextureObject_t, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
extern "C" { void __tld4_a_2d_v4u32_f32(cudaTextureObject_t, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(char * retVal, cudaTextureObject_t texObject, int x); 
#line 170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(signed char * retVal, cudaTextureObject_t texObject, int x); 
#line 172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(char1 * retVal, cudaTextureObject_t texObject, int x); 
#line 174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(char2 * retVal, cudaTextureObject_t texObject, int x); 
#line 176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(char4 * retVal, cudaTextureObject_t texObject, int x); 
#line 178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(unsigned char * retVal, cudaTextureObject_t texObject, int x); 
#line 180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(uchar1 * retVal, cudaTextureObject_t texObject, int x); 
#line 182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(uchar2 * retVal, cudaTextureObject_t texObject, int x); 
#line 184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(uchar4 * retVal, cudaTextureObject_t texObject, int x); 
#line 192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(short * retVal, cudaTextureObject_t texObject, int x); 
#line 194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(short1 * retVal, cudaTextureObject_t texObject, int x); 
#line 196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(short2 * retVal, cudaTextureObject_t texObject, int x); 
#line 198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(short4 * retVal, cudaTextureObject_t texObject, int x); 
#line 200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(unsigned short * retVal, cudaTextureObject_t texObject, int x); 
#line 202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(ushort1 * retVal, cudaTextureObject_t texObject, int x); 
#line 204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(ushort2 * retVal, cudaTextureObject_t texObject, int x); 
#line 206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(ushort4 * retVal, cudaTextureObject_t texObject, int x); 
#line 214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(int * retVal, cudaTextureObject_t texObject, int x); 
#line 216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(int1 * retVal, cudaTextureObject_t texObject, int x); 
#line 218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(int2 * retVal, cudaTextureObject_t texObject, int x); 
#line 220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(int4 * retVal, cudaTextureObject_t texObject, int x); 
#line 222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(unsigned * retVal, cudaTextureObject_t texObject, int x); 
#line 224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(uint1 * retVal, cudaTextureObject_t texObject, int x); 
#line 226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(uint2 * retVal, cudaTextureObject_t texObject, int x); 
#line 228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(uint4 * retVal, cudaTextureObject_t texObject, int x); 
#line 238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(long * retVal, cudaTextureObject_t texObject, int x); 
#line 240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(long1 * retVal, cudaTextureObject_t texObject, int x); 
#line 242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(long2 * retVal, cudaTextureObject_t texObject, int x); 
#line 244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(long4 * retVal, cudaTextureObject_t texObject, int x); 
#line 246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(unsigned long * retVal, cudaTextureObject_t texObject, int x); 
#line 248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(ulong1 * retVal, cudaTextureObject_t texObject, int x); 
#line 250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(ulong2 * retVal, cudaTextureObject_t texObject, int x); 
#line 252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(ulong4 * retVal, cudaTextureObject_t texObject, int x); 
#line 263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(float * retVal, cudaTextureObject_t texObject, int x); 
#line 265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(float1 * retVal, cudaTextureObject_t texObject, int x); 
#line 267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(float2 * retVal, cudaTextureObject_t texObject, int x); 
#line 269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(float4 * retVal, cudaTextureObject_t texObject, int x); 
#line 277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
tex1Dfetch(::cudaTextureObject_t texObject, int x) 
#line 279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;
#line 283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
::exit(___);}











#line 296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
#line 291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(char * retVal, cudaTextureObject_t texObject, float x); 
#line 292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(signed char * retVal, cudaTextureObject_t texObject, float x); 
#line 294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(char1 * retVal, cudaTextureObject_t texObject, float x); 
#line 296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(char2 * retVal, cudaTextureObject_t texObject, float x); 
#line 298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(char4 * retVal, cudaTextureObject_t texObject, float x); 
#line 300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(unsigned char * retVal, cudaTextureObject_t texObject, float x); 
#line 302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(uchar1 * retVal, cudaTextureObject_t texObject, float x); 
#line 304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(uchar2 * retVal, cudaTextureObject_t texObject, float x); 
#line 306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(uchar4 * retVal, cudaTextureObject_t texObject, float x); 
#line 314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(short * retVal, cudaTextureObject_t texObject, float x); 
#line 316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(short1 * retVal, cudaTextureObject_t texObject, float x); 
#line 318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(short2 * retVal, cudaTextureObject_t texObject, float x); 
#line 320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(short4 * retVal, cudaTextureObject_t texObject, float x); 
#line 322 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(unsigned short * retVal, cudaTextureObject_t texObject, float x); 
#line 324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(ushort1 * retVal, cudaTextureObject_t texObject, float x); 
#line 326 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(ushort2 * retVal, cudaTextureObject_t texObject, float x); 
#line 328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(ushort4 * retVal, cudaTextureObject_t texObject, float x); 
#line 336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(int * retVal, cudaTextureObject_t texObject, float x); 
#line 338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(int1 * retVal, cudaTextureObject_t texObject, float x); 
#line 340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(int2 * retVal, cudaTextureObject_t texObject, float x); 
#line 342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(int4 * retVal, cudaTextureObject_t texObject, float x); 
#line 344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(unsigned * retVal, cudaTextureObject_t texObject, float x); 
#line 346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(uint1 * retVal, cudaTextureObject_t texObject, float x); 
#line 348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(uint2 * retVal, cudaTextureObject_t texObject, float x); 
#line 350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(uint4 * retVal, cudaTextureObject_t texObject, float x); 
#line 360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(long * retVal, cudaTextureObject_t texObject, float x); 
#line 362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(long1 * retVal, cudaTextureObject_t texObject, float x); 
#line 364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(long2 * retVal, cudaTextureObject_t texObject, float x); 
#line 366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(long4 * retVal, cudaTextureObject_t texObject, float x); 
#line 368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(unsigned long * retVal, cudaTextureObject_t texObject, float x); 
#line 370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(ulong1 * retVal, cudaTextureObject_t texObject, float x); 
#line 372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(ulong2 * retVal, cudaTextureObject_t texObject, float x); 
#line 374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(ulong4 * retVal, cudaTextureObject_t texObject, float x); 
#line 385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(float * retVal, cudaTextureObject_t texObject, float x); 
#line 387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(float1 * retVal, cudaTextureObject_t texObject, float x); 
#line 389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(float2 * retVal, cudaTextureObject_t texObject, float x); 
#line 391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(float4 * retVal, cudaTextureObject_t texObject, float x); 
#line 399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
tex1D(::cudaTextureObject_t texObject, float x) 
#line 401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;
#line 405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
::exit(___);}











#line 418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
#line 413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(char * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(signed char * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(char1 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(char2 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(char4 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 426 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 428 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(short * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(short1 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(short2 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(short4 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 446 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 450 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(int * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(int1 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(int2 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 464 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(int4 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(unsigned * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 468 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(uint1 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(uint2 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(uint4 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(long * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(long1 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(long2 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(long4 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 490 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(unsigned long * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 492 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(ulong1 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(ulong2 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 496 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(ulong4 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(float * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 509 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(float1 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(float2 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(float4 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 521 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 522 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
tex2D(::cudaTextureObject_t texObject, float x, float y) 
#line 523 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;
#line 527 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
::exit(___);}











#line 540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
#line 535 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(char * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(signed char * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(char1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(char2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(char4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 544 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 546 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 548 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 550 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(short * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(short1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 562 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(short2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(short4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 566 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 570 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 580 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(int * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 582 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(int1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(int2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(int4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 588 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(unsigned * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 590 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(uint1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 592 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(uint2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 594 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(uint4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(long * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 606 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(long1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 608 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(long2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(long4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 612 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(unsigned long * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 614 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(ulong1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(ulong2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(ulong4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 629 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(float * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(float1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(float2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 635 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(float4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 643 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
tex3D(::cudaTextureObject_t texObject, float x, float y, float z) 
#line 645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;
#line 649 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
::exit(___);}











#line 662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
#line 657 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(char * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 658 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(signed char * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(char1 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(char2 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(char4 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(unsigned char * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(uchar1 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(uchar2 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 672 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(uchar4 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(short * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 682 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(short1 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 684 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(short2 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(short4 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(unsigned short * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 690 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(ushort1 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(ushort2 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(ushort4 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(int * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(int1 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(int2 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 708 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(int4 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(unsigned * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 712 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(uint1 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 714 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(uint2 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 716 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(uint4 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(long * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 728 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(long1 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(long2 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 732 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(long4 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 734 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(unsigned long * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(ulong1 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 738 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(ulong2 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(ulong4 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(float * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(float1 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 755 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(float2 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 757 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(float4 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 765 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
tex1DLayered(::cudaTextureObject_t texObject, float x, int layer) 
#line 767 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)layer;
#line 771 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
::exit(___);}











#line 784 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
#line 779 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(char * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(signed char * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 782 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(char1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 784 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(char2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 786 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(char4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 790 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 792 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 794 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 802 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(short * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 804 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(short1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 806 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(short2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 808 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(short4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 810 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 812 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 814 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 816 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 824 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(int * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 826 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(int1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 828 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(int2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 830 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(int4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 832 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(unsigned * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 834 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(uint1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 836 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(uint2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 838 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(uint4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(long * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 850 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(long1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 852 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(long2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 854 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(long4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(unsigned long * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(ulong1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(ulong2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 862 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(ulong4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 873 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(float * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 875 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(float1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 877 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(float2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(float4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
tex2DLayered(::cudaTextureObject_t texObject, float x, float y, int layer) 
#line 889 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)layer;
#line 893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
::exit(___);}











#line 906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
#line 901 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(char * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 902 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(signed char * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 904 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(char1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(char2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 908 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(char4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 910 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 912 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 914 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 924 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(short * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 926 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(short1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(short2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(short4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 934 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(int * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 948 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(int1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 950 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(int2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(int4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 954 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(unsigned * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 956 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(uint1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(uint2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 960 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(uint4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(long * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(long1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 974 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(long2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 976 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(long4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(unsigned long * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(ulong1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 982 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(ulong2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 984 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(ulong4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 995 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(float * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 997 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(float1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 999 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(float2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 1001 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(float4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 1009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 1010 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
texCubemap(::cudaTextureObject_t texObject, float x, float y, float z) 
#line 1011 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;
#line 1015 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
::exit(___);}











#line 1028 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
#line 1023 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(char * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(signed char * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1026 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(char1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1028 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(char2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(char4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1034 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1036 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1038 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1046 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(short * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(short1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1050 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(short2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1052 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(short4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1056 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1060 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1068 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(int * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1070 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(int1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1072 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(int2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1074 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(int4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1076 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(unsigned * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1078 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(uint1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1080 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(uint2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1082 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(uint4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1092 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(long * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1094 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(long1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1096 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(long2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1098 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(long4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(unsigned long * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(ulong1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(ulong2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(ulong4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(float * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(float1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(float2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(float4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 1132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
texCubemapLayered(::cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 1133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 1137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
::exit(___);}











#line 1150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
#line 1145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(char * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(signed char * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(char1 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(char2 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(char4 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(short * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(short1 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(short2 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(short4 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(int * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(int1 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(int2 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(int4 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(unsigned * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(uint1 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(uint2 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(uint4 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(long * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(long1 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(long2 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(long4 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(unsigned long * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(ulong1 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(ulong2 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(ulong4 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(float * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(float1 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(float2 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(float4 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 1250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
tex2Dgather(::cudaTextureObject_t to, float x, float y, int comp = 0) 
#line 1251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)to;(void)x;(void)y;(void)comp;
#line 1255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
::exit(___);}











#line 1268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
#line 1263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(char * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(signed char * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(char1 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(char2 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(char4 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(unsigned char * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(uchar1 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(uchar2 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(uchar4 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(short * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(short1 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(short2 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(short4 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(unsigned short * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(ushort1 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(ushort2 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(ushort4 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(int * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(int1 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(int2 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(int4 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(unsigned * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(uint1 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(uint2 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1322 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(uint4 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(long * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(long1 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(long2 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(long4 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(unsigned long * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(ulong1 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(ulong2 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(ulong4 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(float * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(float1 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(float2 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(float4 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 1372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
tex1DLod(::cudaTextureObject_t texObject, float x, float level) 
#line 1373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)level;
#line 1377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
::exit(___);}











#line 1390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
#line 1385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(char * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(signed char * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(char1 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(char2 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(char4 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(short * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(short1 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(short2 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(short4 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(int * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(int1 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(int2 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(int4 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(unsigned * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(uint1 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(uint2 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(uint4 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1454 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(long * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(long1 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(long2 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(long4 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(unsigned long * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1464 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(ulong1 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(ulong2 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1468 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(ulong4 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(float * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(float1 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(float2 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1485 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(float4 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 1494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
tex2DLod(::cudaTextureObject_t texObject, float x, float y, float level) 
#line 1495 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)level;
#line 1499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
::exit(___);}











#line 1512 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
#line 1507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(char * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1508 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(signed char * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(char1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1512 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(char2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(char4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1516 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1520 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1522 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1530 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(short * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1532 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(short1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1534 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(short2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(short4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1544 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(int * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(int1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1556 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(int2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(int4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(unsigned * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1562 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(uint1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(uint2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1566 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(uint4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1576 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(long * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1578 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(long1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1580 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(long2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1582 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(long4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(unsigned long * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(ulong1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1588 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(ulong2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1590 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(ulong4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(float * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1603 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(float1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(float2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1607 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(float4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1615 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 1616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
tex3DLod(::cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 1617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 1621 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
::exit(___);}











#line 1634 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
#line 1629 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(char * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(signed char * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(char1 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1634 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(char2 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1636 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(char4 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(unsigned char * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(uchar1 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1642 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(uchar2 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(uchar4 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1652 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(short * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(short1 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(short2 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1658 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(short4 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(unsigned short * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(ushort1 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(ushort2 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(ushort4 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(int * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1676 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(int1 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(int2 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(int4 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1682 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(unsigned * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1684 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(uint1 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(uint2 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(uint4 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1698 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(long * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1700 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(long1 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(long2 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(long4 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(unsigned long * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1708 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(ulong1 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(ulong2 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1712 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(ulong4 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(float * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(float1 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1727 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(float2 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1729 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(float4 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1737 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 1738 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
tex1DLayeredLod(::cudaTextureObject_t texObject, float x, int layer, float level) 
#line 1739 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)layer;(void)level;
#line 1743 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
::exit(___);}











#line 1756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
#line 1751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(char * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1752 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(signed char * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1754 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(char1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(char2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(char4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1760 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1762 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1764 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1774 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(short * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1776 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(short1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1778 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(short2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(short4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1782 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1784 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1786 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(int * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1798 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(int1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1800 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(int2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1802 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(int4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1804 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(unsigned * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1806 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(uint1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1808 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(uint2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1810 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(uint4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1820 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(long * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1822 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(long1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1824 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(long2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1826 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(long4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1828 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(unsigned long * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1830 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(ulong1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1832 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(ulong2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1834 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(ulong4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1845 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(float * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1847 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(float1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1849 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(float2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1851 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(float4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1859 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 1860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
tex2DLayeredLod(::cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 1861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 1865 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
::exit(___);}











#line 1878 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
#line 1873 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(char * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(signed char * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(char1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1878 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(char2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1880 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(char4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1884 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1896 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(short * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(short1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1900 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(short2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1902 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(short4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1904 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1908 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1910 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1918 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(int * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1920 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(int1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(int2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1924 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(int4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1926 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(unsigned * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(uint1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(uint2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(uint4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1942 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(long * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1944 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(long1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(long2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1948 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(long4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1950 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(unsigned long * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(ulong1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1954 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(ulong2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1956 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(ulong4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1967 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(float * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1969 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(float1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(float2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1973 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(float4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1981 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 1982 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
texCubemapLod(::cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 1983 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 1987 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
::exit(___);}











#line 2000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
#line 1995 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(char * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 1996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(signed char * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 1998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(char1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(char2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2002 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(char4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2004 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2006 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2008 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2010 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2018 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(short * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2020 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(short1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2022 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(short2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(short4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2026 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2028 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2040 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(int * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2042 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(int1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(int2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2046 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(int4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(unsigned * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2050 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(uint1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2052 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(uint2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(uint4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2064 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(long * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2066 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(long1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2068 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(long2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2070 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(long4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2072 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(unsigned long * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2074 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(ulong1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2076 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(ulong2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2078 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(ulong4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2089 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(float * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2091 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(float1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2093 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(float2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2095 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(float4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 2104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
texCubemapLayeredLod(::cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 2105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 2109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
::exit(___);}











#line 2122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
#line 2117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(char * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(signed char * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(char1 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(char2 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(char4 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(unsigned char * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(uchar1 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(uchar2 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(uchar4 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(short * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(short1 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(short2 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(short4 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(unsigned short * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(ushort1 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(ushort2 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(ushort4 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(int * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(int1 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(int2 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(int4 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(unsigned * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(uint1 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(uint2 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(uint4 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(long * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(long1 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(long2 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(long4 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(unsigned long * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(ulong1 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(ulong2 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(ulong4 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(float * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(float1 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(float2 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(float4 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 2226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
tex1DGrad(::cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 2227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 2231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
::exit(___);}











#line 2244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
#line 2239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(char * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(signed char * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(char1 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(char2 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(char4 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(short * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(short1 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(short2 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(short4 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(int * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(int1 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(int2 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(int4 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(unsigned * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(uint1 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(uint2 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(uint4 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(long * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(long1 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(long2 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(long4 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(unsigned long * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(ulong1 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(ulong2 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2322 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(ulong4 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(float * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(float1 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(float2 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(float4 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 2348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
tex2DGrad(::cudaTextureObject_t texObject, float x, float y, ::float2 dPdx, ::float2 dPdy) 
#line 2349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 2353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
::exit(___);}











#line 2366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
#line 2361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(char * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(signed char * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(char1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(char2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(char4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(short * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(short1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(short2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(short4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(int * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(int1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(int2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(int4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(unsigned * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(uint1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(uint2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(uint4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(long * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(long1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(long2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(long4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(unsigned long * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(ulong1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(ulong2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(ulong4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2455 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(float * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2457 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(float1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(float2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2461 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(float4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 2470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
tex3DGrad(::cudaTextureObject_t texObject, float x, float y, float z, ::float4 dPdx, ::float4 dPdy) 
#line 2471 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 2475 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
::exit(___);}











#line 2488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
#line 2483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(char * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(signed char * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(char1 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(char2 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2490 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(char4 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2492 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(unsigned char * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(uchar1 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2496 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(uchar2 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2498 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(uchar4 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2506 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(short * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2508 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(short1 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(short2 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2512 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(short4 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(unsigned short * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2516 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(ushort1 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(ushort2 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2520 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(ushort4 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2528 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(int * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2530 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(int1 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2532 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(int2 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2534 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(int4 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(unsigned * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(uint1 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(uint2 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(uint4 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(long * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(long1 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2556 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(long2 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(long4 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(unsigned long * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2562 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(ulong1 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(ulong2 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2566 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(ulong4 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2577 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(float * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2579 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(float1 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(float2 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(float4 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2591 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 2592 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
tex1DLayeredGrad(::cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 2593 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 2597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
::exit(___);}











#line 2610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
#line 2605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(char * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2606 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(signed char * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2608 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(char1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(char2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2612 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(char4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2614 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2620 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2628 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(short * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(short1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(short2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2634 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(short4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2636 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2642 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2650 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(int * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2652 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(int1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(int2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(int4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2658 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(unsigned * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(uint1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(uint2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(uint4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(long * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2676 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(long1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(long2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(long4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2682 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(unsigned long * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2684 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(ulong1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(ulong2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(ulong4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(float * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(float1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2703 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(float2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2705 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(float4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 2714 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
tex2DLayeredGrad(::cudaTextureObject_t texObject, float x, float y, int layer, ::float2 dPdx, ::float2 dPdy) 
#line 2715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 2719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
::exit(___);}











#line 2732 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.h"
#line 75 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(char *retVal, cudaTextureObject_t texObject, int x) 
#line 76 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 85 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 98 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 86 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(signed char *retVal, cudaTextureObject_t texObject, int x) 
#line 87 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 91 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 93 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(char1 *retVal, cudaTextureObject_t texObject, int x) 
#line 94 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 98 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(char2 *retVal, cudaTextureObject_t texObject, int x) 
#line 101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(char4 *retVal, cudaTextureObject_t texObject, int x) 
#line 108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(unsigned char *retVal, cudaTextureObject_t texObject, int x) 
#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(uchar1 *retVal, cudaTextureObject_t texObject, int x) 
#line 122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(uchar2 *retVal, cudaTextureObject_t texObject, int x) 
#line 129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(uchar4 *retVal, cudaTextureObject_t texObject, int x) 
#line 136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(short *retVal, cudaTextureObject_t texObject, int x) 
#line 149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(short1 *retVal, cudaTextureObject_t texObject, int x) 
#line 156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(short2 *retVal, cudaTextureObject_t texObject, int x) 
#line 163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(short4 *retVal, cudaTextureObject_t texObject, int x) 
#line 170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 187 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(unsigned short *retVal, cudaTextureObject_t texObject, int x) 
#line 177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(ushort1 *retVal, cudaTextureObject_t texObject, int x) 
#line 184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(ushort2 *retVal, cudaTextureObject_t texObject, int x) 
#line 191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(ushort4 *retVal, cudaTextureObject_t texObject, int x) 
#line 198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(int *retVal, cudaTextureObject_t texObject, int x) 
#line 211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(int1 *retVal, cudaTextureObject_t texObject, int x) 
#line 218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(int2 *retVal, cudaTextureObject_t texObject, int x) 
#line 225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(int4 *retVal, cudaTextureObject_t texObject, int x) 
#line 232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(unsigned *retVal, cudaTextureObject_t texObject, int x) 
#line 239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(uint1 *retVal, cudaTextureObject_t texObject, int x) 
#line 246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(uint2 *retVal, cudaTextureObject_t texObject, int x) 
#line 253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(uint4 *retVal, cudaTextureObject_t texObject, int x) 
#line 260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(long *retVal, cudaTextureObject_t texObject, int x) 
#line 275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(long1 *retVal, cudaTextureObject_t texObject, int x) 
#line 282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(long2 *retVal, cudaTextureObject_t texObject, int x) 
#line 289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(long4 *retVal, cudaTextureObject_t texObject, int x) 
#line 296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(unsigned long *retVal, cudaTextureObject_t texObject, int x) 
#line 303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(ulong1 *retVal, cudaTextureObject_t texObject, int x) 
#line 310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 327 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(ulong2 *retVal, cudaTextureObject_t texObject, int x) 
#line 317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(ulong4 *retVal, cudaTextureObject_t texObject, int x) 
#line 324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(float *retVal, cudaTextureObject_t texObject, int x) 
#line 340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(float1 *retVal, cudaTextureObject_t texObject, int x) 
#line 347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(float2 *retVal, cudaTextureObject_t texObject, int x) 
#line 354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(float4 *retVal, cudaTextureObject_t texObject, int x) 
#line 361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(char *retVal, cudaTextureObject_t texObject, float x) 
#line 374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(signed char *retVal, cudaTextureObject_t texObject, float x) 
#line 385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(char1 *retVal, cudaTextureObject_t texObject, float x) 
#line 392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(char2 *retVal, cudaTextureObject_t texObject, float x) 
#line 399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(char4 *retVal, cudaTextureObject_t texObject, float x) 
#line 406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 423 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(unsigned char *retVal, cudaTextureObject_t texObject, float x) 
#line 413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(uchar1 *retVal, cudaTextureObject_t texObject, float x) 
#line 420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 426 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(uchar2 *retVal, cudaTextureObject_t texObject, float x) 
#line 427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 431 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(uchar4 *retVal, cudaTextureObject_t texObject, float x) 
#line 434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 446 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(short *retVal, cudaTextureObject_t texObject, float x) 
#line 447 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 464 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 453 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(short1 *retVal, cudaTextureObject_t texObject, float x) 
#line 454 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 471 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(short2 *retVal, cudaTextureObject_t texObject, float x) 
#line 461 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 465 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 478 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(short4 *retVal, cudaTextureObject_t texObject, float x) 
#line 468 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 485 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 474 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(unsigned short *retVal, cudaTextureObject_t texObject, float x) 
#line 475 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 492 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(ushort1 *retVal, cudaTextureObject_t texObject, float x) 
#line 482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(ushort2 *retVal, cudaTextureObject_t texObject, float x) 
#line 489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 506 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 495 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(ushort4 *retVal, cudaTextureObject_t texObject, float x) 
#line 496 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 508 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(int *retVal, cudaTextureObject_t texObject, float x) 
#line 509 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 526 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(int1 *retVal, cudaTextureObject_t texObject, float x) 
#line 516 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 520 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 533 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 522 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(int2 *retVal, cudaTextureObject_t texObject, float x) 
#line 523 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 527 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(int4 *retVal, cudaTextureObject_t texObject, float x) 
#line 530 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 534 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 547 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(unsigned *retVal, cudaTextureObject_t texObject, float x) 
#line 537 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 541 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 543 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(uint1 *retVal, cudaTextureObject_t texObject, float x) 
#line 544 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 548 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 561 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 550 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(uint2 *retVal, cudaTextureObject_t texObject, float x) 
#line 551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(uint4 *retVal, cudaTextureObject_t texObject, float x) 
#line 558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 562 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(long *retVal, cudaTextureObject_t texObject, float x) 
#line 573 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 577 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 590 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 579 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(long1 *retVal, cudaTextureObject_t texObject, float x) 
#line 580 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(long2 *retVal, cudaTextureObject_t texObject, float x) 
#line 587 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 591 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 593 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(long4 *retVal, cudaTextureObject_t texObject, float x) 
#line 594 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(unsigned long *retVal, cudaTextureObject_t texObject, float x) 
#line 601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 607 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(ulong1 *retVal, cudaTextureObject_t texObject, float x) 
#line 608 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 612 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 614 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(ulong2 *retVal, cudaTextureObject_t texObject, float x) 
#line 615 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 621 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(ulong4 *retVal, cudaTextureObject_t texObject, float x) 
#line 622 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 639 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(float *retVal, cudaTextureObject_t texObject, float x) 
#line 638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 642 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 655 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(float1 *retVal, cudaTextureObject_t texObject, float x) 
#line 645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 649 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 651 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(float2 *retVal, cudaTextureObject_t texObject, float x) 
#line 652 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 669 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 658 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(float4 *retVal, cudaTextureObject_t texObject, float x) 
#line 659 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 663 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 676 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 671 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(char *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 672 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 682 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(signed char *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 687 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 700 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 689 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(char1 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 690 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 707 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(char2 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 697 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 714 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 703 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(char4 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 708 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 721 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 728 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 717 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 724 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 729 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 742 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 732 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 749 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 744 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(short *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 749 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 762 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(short1 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 752 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(short2 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 759 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 763 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 776 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 765 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(short4 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 770 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 783 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 772 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 773 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 790 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 779 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 784 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 797 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 786 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 787 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 791 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 804 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 793 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 794 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 798 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 811 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 806 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(int *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 807 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 811 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 824 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 813 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(int1 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 814 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 818 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 831 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 820 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(int2 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 821 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 825 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 838 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 827 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(int4 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 828 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 832 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 845 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 834 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(unsigned *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 835 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 839 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 852 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 841 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(uint1 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 846 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 859 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(uint2 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 849 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 866 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 855 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(uint4 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 873 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 870 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(long *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 875 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 877 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(long1 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 878 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 895 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 884 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(long2 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 889 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 902 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 891 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(long4 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 892 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 896 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 909 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 899 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 903 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 905 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 910 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 923 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 912 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 913 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 917 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 919 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 920 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 924 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 937 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 935 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(float *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 940 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 953 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 942 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(float1 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 947 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 960 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 949 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(float2 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 950 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 954 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 967 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 956 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(float4 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 961 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 974 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 969 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(char *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 981 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 985 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 987 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 988 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1005 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 994 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 995 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 999 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1012 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1001 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1002 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1006 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1019 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1008 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1013 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1026 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1015 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1020 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1033 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1022 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1023 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1027 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1040 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1029 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1034 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1042 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(short *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1060 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1049 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1050 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1067 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1056 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1057 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1061 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1074 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1063 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1064 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1068 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1081 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1070 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1071 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1075 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1088 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1077 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1078 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1082 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1095 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1084 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1085 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1089 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1091 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1092 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1096 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(int *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(long *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(long1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(long2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1187 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(long4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(float *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1258 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(char *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(signed char *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(char1 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(char2 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1297 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(char4 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(unsigned char *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(uchar1 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(uchar2 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1327 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(uchar4 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1345 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(short *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1345 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(short1 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1352 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(short2 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(short4 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(unsigned short *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(ushort1 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1382 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(ushort2 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(ushort4 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(int *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(int1 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(int2 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1423 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(int4 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1428 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1441 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(unsigned *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1431 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1435 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(uint1 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1455 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(uint2 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(uint4 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1452 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(long *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1471 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1473 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(long1 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1474 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1478 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1491 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1480 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(long2 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1485 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1498 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(long4 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1492 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1505 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(unsigned long *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1495 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1512 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1501 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(ulong1 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1502 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1506 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1519 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1508 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(ulong2 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1509 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1526 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(ulong4 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1516 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1520 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1533 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(float *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1532 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1549 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(float1 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1539 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1543 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1556 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(float2 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1546 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1550 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1563 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(float4 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1553 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1570 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1565 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(char *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1566 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1588 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1576 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(signed char *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1577 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1594 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(char1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1588 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1590 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(char2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1591 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1608 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(char4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1602 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1615 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1609 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1622 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1612 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1629 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1636 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1643 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(short *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1639 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1643 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(short1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1650 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1663 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1652 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(short2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1657 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1659 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(short4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1677 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1671 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1684 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1673 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1691 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1698 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1687 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1705 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1700 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(int *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1705 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1707 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(int1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1708 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1712 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1714 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(int2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1732 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1721 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(int4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1739 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1728 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1729 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1733 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1746 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1742 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1743 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1760 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1749 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1754 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1767 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1764 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(long *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1765 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1782 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1771 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(long1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1772 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1776 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1789 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1778 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(long2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1779 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1783 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1785 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(long4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1786 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1790 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1803 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1792 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1793 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1797 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1810 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1799 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1800 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1804 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1817 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1806 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1807 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1811 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1824 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1813 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1814 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1818 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1831 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(float *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1830 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1834 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1847 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1836 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(float1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1837 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1841 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1854 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1843 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(float2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1844 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1850 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(float4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1851 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1855 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(char *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1864 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1873 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1875 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1892 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1881 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1899 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1889 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1895 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1896 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1900 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1913 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1902 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1903 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1907 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1920 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1909 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1910 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1914 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1927 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1917 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1921 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1934 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1923 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1924 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1941 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(short *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1937 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1941 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1954 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1944 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1948 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1961 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1950 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1951 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1955 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1968 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1962 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1975 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1964 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1965 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1969 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1982 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1976 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1989 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1983 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1985 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1986 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1990 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2003 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 1998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(int *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1999 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2003 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2005 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2006 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2010 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2023 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2012 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2013 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2019 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2020 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2026 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2027 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2033 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2034 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2038 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2051 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2040 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2041 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2045 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2052 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2065 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(long *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2063 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2067 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2080 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(long1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2070 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2074 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2087 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2076 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(long2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2077 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2081 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2094 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2083 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(long4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2084 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2088 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2090 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2091 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2095 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2097 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2098 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(float *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(char *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2187 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(short *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(int *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2297 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2322 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2345 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(long *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(long1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(long2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(long4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2382 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(float *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2426 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2450 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2439 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2457 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2446 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2447 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2464 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(char *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2475 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2477 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(signed char *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2478 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2528 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2495 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(char1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2496 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2546 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(char2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(char4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2532 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2547 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2582 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2549 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2550 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2565 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2567 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2585 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2636 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2603 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2627 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(short *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2628 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2643 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(short1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2663 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(short2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2679 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2714 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(short4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2682 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2697 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2732 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2700 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2717 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2733 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2768 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2786 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2754 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2804 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(int *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2778 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2793 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2828 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2795 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(int1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2811 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2846 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2813 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(int2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2814 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2864 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2831 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(int4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2832 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2847 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2849 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2850 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2865 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2900 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2918 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2901 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2903 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2904 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2919 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2954 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2927 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(long *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(long1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2961 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2963 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(long2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2964 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 3014 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2981 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(long4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2982 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2997 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 3032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 2999 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 3000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 3015 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 3050 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 3018 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 3033 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 3068 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3035 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 3036 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 3051 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 3086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 3054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 3069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 3104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3077 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(float *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 3078 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 3093 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 3128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3095 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(float1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 3096 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 3111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 3146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(float2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 3114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 3129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 3164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(float4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 3132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 3147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 3182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(char *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(signed char *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(char1 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(char2 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3187 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(char4 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(unsigned char *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(uchar1 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(uchar2 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(uchar4 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(short *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(short1 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(short2 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(short4 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(unsigned short *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(ushort1 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(ushort2 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(ushort4 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(int *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3297 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(int1 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(int2 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3322 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(int4 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(unsigned *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3319 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(uint1 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3326 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(uint2 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(uint4 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(long *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(long1 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(long2 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(long4 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3382 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(unsigned long *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(ulong1 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(ulong2 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(ulong4 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(float *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3426 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(float1 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3431 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(float2 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(float4 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3441 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3453 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(char *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3454 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3476 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3464 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3465 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3471 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3476 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3478 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3496 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3485 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3490 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3503 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3492 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3497 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3504 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3517 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3506 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3524 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3526 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(short *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3527 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3544 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3533 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3534 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3541 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3547 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3548 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3565 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3559 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3561 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3562 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3566 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3579 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3569 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3573 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3576 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3580 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3593 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3588 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(int *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3593 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3606 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3602 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3603 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3607 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3620 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3609 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3614 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3627 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3621 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3634 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3628 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3641 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3635 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3648 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3642 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3655 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3652 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(long *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3657 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3659 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(long1 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3677 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(long2 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3671 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3684 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3673 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(long4 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3691 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3698 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3687 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3705 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3695 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3712 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3717 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(float *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3724 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3729 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3742 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3732 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3749 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3738 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3739 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3743 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3752 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3761 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3774 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3762 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3763 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3767 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3770 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3774 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3787 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3776 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3781 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3794 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3783 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3784 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3801 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3790 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3791 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3795 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3808 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3797 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3798 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3802 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3815 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3804 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3805 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3809 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3822 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3811 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3812 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3816 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3824 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(short *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3825 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3831 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3832 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3836 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3849 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3838 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3839 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3843 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3845 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3846 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3850 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3852 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3857 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3870 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3859 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3864 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3877 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3866 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3884 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3873 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3878 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3891 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(int *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3891 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3904 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3894 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3900 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3901 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3905 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3918 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3907 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3908 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3912 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3925 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3914 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3915 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3919 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3921 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3926 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3939 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3929 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3933 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3935 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3940 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3953 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3950 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(long *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3951 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3955 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3968 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(long1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3962 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3975 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3964 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(long2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3965 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3969 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3982 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(long4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3976 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3989 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3983 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3985 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3986 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3990 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4003 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3993 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3997 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4010 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 3999 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4004 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4015 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(float *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4020 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4033 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4022 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4023 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4027 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4040 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4029 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4034 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4036 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4041 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4049 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(char *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4050 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4059 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4072 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4060 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(signed char *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4061 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4065 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4078 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4067 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(char1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4068 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4072 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4085 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4074 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(char2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4075 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4079 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4092 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4081 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(char4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4082 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4099 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4088 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(unsigned char *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4089 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4093 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4095 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(uchar1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4096 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(uchar2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(uchar4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(short *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(short1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(short2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(short4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(unsigned short *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(ushort1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(ushort2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(ushort4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(int *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(int1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(int2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(int4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(unsigned *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(uint1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(uint2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(uint4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(long *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(long1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(long2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(long4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(unsigned long *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(ulong1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(ulong2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4297 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(ulong4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(float *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(float1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4327 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(float2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4345 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(float4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4352 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(char *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(signed char *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(char1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(char2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(char4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(short *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(short1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4428 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(short2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4435 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4439 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4452 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4441 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(short4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4446 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4453 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4455 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4473 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4480 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4474 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(int *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(int1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4490 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4496 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(int2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4497 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4501 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4503 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(int4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4504 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4508 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4521 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4528 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4517 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4522 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4535 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4524 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4525 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4532 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4549 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4546 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(long *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4547 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4553 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(long1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(long2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4561 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4565 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4578 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4567 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(long4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4585 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4574 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4579 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4592 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4582 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4599 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4588 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4593 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4606 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(float *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4612 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4629 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(float1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4636 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(float2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4643 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(float4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4650 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4655 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4657 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4663 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4671 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4675 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4677 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4682 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4695 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4684 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4689 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4691 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4709 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4698 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4703 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4716 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4705 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(short *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4743 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4732 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4733 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4737 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4739 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4744 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4757 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4746 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4764 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4754 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4771 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4760 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4761 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4765 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4778 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4767 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4768 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4772 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4785 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(int *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4781 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4785 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4798 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4787 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4792 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4805 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4794 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4795 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4799 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4812 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4801 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4802 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4806 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4819 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4808 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4809 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4813 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4826 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4815 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4816 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4820 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4833 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4822 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4823 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4827 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4840 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4830 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4834 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4847 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4844 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(long *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4845 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4849 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4862 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4851 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(long1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4852 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4869 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(long2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4859 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4865 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(long4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4866 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4870 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4872 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4873 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4877 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4880 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4884 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4891 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4904 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4894 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4909 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(float *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4910 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4914 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4927 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4917 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4921 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4934 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4923 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4924 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4941 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4935 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4948 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(char *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 4944 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 4953 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4966 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4954 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 4955 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 4959 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4961 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 4962 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 4966 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4968 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 4969 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 4973 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4986 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4975 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 4976 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 4980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4993 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4982 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 4983 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 4987 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4989 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 4990 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 4994 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 4996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 4997 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5001 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5014 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5003 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5004 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5008 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5021 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(short *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5021 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5034 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5023 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5028 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5041 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5035 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5038 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5042 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5055 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5045 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5049 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5051 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5052 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5056 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5059 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5063 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5076 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5065 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5066 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5070 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5083 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5078 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(int *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5079 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5083 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5096 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5085 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5090 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5092 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5093 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5097 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5099 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(long *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(long1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(long2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(long4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(float *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(char *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(signed char *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(char1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(char2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(char4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(unsigned char *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(uchar1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(uchar2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(uchar4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5319 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(short *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5319 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(short1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5322 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5326 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(short2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(short4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(unsigned short *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(ushort1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(ushort2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(ushort4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(int *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(int1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(int2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(int4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5415 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(unsigned *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}










#line 5421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(uint1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5429 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(uint2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5423 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(uint4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5426 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(long *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5441 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5447 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(long1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5452 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5465 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5454 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(long2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5455 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5461 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(long4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5468 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(unsigned long *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5473 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5475 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(ulong1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5476 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5480 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(ulong2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(ulong4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5490 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5505 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(float *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5506 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5523 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5512 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(float1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5517 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5530 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5519 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(float2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5520 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5524 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5537 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5526 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(float4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5527 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5544 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5539 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(char *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5549 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5562 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5550 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5562 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5565 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5569 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5582 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5576 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5578 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5579 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5585 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5590 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5603 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5592 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5593 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5599 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5612 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(short *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5620 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5627 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5634 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5651 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5641 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5658 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5647 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5648 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5652 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5665 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5655 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5659 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5672 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5679 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(int *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5675 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5679 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5682 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5689 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5693 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5695 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5700 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5703 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5707 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5720 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5709 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5714 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5727 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5716 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5717 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5721 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5734 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5724 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5728 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5741 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5738 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(long *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5739 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5743 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(long1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5746 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5763 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5752 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(long2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5757 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5770 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5759 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(long4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5760 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5764 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5767 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5771 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5784 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5773 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5774 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5778 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5791 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5781 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5785 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5798 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5787 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5792 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5805 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5803 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(float *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5804 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5808 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5821 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5810 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5811 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5815 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5828 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5817 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5818 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5822 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5835 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5824 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5825 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5837 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5838 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5847 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5849 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5866 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5855 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5873 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5862 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5880 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5869 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5870 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5877 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5881 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5894 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5884 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5901 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5891 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5895 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5908 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5902 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5915 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5910 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(short *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5915 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5917 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5918 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5935 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5924 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5925 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5929 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5942 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5949 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5939 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5956 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5950 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5963 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5953 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5959 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5960 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5964 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5977 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(int *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5973 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5977 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5990 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5984 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5997 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5986 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5987 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5991 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6004 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 5993 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5994 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6011 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6001 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6005 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6018 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6008 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6012 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6025 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6014 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6015 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6019 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6021 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6022 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6026 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6039 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6036 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(long *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6041 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(long1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6061 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6050 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(long2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6051 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6055 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6068 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6057 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(long4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6075 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6064 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6065 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6082 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6071 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6072 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6076 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6089 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6078 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6079 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6083 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6096 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6085 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6090 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(float *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(char *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(signed char *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(char1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(char2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(char4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(unsigned char *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(uchar1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(uchar2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(uchar4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(short *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(short1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(short2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(short4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(unsigned short *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(ushort1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(ushort2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(ushort4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6258 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(int *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(int1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(int2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(int4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(unsigned *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(uint1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(uint2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6319 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(uint4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(long *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6352 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(long1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(long2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(long4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(unsigned long *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(ulong1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(ulong2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(ulong4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(float *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(float1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(float2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6431 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(float4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(char *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(signed char *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(char1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6452 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(char2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6476 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6465 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(char4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6473 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6477 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6490 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6480 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6497 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6491 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6504 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6494 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6498 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6506 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(short *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6524 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(short1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6520 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(short2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6521 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6525 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6527 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(short4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6528 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6532 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6534 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6535 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6539 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6541 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6546 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6559 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6548 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6549 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6553 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6566 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6556 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6573 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(int *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6569 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6573 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(int1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6576 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6580 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6593 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6582 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(int2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6587 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(int4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6590 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6594 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6607 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6614 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6603 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6608 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6621 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6615 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6628 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6622 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6635 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(long *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6650 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6639 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(long1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6657 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(long2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6647 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6651 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(long4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6658 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6671 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6665 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6678 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6672 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6675 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6679 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6682 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6697 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(float *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6698 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(float1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6705 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6709 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(float2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6712 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6716 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6729 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 6718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(float4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\texture_indirect_functions.hpp"
#line 77 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_i8_clamp(char *, unsigned __int64, int); } 
#line 78 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_i16_clamp(short *, unsigned __int64, int); } 
#line 79 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_i32_clamp(int *, unsigned __int64, int); } 
#line 80 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_i64_clamp(__int64 *, unsigned __int64, int); } 
#line 81 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v2i8_clamp(char *, char *, unsigned __int64, int); } 
#line 82 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v2i16_clamp(short *, short *, unsigned __int64, int); } 
#line 83 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v2i32_clamp(int *, int *, unsigned __int64, int); } 
#line 84 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v2i64_clamp(__int64 *, __int64 *, unsigned __int64, int); } 
#line 85 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v4i8_clamp(char *, char *, char *, char *, unsigned __int64, int); } 
#line 86 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v4i16_clamp(short *, short *, short *, short *, unsigned __int64, int); } 
#line 87 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v4i32_clamp(int *, int *, int *, int *, unsigned __int64, int); } 
#line 88 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_i8_clamp(char *, unsigned __int64, int, int); } 
#line 89 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_i16_clamp(short *, unsigned __int64, int, int); } 
#line 90 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_i32_clamp(int *, unsigned __int64, int, int); } 
#line 91 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_i64_clamp(__int64 *, unsigned __int64, int, int); } 
#line 92 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v2i8_clamp(char *, char *, unsigned __int64, int, int); } 
#line 93 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v2i16_clamp(short *, short *, unsigned __int64, int, int); } 
#line 94 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v2i32_clamp(int *, int *, unsigned __int64, int, int); } 
#line 95 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v2i64_clamp(__int64 *, __int64 *, unsigned __int64, int, int); } 
#line 96 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v4i8_clamp(char *, char *, char *, char *, unsigned __int64, int, int); } 
#line 97 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v4i16_clamp(short *, short *, short *, short *, unsigned __int64, int, int); } 
#line 98 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v4i32_clamp(int *, int *, int *, int *, unsigned __int64, int, int); } 
#line 99 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_i8_clamp(char *, unsigned __int64, int, int); } 
#line 100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_i16_clamp(short *, unsigned __int64, int, int); } 
#line 101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_i32_clamp(int *, unsigned __int64, int, int); } 
#line 102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_i64_clamp(__int64 *, unsigned __int64, int, int); } 
#line 103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v2i8_clamp(char *, char *, unsigned __int64, int, int); } 
#line 104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v2i16_clamp(short *, short *, unsigned __int64, int, int); } 
#line 105 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v2i32_clamp(int *, int *, unsigned __int64, int, int); } 
#line 106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v2i64_clamp(__int64 *, __int64 *, unsigned __int64, int, int); } 
#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v4i8_clamp(char *, char *, char *, char *, unsigned __int64, int, int); } 
#line 108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v4i16_clamp(short *, short *, short *, short *, unsigned __int64, int, int); } 
#line 109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v4i32_clamp(int *, int *, int *, int *, unsigned __int64, int, int); } 
#line 110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_i8_clamp(char *, unsigned __int64, int, int, int); } 
#line 111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_i16_clamp(short *, unsigned __int64, int, int, int); } 
#line 112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_i32_clamp(int *, unsigned __int64, int, int, int); } 
#line 113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_i64_clamp(__int64 *, unsigned __int64, int, int, int); } 
#line 114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v2i8_clamp(char *, char *, unsigned __int64, int, int, int); } 
#line 115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v2i16_clamp(short *, short *, unsigned __int64, int, int, int); } 
#line 116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v2i32_clamp(int *, int *, unsigned __int64, int, int, int); } 
#line 117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v2i64_clamp(__int64 *, __int64 *, unsigned __int64, int, int, int); } 
#line 118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v4i8_clamp(char *, char *, char *, char *, unsigned __int64, int, int, int); } 
#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v4i16_clamp(short *, short *, short *, short *, unsigned __int64, int, int, int); } 
#line 120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v4i32_clamp(int *, int *, int *, int *, unsigned __int64, int, int, int); } 
#line 121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_i8_clamp(char *, unsigned __int64, int, int, int); } 
#line 122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_i16_clamp(short *, unsigned __int64, int, int, int); } 
#line 123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_i32_clamp(int *, unsigned __int64, int, int, int); } 
#line 124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_i64_clamp(__int64 *, unsigned __int64, int, int, int); } 
#line 125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v2i8_clamp(char *, char *, unsigned __int64, int, int, int); } 
#line 126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v2i16_clamp(short *, short *, unsigned __int64, int, int, int); } 
#line 127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v2i32_clamp(int *, int *, unsigned __int64, int, int, int); } 
#line 128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v2i64_clamp(__int64 *, __int64 *, unsigned __int64, int, int, int); } 
#line 129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v4i8_clamp(char *, char *, char *, char *, unsigned __int64, int, int, int); } 
#line 130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v4i16_clamp(short *, short *, short *, short *, unsigned __int64, int, int, int); } 
#line 131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v4i32_clamp(int *, int *, int *, int *, unsigned __int64, int, int, int); } 
#line 132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_i8_trap(char *, unsigned __int64, int); } 
#line 133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_i16_trap(short *, unsigned __int64, int); } 
#line 134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_i32_trap(int *, unsigned __int64, int); } 
#line 135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_i64_trap(__int64 *, unsigned __int64, int); } 
#line 136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v2i8_trap(char *, char *, unsigned __int64, int); } 
#line 137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v2i16_trap(short *, short *, unsigned __int64, int); } 
#line 138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v2i32_trap(int *, int *, unsigned __int64, int); } 
#line 139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v2i64_trap(__int64 *, __int64 *, unsigned __int64, int); } 
#line 140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v4i8_trap(char *, char *, char *, char *, unsigned __int64, int); } 
#line 141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v4i16_trap(short *, short *, short *, short *, unsigned __int64, int); } 
#line 142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v4i32_trap(int *, int *, int *, int *, unsigned __int64, int); } 
#line 143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_i8_trap(char *, unsigned __int64, int, int); } 
#line 144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_i16_trap(short *, unsigned __int64, int, int); } 
#line 145 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_i32_trap(int *, unsigned __int64, int, int); } 
#line 146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_i64_trap(__int64 *, unsigned __int64, int, int); } 
#line 147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v2i8_trap(char *, char *, unsigned __int64, int, int); } 
#line 148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v2i16_trap(short *, short *, unsigned __int64, int, int); } 
#line 149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v2i32_trap(int *, int *, unsigned __int64, int, int); } 
#line 150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v2i64_trap(__int64 *, __int64 *, unsigned __int64, int, int); } 
#line 151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v4i8_trap(char *, char *, char *, char *, unsigned __int64, int, int); } 
#line 152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v4i16_trap(short *, short *, short *, short *, unsigned __int64, int, int); } 
#line 153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v4i32_trap(int *, int *, int *, int *, unsigned __int64, int, int); } 
#line 154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_i8_trap(char *, unsigned __int64, int, int); } 
#line 155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_i16_trap(short *, unsigned __int64, int, int); } 
#line 156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_i32_trap(int *, unsigned __int64, int, int); } 
#line 157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_i64_trap(__int64 *, unsigned __int64, int, int); } 
#line 158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v2i8_trap(char *, char *, unsigned __int64, int, int); } 
#line 159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v2i16_trap(short *, short *, unsigned __int64, int, int); } 
#line 160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v2i32_trap(int *, int *, unsigned __int64, int, int); } 
#line 161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v2i64_trap(__int64 *, __int64 *, unsigned __int64, int, int); } 
#line 162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v4i8_trap(char *, char *, char *, char *, unsigned __int64, int, int); } 
#line 163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v4i16_trap(short *, short *, short *, short *, unsigned __int64, int, int); } 
#line 164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v4i32_trap(int *, int *, int *, int *, unsigned __int64, int, int); } 
#line 165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_i8_trap(char *, unsigned __int64, int, int, int); } 
#line 166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_i16_trap(short *, unsigned __int64, int, int, int); } 
#line 167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_i32_trap(int *, unsigned __int64, int, int, int); } 
#line 168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_i64_trap(__int64 *, unsigned __int64, int, int, int); } 
#line 169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v2i8_trap(char *, char *, unsigned __int64, int, int, int); } 
#line 170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v2i16_trap(short *, short *, unsigned __int64, int, int, int); } 
#line 171 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v2i32_trap(int *, int *, unsigned __int64, int, int, int); } 
#line 172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v2i64_trap(__int64 *, __int64 *, unsigned __int64, int, int, int); } 
#line 173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v4i8_trap(char *, char *, char *, char *, unsigned __int64, int, int, int); } 
#line 174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v4i16_trap(short *, short *, short *, short *, unsigned __int64, int, int, int); } 
#line 175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v4i32_trap(int *, int *, int *, int *, unsigned __int64, int, int, int); } 
#line 176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_i8_trap(char *, unsigned __int64, int, int, int); } 
#line 177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_i16_trap(short *, unsigned __int64, int, int, int); } 
#line 178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_i32_trap(int *, unsigned __int64, int, int, int); } 
#line 179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_i64_trap(__int64 *, unsigned __int64, int, int, int); } 
#line 180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v2i8_trap(char *, char *, unsigned __int64, int, int, int); } 
#line 181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v2i16_trap(short *, short *, unsigned __int64, int, int, int); } 
#line 182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v2i32_trap(int *, int *, unsigned __int64, int, int, int); } 
#line 183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v2i64_trap(__int64 *, __int64 *, unsigned __int64, int, int, int); } 
#line 184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v4i8_trap(char *, char *, char *, char *, unsigned __int64, int, int, int); } 
#line 185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v4i16_trap(short *, short *, short *, short *, unsigned __int64, int, int, int); } 
#line 186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v4i32_trap(int *, int *, int *, int *, unsigned __int64, int, int, int); } 
#line 187 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_i8_zero(char *, unsigned __int64, int); } 
#line 188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_i16_zero(short *, unsigned __int64, int); } 
#line 189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_i32_zero(int *, unsigned __int64, int); } 
#line 190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_i64_zero(__int64 *, unsigned __int64, int); } 
#line 191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v2i8_zero(char *, char *, unsigned __int64, int); } 
#line 192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v2i16_zero(short *, short *, unsigned __int64, int); } 
#line 193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v2i32_zero(int *, int *, unsigned __int64, int); } 
#line 194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v2i64_zero(__int64 *, __int64 *, unsigned __int64, int); } 
#line 195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v4i8_zero(char *, char *, char *, char *, unsigned __int64, int); } 
#line 196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v4i16_zero(short *, short *, short *, short *, unsigned __int64, int); } 
#line 197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v4i32_zero(int *, int *, int *, int *, unsigned __int64, int); } 
#line 198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_i8_zero(char *, unsigned __int64, int, int); } 
#line 199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_i16_zero(short *, unsigned __int64, int, int); } 
#line 200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_i32_zero(int *, unsigned __int64, int, int); } 
#line 201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_i64_zero(__int64 *, unsigned __int64, int, int); } 
#line 202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v2i8_zero(char *, char *, unsigned __int64, int, int); } 
#line 203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v2i16_zero(short *, short *, unsigned __int64, int, int); } 
#line 204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v2i32_zero(int *, int *, unsigned __int64, int, int); } 
#line 205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v2i64_zero(__int64 *, __int64 *, unsigned __int64, int, int); } 
#line 206 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v4i8_zero(char *, char *, char *, char *, unsigned __int64, int, int); } 
#line 207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v4i16_zero(short *, short *, short *, short *, unsigned __int64, int, int); } 
#line 208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v4i32_zero(int *, int *, int *, int *, unsigned __int64, int, int); } 
#line 209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_i8_zero(char *, unsigned __int64, int, int); } 
#line 210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_i16_zero(short *, unsigned __int64, int, int); } 
#line 211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_i32_zero(int *, unsigned __int64, int, int); } 
#line 212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_i64_zero(__int64 *, unsigned __int64, int, int); } 
#line 213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v2i8_zero(char *, char *, unsigned __int64, int, int); } 
#line 214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v2i16_zero(short *, short *, unsigned __int64, int, int); } 
#line 215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v2i32_zero(int *, int *, unsigned __int64, int, int); } 
#line 216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v2i64_zero(__int64 *, __int64 *, unsigned __int64, int, int); } 
#line 217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v4i8_zero(char *, char *, char *, char *, unsigned __int64, int, int); } 
#line 218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v4i16_zero(short *, short *, short *, short *, unsigned __int64, int, int); } 
#line 219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v4i32_zero(int *, int *, int *, int *, unsigned __int64, int, int); } 
#line 220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_i8_zero(char *, unsigned __int64, int, int, int); } 
#line 221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_i16_zero(short *, unsigned __int64, int, int, int); } 
#line 222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_i32_zero(int *, unsigned __int64, int, int, int); } 
#line 223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_i64_zero(__int64 *, unsigned __int64, int, int, int); } 
#line 224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v2i8_zero(char *, char *, unsigned __int64, int, int, int); } 
#line 225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v2i16_zero(short *, short *, unsigned __int64, int, int, int); } 
#line 226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v2i32_zero(int *, int *, unsigned __int64, int, int, int); } 
#line 227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v2i64_zero(__int64 *, __int64 *, unsigned __int64, int, int, int); } 
#line 228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v4i8_zero(char *, char *, char *, char *, unsigned __int64, int, int, int); } 
#line 229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v4i16_zero(short *, short *, short *, short *, unsigned __int64, int, int, int); } 
#line 230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v4i32_zero(int *, int *, int *, int *, unsigned __int64, int, int, int); } 
#line 231 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_i8_zero(char *, unsigned __int64, int, int, int); } 
#line 232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_i16_zero(short *, unsigned __int64, int, int, int); } 
#line 233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_i32_zero(int *, unsigned __int64, int, int, int); } 
#line 234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_i64_zero(__int64 *, unsigned __int64, int, int, int); } 
#line 235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v2i8_zero(char *, char *, unsigned __int64, int, int, int); } 
#line 236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v2i16_zero(short *, short *, unsigned __int64, int, int, int); } 
#line 237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v2i32_zero(int *, int *, unsigned __int64, int, int, int); } 
#line 238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v2i64_zero(__int64 *, __int64 *, unsigned __int64, int, int, int); } 
#line 239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v4i8_zero(char *, char *, char *, char *, unsigned __int64, int, int, int); } 
#line 240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v4i16_zero(short *, short *, short *, short *, unsigned __int64, int, int, int); } 
#line 241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v4i32_zero(int *, int *, int *, int *, unsigned __int64, int, int, int); } 
#line 243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_i8_clamp(cudaSurfaceObject_t, int, unsigned char); } 
#line 244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_i16_clamp(cudaSurfaceObject_t, int, unsigned short); } 
#line 245 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_i32_clamp(cudaSurfaceObject_t, int, unsigned); } 
#line 246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_i64_clamp(cudaSurfaceObject_t, int, unsigned __int64); } 
#line 247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v2i8_clamp(cudaSurfaceObject_t, int, uchar2); } 
#line 248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v2i16_clamp(cudaSurfaceObject_t, int, ushort2); } 
#line 249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v2i32_clamp(cudaSurfaceObject_t, int, uint2); } 
#line 250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v2i64_clamp(cudaSurfaceObject_t, int, ulonglong2); } 
#line 251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v4i8_clamp(cudaSurfaceObject_t, int, uchar4); } 
#line 252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v4i16_clamp(cudaSurfaceObject_t, int, ushort4); } 
#line 253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v4i32_clamp(cudaSurfaceObject_t, int, uint4); } 
#line 254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_i8_clamp(cudaSurfaceObject_t, int, int, unsigned char); } 
#line 255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_i16_clamp(cudaSurfaceObject_t, int, int, unsigned short); } 
#line 256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_i32_clamp(cudaSurfaceObject_t, int, int, unsigned); } 
#line 257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_i64_clamp(cudaSurfaceObject_t, int, int, unsigned __int64); } 
#line 258 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v2i8_clamp(cudaSurfaceObject_t, int, int, uchar2); } 
#line 259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v2i16_clamp(cudaSurfaceObject_t, int, int, ushort2); } 
#line 260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v2i32_clamp(cudaSurfaceObject_t, int, int, uint2); } 
#line 261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v2i64_clamp(cudaSurfaceObject_t, int, int, ulonglong2); } 
#line 262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v4i8_clamp(cudaSurfaceObject_t, int, int, uchar4); } 
#line 263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v4i16_clamp(cudaSurfaceObject_t, int, int, ushort4); } 
#line 264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v4i32_clamp(cudaSurfaceObject_t, int, int, uint4); } 
#line 265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_i8_clamp(cudaSurfaceObject_t, int, int, unsigned char); } 
#line 266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_i16_clamp(cudaSurfaceObject_t, int, int, unsigned short); } 
#line 267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_i32_clamp(cudaSurfaceObject_t, int, int, unsigned); } 
#line 268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_i64_clamp(cudaSurfaceObject_t, int, int, unsigned __int64); } 
#line 269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v2i8_clamp(cudaSurfaceObject_t, int, int, uchar2); } 
#line 270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v2i16_clamp(cudaSurfaceObject_t, int, int, ushort2); } 
#line 271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v2i32_clamp(cudaSurfaceObject_t, int, int, uint2); } 
#line 272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v2i64_clamp(cudaSurfaceObject_t, int, int, ulonglong2); } 
#line 273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v4i8_clamp(cudaSurfaceObject_t, int, int, uchar4); } 
#line 274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v4i16_clamp(cudaSurfaceObject_t, int, int, ushort4); } 
#line 275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v4i32_clamp(cudaSurfaceObject_t, int, int, uint4); } 
#line 276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_i8_clamp(cudaSurfaceObject_t, int, int, int, unsigned char); } 
#line 277 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_i16_clamp(cudaSurfaceObject_t, int, int, int, unsigned short); } 
#line 278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_i32_clamp(cudaSurfaceObject_t, int, int, int, unsigned); } 
#line 279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_i64_clamp(cudaSurfaceObject_t, int, int, int, unsigned __int64); } 
#line 280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v2i8_clamp(cudaSurfaceObject_t, int, int, int, uchar2); } 
#line 281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v2i16_clamp(cudaSurfaceObject_t, int, int, int, ushort2); } 
#line 282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v2i32_clamp(cudaSurfaceObject_t, int, int, int, uint2); } 
#line 283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v2i64_clamp(cudaSurfaceObject_t, int, int, int, ulonglong2); } 
#line 284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v4i8_clamp(cudaSurfaceObject_t, int, int, int, uchar4); } 
#line 285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v4i16_clamp(cudaSurfaceObject_t, int, int, int, ushort4); } 
#line 286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v4i32_clamp(cudaSurfaceObject_t, int, int, int, uint4); } 
#line 287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_i8_clamp(cudaSurfaceObject_t, int, int, int, unsigned char); } 
#line 288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_i16_clamp(cudaSurfaceObject_t, int, int, int, unsigned short); } 
#line 289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_i32_clamp(cudaSurfaceObject_t, int, int, int, unsigned); } 
#line 290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_i64_clamp(cudaSurfaceObject_t, int, int, int, unsigned __int64); } 
#line 291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v2i8_clamp(cudaSurfaceObject_t, int, int, int, uchar2); } 
#line 292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v2i16_clamp(cudaSurfaceObject_t, int, int, int, ushort2); } 
#line 293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v2i32_clamp(cudaSurfaceObject_t, int, int, int, uint2); } 
#line 294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v2i64_clamp(cudaSurfaceObject_t, int, int, int, ulonglong2); } 
#line 295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v4i8_clamp(cudaSurfaceObject_t, int, int, int, uchar4); } 
#line 296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v4i16_clamp(cudaSurfaceObject_t, int, int, int, ushort4); } 
#line 297 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v4i32_clamp(cudaSurfaceObject_t, int, int, int, uint4); } 
#line 298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_i8_trap(cudaSurfaceObject_t, int, unsigned char); } 
#line 299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_i16_trap(cudaSurfaceObject_t, int, unsigned short); } 
#line 300 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_i32_trap(cudaSurfaceObject_t, int, unsigned); } 
#line 301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_i64_trap(cudaSurfaceObject_t, int, unsigned __int64); } 
#line 302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v2i8_trap(cudaSurfaceObject_t, int, uchar2); } 
#line 303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v2i16_trap(cudaSurfaceObject_t, int, ushort2); } 
#line 304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v2i32_trap(cudaSurfaceObject_t, int, uint2); } 
#line 305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v2i64_trap(cudaSurfaceObject_t, int, ulonglong2); } 
#line 306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v4i8_trap(cudaSurfaceObject_t, int, uchar4); } 
#line 307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v4i16_trap(cudaSurfaceObject_t, int, ushort4); } 
#line 308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v4i32_trap(cudaSurfaceObject_t, int, uint4); } 
#line 309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_i8_trap(cudaSurfaceObject_t, int, int, unsigned char); } 
#line 310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_i16_trap(cudaSurfaceObject_t, int, int, unsigned short); } 
#line 311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_i32_trap(cudaSurfaceObject_t, int, int, unsigned); } 
#line 312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_i64_trap(cudaSurfaceObject_t, int, int, unsigned __int64); } 
#line 313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v2i8_trap(cudaSurfaceObject_t, int, int, uchar2); } 
#line 314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v2i16_trap(cudaSurfaceObject_t, int, int, ushort2); } 
#line 315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v2i32_trap(cudaSurfaceObject_t, int, int, uint2); } 
#line 316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v2i64_trap(cudaSurfaceObject_t, int, int, ulonglong2); } 
#line 317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v4i8_trap(cudaSurfaceObject_t, int, int, uchar4); } 
#line 318 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v4i16_trap(cudaSurfaceObject_t, int, int, ushort4); } 
#line 319 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v4i32_trap(cudaSurfaceObject_t, int, int, uint4); } 
#line 320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_i8_trap(cudaSurfaceObject_t, int, int, unsigned char); } 
#line 321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_i16_trap(cudaSurfaceObject_t, int, int, unsigned short); } 
#line 322 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_i32_trap(cudaSurfaceObject_t, int, int, unsigned); } 
#line 323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_i64_trap(cudaSurfaceObject_t, int, int, unsigned __int64); } 
#line 324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v2i8_trap(cudaSurfaceObject_t, int, int, uchar2); } 
#line 325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v2i16_trap(cudaSurfaceObject_t, int, int, ushort2); } 
#line 326 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v2i32_trap(cudaSurfaceObject_t, int, int, uint2); } 
#line 327 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v2i64_trap(cudaSurfaceObject_t, int, int, ulonglong2); } 
#line 328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v4i8_trap(cudaSurfaceObject_t, int, int, uchar4); } 
#line 329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v4i16_trap(cudaSurfaceObject_t, int, int, ushort4); } 
#line 330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v4i32_trap(cudaSurfaceObject_t, int, int, uint4); } 
#line 331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_i8_trap(cudaSurfaceObject_t, int, int, int, unsigned char); } 
#line 332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_i16_trap(cudaSurfaceObject_t, int, int, int, unsigned short); } 
#line 333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_i32_trap(cudaSurfaceObject_t, int, int, int, unsigned); } 
#line 334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_i64_trap(cudaSurfaceObject_t, int, int, int, unsigned __int64); } 
#line 335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v2i8_trap(cudaSurfaceObject_t, int, int, int, uchar2); } 
#line 336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v2i16_trap(cudaSurfaceObject_t, int, int, int, ushort2); } 
#line 337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v2i32_trap(cudaSurfaceObject_t, int, int, int, uint2); } 
#line 338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v2i64_trap(cudaSurfaceObject_t, int, int, int, ulonglong2); } 
#line 339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v4i8_trap(cudaSurfaceObject_t, int, int, int, uchar4); } 
#line 340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v4i16_trap(cudaSurfaceObject_t, int, int, int, ushort4); } 
#line 341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v4i32_trap(cudaSurfaceObject_t, int, int, int, uint4); } 
#line 342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_i8_trap(cudaSurfaceObject_t, int, int, int, unsigned char); } 
#line 343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_i16_trap(cudaSurfaceObject_t, int, int, int, unsigned short); } 
#line 344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_i32_trap(cudaSurfaceObject_t, int, int, int, unsigned); } 
#line 345 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_i64_trap(cudaSurfaceObject_t, int, int, int, unsigned __int64); } 
#line 346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v2i8_trap(cudaSurfaceObject_t, int, int, int, uchar2); } 
#line 347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v2i16_trap(cudaSurfaceObject_t, int, int, int, ushort2); } 
#line 348 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v2i32_trap(cudaSurfaceObject_t, int, int, int, uint2); } 
#line 349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v2i64_trap(cudaSurfaceObject_t, int, int, int, ulonglong2); } 
#line 350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v4i8_trap(cudaSurfaceObject_t, int, int, int, uchar4); } 
#line 351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v4i16_trap(cudaSurfaceObject_t, int, int, int, ushort4); } 
#line 352 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v4i32_trap(cudaSurfaceObject_t, int, int, int, uint4); } 
#line 353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_i8_zero(cudaSurfaceObject_t, int, unsigned char); } 
#line 354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_i16_zero(cudaSurfaceObject_t, int, unsigned short); } 
#line 355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_i32_zero(cudaSurfaceObject_t, int, unsigned); } 
#line 356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_i64_zero(cudaSurfaceObject_t, int, unsigned __int64); } 
#line 357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v2i8_zero(cudaSurfaceObject_t, int, uchar2); } 
#line 358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v2i16_zero(cudaSurfaceObject_t, int, ushort2); } 
#line 359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v2i32_zero(cudaSurfaceObject_t, int, uint2); } 
#line 360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v2i64_zero(cudaSurfaceObject_t, int, ulonglong2); } 
#line 361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v4i8_zero(cudaSurfaceObject_t, int, uchar4); } 
#line 362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v4i16_zero(cudaSurfaceObject_t, int, ushort4); } 
#line 363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v4i32_zero(cudaSurfaceObject_t, int, uint4); } 
#line 364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_i8_zero(cudaSurfaceObject_t, int, int, unsigned char); } 
#line 365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_i16_zero(cudaSurfaceObject_t, int, int, unsigned short); } 
#line 366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_i32_zero(cudaSurfaceObject_t, int, int, unsigned); } 
#line 367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_i64_zero(cudaSurfaceObject_t, int, int, unsigned __int64); } 
#line 368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v2i8_zero(cudaSurfaceObject_t, int, int, uchar2); } 
#line 369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v2i16_zero(cudaSurfaceObject_t, int, int, ushort2); } 
#line 370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v2i32_zero(cudaSurfaceObject_t, int, int, uint2); } 
#line 371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v2i64_zero(cudaSurfaceObject_t, int, int, ulonglong2); } 
#line 372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v4i8_zero(cudaSurfaceObject_t, int, int, uchar4); } 
#line 373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v4i16_zero(cudaSurfaceObject_t, int, int, ushort4); } 
#line 374 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v4i32_zero(cudaSurfaceObject_t, int, int, uint4); } 
#line 375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_i8_zero(cudaSurfaceObject_t, int, int, unsigned char); } 
#line 376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_i16_zero(cudaSurfaceObject_t, int, int, unsigned short); } 
#line 377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_i32_zero(cudaSurfaceObject_t, int, int, unsigned); } 
#line 378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_i64_zero(cudaSurfaceObject_t, int, int, unsigned __int64); } 
#line 379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v2i8_zero(cudaSurfaceObject_t, int, int, uchar2); } 
#line 380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v2i16_zero(cudaSurfaceObject_t, int, int, ushort2); } 
#line 381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v2i32_zero(cudaSurfaceObject_t, int, int, uint2); } 
#line 382 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v2i64_zero(cudaSurfaceObject_t, int, int, ulonglong2); } 
#line 383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v4i8_zero(cudaSurfaceObject_t, int, int, uchar4); } 
#line 384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v4i16_zero(cudaSurfaceObject_t, int, int, ushort4); } 
#line 385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v4i32_zero(cudaSurfaceObject_t, int, int, uint4); } 
#line 386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_i8_zero(cudaSurfaceObject_t, int, int, int, unsigned char); } 
#line 387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_i16_zero(cudaSurfaceObject_t, int, int, int, unsigned short); } 
#line 388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_i32_zero(cudaSurfaceObject_t, int, int, int, unsigned); } 
#line 389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_i64_zero(cudaSurfaceObject_t, int, int, int, unsigned __int64); } 
#line 390 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v2i8_zero(cudaSurfaceObject_t, int, int, int, uchar2); } 
#line 391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v2i16_zero(cudaSurfaceObject_t, int, int, int, ushort2); } 
#line 392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v2i32_zero(cudaSurfaceObject_t, int, int, int, uint2); } 
#line 393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v2i64_zero(cudaSurfaceObject_t, int, int, int, ulonglong2); } 
#line 394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v4i8_zero(cudaSurfaceObject_t, int, int, int, uchar4); } 
#line 395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v4i16_zero(cudaSurfaceObject_t, int, int, int, ushort4); } 
#line 396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v4i32_zero(cudaSurfaceObject_t, int, int, int, uint4); } 
#line 397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_i8_zero(cudaSurfaceObject_t, int, int, int, unsigned char); } 
#line 398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_i16_zero(cudaSurfaceObject_t, int, int, int, unsigned short); } 
#line 399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_i32_zero(cudaSurfaceObject_t, int, int, int, unsigned); } 
#line 400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_i64_zero(cudaSurfaceObject_t, int, int, int, unsigned __int64); } 
#line 401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v2i8_zero(cudaSurfaceObject_t, int, int, int, uchar2); } 
#line 402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v2i16_zero(cudaSurfaceObject_t, int, int, int, ushort2); } 
#line 403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v2i32_zero(cudaSurfaceObject_t, int, int, int, uint2); } 
#line 404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v2i64_zero(cudaSurfaceObject_t, int, int, int, ulonglong2); } 
#line 405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v4i8_zero(cudaSurfaceObject_t, int, int, int, uchar4); } 
#line 406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v4i16_zero(cudaSurfaceObject_t, int, int, int, ushort4); } 
#line 407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v4i32_zero(cudaSurfaceObject_t, int, int, int, uint4); } 
#line 410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(char * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(signed char * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(char1 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 416 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(unsigned char * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(uchar1 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(short * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(short1 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(unsigned short * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 426 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(ushort1 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 428 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(int * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(int1 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(unsigned * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(uint1 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(__int64 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(longlong1 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(unsigned __int64 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(ulonglong1 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(float * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 446 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(float1 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 454 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(char2 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(uchar2 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(short2 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(ushort2 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 462 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(int2 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 464 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(uint2 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(longlong2 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 468 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(ulonglong2 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(float2 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 478 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(char4 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 480 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(uchar4 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(short4 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(ushort4 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(int4 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(uint4 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 490 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(float4 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 498 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
template< class T> static __forceinline T 
#line 499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
surf1Dread(::cudaSurfaceObject_t surfObject, int x, ::cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)boundaryMode;
#line 504 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
::exit(___);}











#line 517 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
#line 512 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(char * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(signed char * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 516 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(char1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(unsigned char * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 520 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(uchar1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 522 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(short * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 524 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(short1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 526 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(unsigned short * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 528 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(ushort1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 530 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(int * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 532 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(int1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 534 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(unsigned * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(uint1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(__int64 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(longlong1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(unsigned __int64 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 544 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(ulonglong1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 546 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(float * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 548 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(float1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 556 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(char2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(uchar2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(short2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 562 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(ushort2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(int2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 566 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(uint2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(longlong2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 570 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(ulonglong2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(float2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 580 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(char4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 582 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(uchar4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(short4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(ushort4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 588 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(int4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 590 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(uint4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 592 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(float4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
template< class T> static __forceinline T 
#line 601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
surf2Dread(::cudaSurfaceObject_t surfObject, int x, int y, ::cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 602 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 606 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
::exit(___);}











#line 619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
#line 614 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(char * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(signed char * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(char1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 620 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(unsigned char * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 622 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(uchar1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(short * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(short1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 628 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(unsigned short * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(ushort1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(int * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 634 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(int1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 636 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(unsigned * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(uint1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(__int64 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 642 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(longlong1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(unsigned __int64 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(ulonglong1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 648 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(float * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 650 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(float1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 658 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(char2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(uchar2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(short2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(ushort2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(int2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(uint2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(longlong2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 672 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(ulonglong2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(float2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 682 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(char4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 684 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(uchar4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(short4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(ushort4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 690 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(int4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(uint4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(float4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
template< class T> static __forceinline T 
#line 703 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
surf3Dread(::cudaSurfaceObject_t surfObject, int x, int y, int z, ::cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 704 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 708 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
::exit(___);}











#line 721 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
#line 716 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(char * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(signed char * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 720 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(char1 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(unsigned char * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 724 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(uchar1 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(short * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 728 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(short1 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(unsigned short * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 732 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(ushort1 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 734 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(int * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(int1 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 738 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(unsigned * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(uint1 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 742 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(__int64 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 744 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(longlong1 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 746 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(unsigned __int64 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(ulonglong1 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(float * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 752 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(float1 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 760 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(char2 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 762 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(uchar2 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 764 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(short2 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(ushort2 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 768 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(int2 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 770 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(uint2 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 772 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(longlong2 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 774 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(ulonglong2 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 776 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(float2 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 784 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(char4 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 786 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(uchar4 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(short4 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 790 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(ushort4 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 792 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(int4 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 794 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(uint4 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(float4 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 804 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
template< class T> static __forceinline T 
#line 805 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
surf1DLayeredread(::cudaSurfaceObject_t surfObject, int x, int layer, ::cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 806 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 810 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
::exit(___);}











#line 823 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
#line 818 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(char * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 820 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(signed char * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 822 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(char1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 824 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(unsigned char * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 826 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(uchar1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 828 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(short * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 830 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(short1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 832 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(unsigned short * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 834 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(ushort1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 836 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(int * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 838 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(int1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 840 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(unsigned * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(uint1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 844 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(__int64 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 846 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(longlong1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(unsigned __int64 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 850 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(ulonglong1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 852 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(float * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 854 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(float1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 862 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(char2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 864 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(uchar2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 866 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(short2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(ushort2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 870 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(int2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 872 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(uint2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(longlong2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(ulonglong2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 878 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(float2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(char4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(uchar4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(short4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 892 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(ushort4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 894 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(int4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 896 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(uint4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(float4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
template< class T> static __forceinline T 
#line 907 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
surf2DLayeredread(::cudaSurfaceObject_t surfObject, int x, int y, int layer, ::cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 908 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 912 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
::exit(___);}











#line 925 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
#line 920 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(char * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(signed char * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 924 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(char1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 926 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(unsigned char * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(uchar1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(short * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(short1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 934 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(unsigned short * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(ushort1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(int * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 940 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(int1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 942 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(unsigned * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 944 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(uint1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(__int64 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 948 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(longlong1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 950 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(unsigned __int64 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(ulonglong1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 954 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(float * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 956 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(float1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 964 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(char2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 966 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(uchar2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 968 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(short2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(ushort2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(int2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 974 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(uint2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 976 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(longlong2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(ulonglong2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(float2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 988 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(char4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 990 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(uchar4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(short4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 994 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(ushort4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(int4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(uint4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(float4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1008 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
template< class T> static __forceinline T 
#line 1009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
surfCubemapread(::cudaSurfaceObject_t surfObject, int x, int y, int face, ::cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1010 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 1014 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
::exit(___);}











#line 1027 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
#line 1022 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(char * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(signed char * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1026 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(char1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1028 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(unsigned char * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(uchar1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(short * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1034 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(short1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1036 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(unsigned short * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1038 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(ushort1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1040 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(int * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1042 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(int1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(unsigned * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1046 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(uint1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(__int64 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1050 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(longlong1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1052 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(unsigned __int64 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(ulonglong1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1056 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(float * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(float1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1066 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(char2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1068 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(uchar2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1070 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(short2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1072 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(ushort2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1074 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(int2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1076 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(uint2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1078 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(longlong2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1080 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(ulonglong2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1082 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(float2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1090 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(char4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1092 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(uchar4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1094 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(short4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1096 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(ushort4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1098 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(int4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(uint4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(float4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
template< class T> static __forceinline T 
#line 1111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
surfCubemapLayeredread(::cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, ::cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 1116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
::exit(___);}











#line 1129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
#line 1124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(char data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(signed char data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(char1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1132 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(short data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(short1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(int data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(int1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(__int64 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(unsigned __int64 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(float data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(float1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(char2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(short2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(int2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(float2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(char4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(short4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(int4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(float4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1218 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1232 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(__int64 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(unsigned __int64 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1258 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1292 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1307 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1319 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1327 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(__int64 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(unsigned __int64 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1345 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1361 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1371 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(char data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1393 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(short data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(int data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1415 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(__int64 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1419 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(unsigned __int64 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1423 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(float data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1435 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1439 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1441 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1447 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1449 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1457 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1461 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1465 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1477 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1485 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1491 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1495 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1497 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1501 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1503 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(__int64 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1505 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1507 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(unsigned __int64 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1509 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1521 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1523 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1525 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1527 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1533 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1535 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1537 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1547 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1549 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1553 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1565 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1567 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1569 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1573 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1577 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1579 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1585 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1587 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1591 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(__int64 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1593 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(unsigned __int64 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1599 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1609 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1615 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1621 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1623 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1633 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1635 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1639 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1641 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1643 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1655 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1657 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1659 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1663 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1665 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1669 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1671 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1673 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1675 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1677 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1679 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(__int64 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(unsigned __int64 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1687 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1689 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1697 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1703 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1705 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1707 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1709 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1721 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1727 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1729 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1733 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 76 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(char *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 77 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 89 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 91 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(signed char *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 92 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 106 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(char1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 119 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(unsigned char *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(uchar1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(short *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 164 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(short1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(unsigned short *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(ushort1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(int *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(int1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(unsigned *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(uint1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 271 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(__int64 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(longlong1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 287 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(unsigned __int64 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(ulonglong1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 331 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(float *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 332 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(float1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 367 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(char2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 382 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(uchar2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 397 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(short2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 439 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(ushort2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 454 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(int2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 428 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 442 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(uint2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 455 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 457 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(longlong2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(ulonglong2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 473 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 485 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(float2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 508 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(char4 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 509 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 521 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 550 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 523 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(uchar4 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 524 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 536 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 565 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(short4 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 539 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 580 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 553 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(ushort4 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 566 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(int4 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 569 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(uint4 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(float4 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 599 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(char *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 620 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 634 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(signed char *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 635 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 647 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 676 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 649 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(char1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 650 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 662 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 691 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(unsigned char *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 665 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 677 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 679 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(uchar1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 692 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 721 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(short *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 695 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 707 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 709 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(short1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 724 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(unsigned short *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 737 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 739 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(ushort1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 752 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 781 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 754 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(int *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 755 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 767 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 769 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(int1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 770 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 782 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 811 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 784 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(unsigned *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 785 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 797 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 826 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 799 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(uint1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 800 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 812 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 841 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 814 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(__int64 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 815 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 827 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(longlong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 830 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 844 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(unsigned __int64 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 845 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 857 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 859 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(ulonglong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 860 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 872 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 901 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(float *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 875 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 889 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(float1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 902 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 910 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(char2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 923 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 925 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(uchar2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 926 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 967 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 940 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(short2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 941 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 953 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 982 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 955 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(ushort2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 956 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 968 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 997 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(int2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 983 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1012 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 985 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(uint2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 986 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1027 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(longlong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 1001 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 1013 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1042 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1015 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(ulonglong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 1016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 1028 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1057 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(float2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 1031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 1043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1072 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1051 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(char4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 1052 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 1064 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1093 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1066 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(uchar4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 1067 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 1079 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1081 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(short4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 1082 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 1094 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1096 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(ushort4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 1097 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 1109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1111 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(int4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 1112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 1124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(uint4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 1127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 1139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(float4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 1142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 1154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1177 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(signed char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1190 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1219 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1192 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(char1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1193 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1205 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1207 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(unsigned char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1220 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(uchar1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(short1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1267 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(unsigned short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(ushort1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1297 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(int *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(int1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1327 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(unsigned *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(uint1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(__int64 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1358 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(longlong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1387 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(unsigned __int64 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1400 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1429 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(ulonglong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1403 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1415 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(float *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1432 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(float1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1445 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1474 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1453 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(char2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1454 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1495 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1468 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(uchar2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1510 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(short2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1496 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1525 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1498 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(ushort2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(int2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1526 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1528 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(uint2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1541 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1570 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1543 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(longlong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1544 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1556 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1585 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(ulonglong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1559 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1573 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(float2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1574 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1615 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1594 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(char4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1595 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1607 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1636 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1609 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(uchar4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1610 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1622 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1651 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(short4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1639 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(ushort4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1652 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(int4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1655 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1669 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(uint4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1682 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1684 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(float4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1697 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1705 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(char *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1720 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(signed char *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1721 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1733 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1762 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(char1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1736 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1777 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(unsigned char *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1763 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1792 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1765 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(uchar1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1778 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1807 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(short *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1781 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1793 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1822 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1795 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(short1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1808 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1837 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1810 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(unsigned short *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1811 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1823 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1852 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1825 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(ushort1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1826 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1838 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1840 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(int *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1841 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1855 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(int1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1870 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(unsigned *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1912 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(uint1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1886 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1927 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1900 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(__int64 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1901 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1913 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1942 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1915 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(longlong1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(unsigned __int64 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(ulonglong1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1987 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1960 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(float *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1961 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1973 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2002 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1975 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(float1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1976 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1988 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 1996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(char2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1997 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2038 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2011 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(uchar2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2012 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2026 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(short2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2027 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2039 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2068 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2041 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(ushort2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2042 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2083 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2056 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(int2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2057 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2098 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2071 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(uint2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2072 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2084 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(longlong2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2087 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2099 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(ulonglong2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2102 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(float2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(char4 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(uchar4 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2167 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(short4 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(ushort4 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(int4 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(uint4 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(float4 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2290 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(signed char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2305 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(char1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2320 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2293 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(unsigned char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2306 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(uchar1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2323 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2336 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(short1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2351 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(unsigned short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(ushort1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(int *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2384 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(int1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2413 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(unsigned *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2426 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2455 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2428 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(uint1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2429 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2441 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(__int64 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2485 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2458 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(longlong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2471 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2473 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(unsigned __int64 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2474 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2488 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(ulonglong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2501 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2530 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2503 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(float *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2504 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2516 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(float1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2519 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2539 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(char2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(uchar2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2567 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2596 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2569 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(short2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2570 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2582 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(ushort2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2585 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2599 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(int2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2612 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2641 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2614 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(uint2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2615 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2627 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2629 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(longlong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2630 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2642 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2671 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(ulonglong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2657 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2659 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(float2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2672 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(char4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2693 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2695 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(uchar4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2708 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2737 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(short4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2711 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2752 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(ushort4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2738 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2767 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(int4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2741 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2782 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2755 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(uint4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2756 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2768 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2797 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2770 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(float4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2771 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2783 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2812 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2791 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 2792 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 2804 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2833 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2806 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(signed char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 2807 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 2819 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2821 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(char1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 2822 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 2834 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2836 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(unsigned char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 2837 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 2849 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2878 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2851 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(uchar1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 2852 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 2864 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2866 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 2867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 2879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2908 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2881 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(short1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 2882 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 2894 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2923 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2896 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(unsigned short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 2897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 2909 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2938 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(ushort1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 2912 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 2924 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2953 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2926 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(int *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 2927 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 2939 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2968 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2941 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(int1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 2942 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 2954 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2983 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2956 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(unsigned *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 2957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 2969 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(uint1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 2972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 2984 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3013 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 2986 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(__int64 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 2987 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 2999 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3028 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3001 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(longlong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3002 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3014 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3016 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(unsigned __int64 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3029 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(ulonglong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3073 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3046 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(float *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3059 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3088 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3061 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(float1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3074 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3082 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(char2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3083 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3095 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3124 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3097 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(uchar2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3098 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(short2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3154 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(ushort2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(int2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(uint2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3158 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(longlong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3187 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(ulonglong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(float2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(char4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(uchar4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3280 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(short4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(ushort4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3310 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(int4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3284 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(uint4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3313 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(float4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3326 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3335 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3349 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(signed char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3364 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(char1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3377 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3406 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(unsigned char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3380 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(uchar1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3410 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(short1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3439 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(unsigned short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3452 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3481 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3454 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(ushort1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3455 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3496 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(int *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3484 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(int1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3485 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3497 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3526 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(unsigned *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3512 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3541 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3514 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(uint1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3527 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3556 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(__int64 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3530 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3544 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(longlong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3559 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(unsigned __int64 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3560 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3572 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3574 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(ulonglong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3587 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(float *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3590 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3602 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3604 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(float1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3617 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3646 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(char2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(uchar2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3641 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3682 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3655 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(short2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3656 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3697 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(ushort2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3671 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3712 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3685 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(int2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3698 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3727 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3700 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(uint2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3742 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(longlong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3716 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3728 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3757 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3730 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(ulonglong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3743 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3772 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(float2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3746 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3787 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(char4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3767 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3779 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3808 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3781 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(uchar4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3782 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3794 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3823 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(short4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3797 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3809 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3838 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3811 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(ushort4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3812 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3824 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3826 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(int4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3827 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3839 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3841 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(uint4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3854 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3856 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(float4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3857 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 3869 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3877 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(char data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 3878 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 3888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 3913 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(signed char data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 3891 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 3901 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 3926 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3903 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(char1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 3904 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 3914 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 3939 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 3917 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 3927 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 3952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3929 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 3930 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 3940 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 3965 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3942 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(short data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 3943 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 3953 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 3978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3955 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(short1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 3956 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 3966 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 3991 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3968 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 3969 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 3979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4004 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3981 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 3982 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 3992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 3994 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(int data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 3995 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4005 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(int1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4008 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4018 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4020 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4021 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4056 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4033 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4034 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4046 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(__int64 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4057 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4082 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4059 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4060 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4070 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4095 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4072 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(unsigned __int64 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4073 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4083 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4085 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4096 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4098 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(float data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4099 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 4141 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(float1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4115 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 4157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(char2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4137 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4150 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4162 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(short2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4163 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4175 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4176 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4188 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(int2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4189 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4201 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4202 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4237 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4215 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4250 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4228 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(float2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4241 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 4283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4262 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(char4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4275 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4276 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4288 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(short4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4289 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4301 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4302 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4337 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(int4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4315 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4350 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4327 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4328 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4338 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(float4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4341 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 4383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4362 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4363 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4375 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4376 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4388 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4389 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4401 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4402 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4414 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4415 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4450 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4427 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4428 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4440 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4441 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4476 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4453 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4454 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4464 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4467 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4477 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4502 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4479 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4480 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4490 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4492 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4493 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4503 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4528 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4505 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4506 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4516 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4541 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4518 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4519 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4531 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(__int64 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4532 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4567 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4544 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4545 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4580 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(unsigned __int64 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4593 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4570 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4581 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4606 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 4626 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4599 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4600 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 4642 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4621 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4622 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4657 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4634 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4635 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4647 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4648 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4658 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4660 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4661 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4671 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4673 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4674 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4684 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4709 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4686 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4687 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4697 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4722 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4700 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4735 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4712 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4713 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4723 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4726 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4739 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 4768 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4747 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4748 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4783 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4760 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4761 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4771 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4773 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4774 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4784 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4809 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4786 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4787 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4797 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4822 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4799 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4800 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4810 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4835 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4812 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4813 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4823 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4825 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4826 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4839 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 4868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4848 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 4849 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 4859 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4884 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4861 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 4862 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 4872 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4874 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 4875 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 4885 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4910 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 4888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 4898 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4923 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4900 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 4901 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 4911 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4913 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 4914 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 4924 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4949 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4926 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 4927 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 4937 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4962 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4939 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 4940 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 4950 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4975 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4952 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 4953 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 4963 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4988 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4965 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 4966 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 4976 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5001 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4978 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 4979 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 4989 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5014 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 4991 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 4992 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5002 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5027 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5004 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5005 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5015 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5040 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5017 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(__int64 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5018 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5028 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5030 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5031 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5041 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5066 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5043 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(unsigned __int64 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5044 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5054 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5079 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5056 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5057 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5067 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5092 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5070 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5083 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 5112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5085 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5099 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 5128 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5107 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5108 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5118 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5120 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5131 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5133 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5134 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5144 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5146 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5147 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5157 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5159 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5160 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5170 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5172 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5183 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5208 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5185 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5196 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5221 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5198 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5211 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 5254 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5233 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5234 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5244 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5246 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5247 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5257 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5259 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5260 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5270 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5272 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5273 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5283 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5308 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5285 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5286 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5296 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5321 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5298 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5299 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5309 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5311 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5312 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5325 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 5354 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(char data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5344 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5346 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5347 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5357 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5382 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5359 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5360 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5370 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5372 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5373 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5383 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5385 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5386 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5396 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5398 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(short data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5399 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5409 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5411 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5412 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5422 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5447 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5424 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5425 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5435 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5437 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5438 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5448 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5473 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5450 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(int data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5451 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5461 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5463 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5464 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5474 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5476 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5477 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5487 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5512 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5489 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5490 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5500 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5525 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5502 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(__int64 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5503 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5515 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5516 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5526 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5528 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(unsigned __int64 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5529 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5539 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5564 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5541 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5542 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5552 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5577 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(float data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5555 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5568 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 5597 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5570 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5571 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5584 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 5613 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5592 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5593 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5603 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5628 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5605 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5606 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5616 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5641 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5618 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5629 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5631 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5632 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5642 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5644 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5645 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5655 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5657 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5658 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5693 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5671 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5681 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5706 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5683 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5684 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5694 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5696 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5697 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5710 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 5739 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5718 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5719 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5729 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5754 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5731 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5732 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5742 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5767 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5744 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5745 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5755 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5757 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5758 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5768 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5793 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5770 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5771 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5781 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5806 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5783 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5784 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5794 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5819 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5796 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5797 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5810 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 5839 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5818 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5819 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 5829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5854 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5831 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5832 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 5842 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5844 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5845 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 5855 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5880 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5857 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5858 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 5868 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5870 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5871 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 5881 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5883 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5884 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 5894 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5919 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5896 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5897 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 5907 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5909 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5910 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 5920 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5923 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 5933 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5935 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5936 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 5946 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5948 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5949 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 5959 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5984 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5961 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5962 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 5972 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5997 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5974 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5975 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 5985 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6010 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 5987 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(__int64 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5988 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 5998 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6023 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6000 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6001 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6011 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6036 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6013 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(unsigned __int64 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6014 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6024 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6049 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6026 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6027 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6037 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6062 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6039 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6040 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6053 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 6082 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6055 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6056 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6069 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 6098 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6077 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6078 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6088 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6090 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6091 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6101 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6103 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6104 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6114 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6116 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6117 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6127 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6129 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6130 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6140 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6142 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6143 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6178 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6155 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6156 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6166 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6191 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6168 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6169 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6179 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6181 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6195 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 6224 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6203 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6204 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6214 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6216 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6217 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6227 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6229 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6230 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6240 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6242 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6243 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6253 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6278 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6255 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6256 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6291 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6268 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6269 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6279 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6281 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6282 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6295 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 6324 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6303 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6304 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6314 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6339 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6316 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6317 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6327 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6352 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6329 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6340 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6365 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6342 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6343 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6353 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6378 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6355 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6356 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6366 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6391 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6368 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6369 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6379 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6404 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6381 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6382 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6392 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6417 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6394 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6395 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6405 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6430 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6407 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6408 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6418 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6443 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6420 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6421 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6431 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6456 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6433 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6434 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6469 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6446 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6447 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6457 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6482 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6459 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6460 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6470 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6495 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6472 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(__int64 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6473 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6483 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6508 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6485 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6486 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6496 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6521 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6498 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(unsigned __int64 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6499 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6509 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6534 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6511 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6512 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6522 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6547 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6524 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6525 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6538 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 6567 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6540 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6541 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6554 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 6583 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6562 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6563 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6573 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6598 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6575 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6576 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6586 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6611 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6588 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6589 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6599 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6624 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6601 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6602 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6612 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6614 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6615 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6650 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6627 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6628 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6638 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6663 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6640 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6641 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6651 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6676 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6653 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6654 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6664 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6689 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6680 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 6709 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6688 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6689 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6699 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6724 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6701 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6702 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6712 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6737 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6714 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6715 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6725 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6750 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6727 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6728 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6738 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6763 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6740 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6741 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6751 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6776 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6753 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6754 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6764 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6789 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6766 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6767 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6780 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 6809 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6788 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 6789 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 6799 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6824 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6801 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 6802 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 6812 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6837 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6814 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 6815 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 6825 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6850 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6827 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 6828 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 6838 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6863 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6840 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 6841 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 6851 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6876 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6853 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 6854 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 6864 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6889 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6866 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 6867 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 6877 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6902 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6879 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 6880 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 6890 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6915 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6892 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 6893 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 6903 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6928 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6905 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 6906 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 6916 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6941 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6918 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 6919 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 6929 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6954 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6931 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 6932 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 6942 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6967 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6944 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 6945 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 6955 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6980 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6957 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(__int64 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 6958 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 6968 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6993 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6970 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 6971 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 6981 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 7006 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6983 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(unsigned __int64 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 6984 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 6994 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 7019 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 6996 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 6997 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 7007 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 7032 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 7009 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7010 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 7023 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 7052 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 7025 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7026 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 7039 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 7068 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 7047 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7048 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 7058 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 7083 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 7060 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7061 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 7071 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 7096 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 7073 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7074 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 7084 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 7109 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 7086 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7087 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 7097 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 7122 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 7099 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7100 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 7110 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 7135 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 7112 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7113 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 7123 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 7148 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 7125 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7126 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 7136 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 7161 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 7138 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7139 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 7149 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 7174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 7151 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7152 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 7165 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 7194 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 7173 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7174 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 7184 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 7209 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 7186 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7187 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 7197 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 7222 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 7199 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7200 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 7210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 7235 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 7212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7213 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 7223 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 7248 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 7225 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7226 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 7236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 7261 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 7238 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7239 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 7249 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 7274 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 7251 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7252 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)layerface;(void)boundaryMode;
#line 7265 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 7294 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\surface_indirect_functions.hpp"
#line 71 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_launch_parameters.h"
extern "C" const uint3 __device_builtin_variable_threadIdx; 
#line 72 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_launch_parameters.h"
extern "C" const uint3 __device_builtin_variable_blockIdx; 
#line 73 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_launch_parameters.h"
extern "C" const dim3 __device_builtin_variable_blockDim; 
#line 74 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_launch_parameters.h"
extern "C" const dim3 __device_builtin_variable_gridDim; 
#line 75 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\device_launch_parameters.h"
extern "C" const int __device_builtin_variable_warpSize; 
#line 164 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 165 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
cudaLaunchKernel(const T *
#line 166 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
func, ::dim3 
#line 167 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
gridDim, ::dim3 
#line 168 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
blockDim, void **
#line 169 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
args, ::size_t 
#line 170 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
sharedMem = 0, ::cudaStream_t 
#line 171 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
stream = 0) 
#line 173 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
{ 
#line 174 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
return ::cudaLaunchKernel((const void *)func, gridDim, blockDim, args, sharedMem, stream); 
#line 175 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
} 
#line 202 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 203 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
cudaSetupArgument(T 
#line 204 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
arg, ::size_t 
#line 205 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
offset) 
#line 207 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
{ 
#line 208 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
return ::cudaSetupArgument((const void *)(&arg), sizeof(T), offset); 
#line 209 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
} 
#line 241 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
static __inline cudaError_t cudaEventCreate(cudaEvent_t *
#line 242 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
event, unsigned 
#line 243 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
flags) 
#line 245 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
{ 
#line 246 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
return ::cudaEventCreateWithFlags(event, flags); 
#line 247 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
} 
#line 304 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
static __inline cudaError_t cudaMallocHost(void **
#line 305 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
ptr, size_t 
#line 306 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
size, unsigned 
#line 307 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
flags) 
#line 309 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
{ 
#line 310 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
return ::cudaHostAlloc(ptr, size, flags); 
#line 311 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
} 
#line 313 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 314 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
cudaHostAlloc(T **
#line 315 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
ptr, ::size_t 
#line 316 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
size, unsigned 
#line 317 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
flags) 
#line 319 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
{ 
#line 320 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
return ::cudaHostAlloc((void **)((void *)ptr), size, flags); 
#line 321 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
} 
#line 323 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 324 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
cudaHostGetDevicePointer(T **
#line 325 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
pDevice, void *
#line 326 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
pHost, unsigned 
#line 327 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
flags) 
#line 329 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
{ 
#line 330 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
return ::cudaHostGetDevicePointer((void **)((void *)pDevice), pHost, flags); 
#line 331 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
} 
#line 402 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 403 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
cudaMallocManaged(T **
#line 404 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
devPtr, ::size_t 
#line 405 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
size, unsigned 
#line 406 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
flags = 1) 
#line 408 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
{ 
#line 409 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
return ::cudaMallocManaged((void **)((void *)devPtr), size, flags); 
#line 410 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
} 
#line 478 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 479 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
cudaStreamAttachMemAsync(::cudaStream_t 
#line 480 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
stream, T *
#line 481 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
devPtr, ::size_t 
#line 482 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
length = 0, unsigned 
#line 483 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
flags = 4) 
#line 485 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
{ 
#line 486 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
return ::cudaStreamAttachMemAsync(stream, (void *)devPtr, length, flags); 
#line 487 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
} 
#line 489 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
template< class T> __inline ::cudaError_t 
#line 490 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
cudaMalloc(T **
#line 491 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
devPtr, ::size_t 
#line 492 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
size) 
#line 494 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
{ 
#line 495 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
return ::cudaMalloc((void **)((void *)devPtr), size); 
#line 496 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
} 
#line 498 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 499 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
cudaMallocHost(T **
#line 500 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
ptr, ::size_t 
#line 501 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
size, unsigned 
#line 502 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
flags = 0) 
#line 504 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
{ 
#line 505 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
return cudaMallocHost((void **)((void *)ptr), size, flags); 
#line 506 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
} 
#line 508 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 509 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
cudaMallocPitch(T **
#line 510 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
devPtr, ::size_t *
#line 511 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
pitch, ::size_t 
#line 512 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
width, ::size_t 
#line 513 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
height) 
#line 515 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
{ 
#line 516 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
return ::cudaMallocPitch((void **)((void *)devPtr), pitch, width, height); 
#line 517 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
} 
#line 554 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 555 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
cudaMemcpyToSymbol(const T &
#line 556 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
symbol, const void *
#line 557 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
src, ::size_t 
#line 558 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
count, ::size_t 
#line 559 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
offset = 0, ::cudaMemcpyKind 
#line 560 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
kind = cudaMemcpyHostToDevice) 
#line 562 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
{ 
#line 563 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
return ::cudaMemcpyToSymbol((const void *)(&symbol), src, count, offset, kind); 
#line 564 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
} 
#line 606 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 607 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
cudaMemcpyToSymbolAsync(const T &
#line 608 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
symbol, const void *
#line 609 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
src, ::size_t 
#line 610 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
count, ::size_t 
#line 611 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
offset = 0, ::cudaMemcpyKind 
#line 612 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
kind = cudaMemcpyHostToDevice, ::cudaStream_t 
#line 613 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
stream = 0) 
#line 615 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
{ 
#line 616 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
return ::cudaMemcpyToSymbolAsync((const void *)(&symbol), src, count, offset, kind, stream); 
#line 617 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
} 
#line 652 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 653 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
cudaMemcpyFromSymbol(void *
#line 654 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
dst, const T &
#line 655 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
symbol, ::size_t 
#line 656 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
count, ::size_t 
#line 657 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
offset = 0, ::cudaMemcpyKind 
#line 658 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
kind = cudaMemcpyDeviceToHost) 
#line 660 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
{ 
#line 661 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
return ::cudaMemcpyFromSymbol(dst, (const void *)(&symbol), count, offset, kind); 
#line 662 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
} 
#line 704 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 705 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
cudaMemcpyFromSymbolAsync(void *
#line 706 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
dst, const T &
#line 707 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
symbol, ::size_t 
#line 708 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
count, ::size_t 
#line 709 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
offset = 0, ::cudaMemcpyKind 
#line 710 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
kind = cudaMemcpyDeviceToHost, ::cudaStream_t 
#line 711 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
stream = 0) 
#line 713 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
{ 
#line 714 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
return ::cudaMemcpyFromSymbolAsync(dst, (const void *)(&symbol), count, offset, kind, stream); 
#line 715 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
} 
#line 737 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 738 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
cudaGetSymbolAddress(void **
#line 739 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
devPtr, const T &
#line 740 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
symbol) 
#line 742 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
{ 
#line 743 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
return ::cudaGetSymbolAddress(devPtr, (const void *)(&symbol)); 
#line 744 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
} 
#line 766 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 767 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
cudaGetSymbolSize(::size_t *
#line 768 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
size, const T &
#line 769 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
symbol) 
#line 771 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
{ 
#line 772 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
return ::cudaGetSymbolSize(size, (const void *)(&symbol)); 
#line 773 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
} 
#line 809 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static __inline ::cudaError_t 
#line 810 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
cudaBindTexture(::size_t *
#line 811 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
offset, const texture< T, dim, readMode>  &
#line 812 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
tex, const void *
#line 813 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
devPtr, const ::cudaChannelFormatDesc &
#line 814 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
desc, ::size_t 
#line 815 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
size = 4294967295U) 
#line 817 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
{ 
#line 818 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
return ::cudaBindTexture(offset, &tex, devPtr, &desc, size); 
#line 819 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
} 
#line 854 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static __inline ::cudaError_t 
#line 855 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
cudaBindTexture(::size_t *
#line 856 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
offset, const texture< T, dim, readMode>  &
#line 857 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
tex, const void *
#line 858 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
devPtr, ::size_t 
#line 859 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
size = 4294967295U) 
#line 861 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
{ 
#line 862 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
return cudaBindTexture(offset, tex, devPtr, (tex.channelDesc), size); 
#line 863 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
} 
#line 910 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static __inline ::cudaError_t 
#line 911 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
cudaBindTexture2D(::size_t *
#line 912 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
offset, const texture< T, dim, readMode>  &
#line 913 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
tex, const void *
#line 914 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
devPtr, const ::cudaChannelFormatDesc &
#line 915 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
desc, ::size_t 
#line 916 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
width, ::size_t 
#line 917 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
height, ::size_t 
#line 918 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
pitch) 
#line 920 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
{ 
#line 921 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
return ::cudaBindTexture2D(offset, &tex, devPtr, &desc, width, height, pitch); 
#line 922 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
} 
#line 968 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static __inline ::cudaError_t 
#line 969 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
cudaBindTexture2D(::size_t *
#line 970 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
offset, const texture< T, dim, readMode>  &
#line 971 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
tex, const void *
#line 972 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
devPtr, ::size_t 
#line 973 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
width, ::size_t 
#line 974 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
height, ::size_t 
#line 975 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
pitch) 
#line 977 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
{ 
#line 978 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
return ::cudaBindTexture2D(offset, &tex, devPtr, &(tex.channelDesc), width, height, pitch); 
#line 979 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
} 
#line 1010 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static __inline ::cudaError_t 
#line 1011 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
cudaBindTextureToArray(const texture< T, dim, readMode>  &
#line 1012 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
tex, ::cudaArray_const_t 
#line 1013 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
array, const ::cudaChannelFormatDesc &
#line 1014 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
desc) 
#line 1016 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
{ 
#line 1017 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
return ::cudaBindTextureToArray(&tex, array, &desc); 
#line 1018 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
} 
#line 1048 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static __inline ::cudaError_t 
#line 1049 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
cudaBindTextureToArray(const texture< T, dim, readMode>  &
#line 1050 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
tex, ::cudaArray_const_t 
#line 1051 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
array) 
#line 1053 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
{ 
#line 1054 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
::cudaChannelFormatDesc desc; 
#line 1055 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
::cudaError_t err = ::cudaGetChannelDesc(&desc, array); 
#line 1057 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
return (err == (cudaSuccess)) ? cudaBindTextureToArray(tex, array, desc) : err; 
#line 1058 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
} 
#line 1089 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static __inline ::cudaError_t 
#line 1090 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
cudaBindTextureToMipmappedArray(const texture< T, dim, readMode>  &
#line 1091 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
tex, ::cudaMipmappedArray_const_t 
#line 1092 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
mipmappedArray, const ::cudaChannelFormatDesc &
#line 1093 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
desc) 
#line 1095 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
{ 
#line 1096 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
return ::cudaBindTextureToMipmappedArray(&tex, mipmappedArray, &desc); 
#line 1097 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
} 
#line 1127 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static __inline ::cudaError_t 
#line 1128 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
cudaBindTextureToMipmappedArray(const texture< T, dim, readMode>  &
#line 1129 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
tex, ::cudaMipmappedArray_const_t 
#line 1130 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
mipmappedArray) 
#line 1132 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
{ 
#line 1133 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
::cudaChannelFormatDesc desc; 
#line 1134 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
::cudaArray_t levelArray; 
#line 1135 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
::cudaError_t err = ::cudaGetMipmappedArrayLevel(&levelArray, mipmappedArray, 0); 
#line 1137 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
if (err != (cudaSuccess)) { 
#line 1138 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
return err; 
#line 1139 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
}  
#line 1140 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
err = ::cudaGetChannelDesc(&desc, levelArray); 
#line 1142 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
return (err == (cudaSuccess)) ? cudaBindTextureToMipmappedArray(tex, mipmappedArray, desc) : err; 
#line 1143 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
} 
#line 1166 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static __inline ::cudaError_t 
#line 1167 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
cudaUnbindTexture(const texture< T, dim, readMode>  &
#line 1168 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
tex) 
#line 1170 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
{ 
#line 1171 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
return ::cudaUnbindTexture(&tex); 
#line 1172 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
} 
#line 1200 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static __inline ::cudaError_t 
#line 1201 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
cudaGetTextureAlignmentOffset(::size_t *
#line 1202 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
offset, const texture< T, dim, readMode>  &
#line 1203 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
tex) 
#line 1205 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
{ 
#line 1206 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
return ::cudaGetTextureAlignmentOffset(offset, &tex); 
#line 1207 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
} 
#line 1252 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 1253 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
cudaFuncSetCacheConfig(T *
#line 1254 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
func, ::cudaFuncCache 
#line 1255 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
cacheConfig) 
#line 1257 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
{ 
#line 1258 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
return ::cudaFuncSetCacheConfig((const void *)func, cacheConfig); 
#line 1259 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
} 
#line 1261 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 1262 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
cudaFuncSetSharedMemConfig(T *
#line 1263 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
func, ::cudaSharedMemConfig 
#line 1264 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
config) 
#line 1266 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
{ 
#line 1267 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
return ::cudaFuncSetSharedMemConfig((const void *)func, config); 
#line 1268 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
} 
#line 1297 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
template< class T> __inline ::cudaError_t 
#line 1298 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
cudaOccupancyMaxActiveBlocksPerMultiprocessor(int *
#line 1299 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
numBlocks, T 
#line 1300 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
func, int 
#line 1301 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
blockSize, ::size_t 
#line 1302 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
dynamicSMemSize) 
#line 1303 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
{ 
#line 1304 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
return ::cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(numBlocks, (const void *)func, blockSize, dynamicSMemSize, 0); 
#line 1305 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
} 
#line 1348 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
template< class T> __inline ::cudaError_t 
#line 1349 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int *
#line 1350 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
numBlocks, T 
#line 1351 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
func, int 
#line 1352 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
blockSize, ::size_t 
#line 1353 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
dynamicSMemSize, unsigned 
#line 1354 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
flags) 
#line 1355 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
{ 
#line 1356 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
return ::cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(numBlocks, (const void *)func, blockSize, dynamicSMemSize, flags); 
#line 1357 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
} 
#line 1362 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
class __cudaOccupancyB2DHelper { 
#line 1363 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
size_t n; 
#line 1365 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
public: __cudaOccupancyB2DHelper(size_t n_) : n(n_) { } 
#line 1366 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
size_t operator()(int) 
#line 1367 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
{ 
#line 1368 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
return n; 
#line 1369 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
} 
#line 1370 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
}; 
#line 1417 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
template< class UnaryFunction, class T> static __inline ::cudaError_t 
#line 1418 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
cudaOccupancyMaxPotentialBlockSizeVariableSMemWithFlags(int *
#line 1419 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
minGridSize, int *
#line 1420 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
blockSize, T 
#line 1421 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
func, UnaryFunction 
#line 1422 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
blockSizeToDynamicSMemSize, int 
#line 1423 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
blockSizeLimit = 0, unsigned 
#line 1424 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
flags = 0) 
#line 1425 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
{ 
#line 1426 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
::cudaError_t status; 
#line 1429 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
int device; 
#line 1430 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
::cudaFuncAttributes attr; 
#line 1433 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
int maxThreadsPerMultiProcessor; 
#line 1434 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
int warpSize; 
#line 1435 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
int devMaxThreadsPerBlock; 
#line 1436 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
int multiProcessorCount; 
#line 1437 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
int funcMaxThreadsPerBlock; 
#line 1438 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
int occupancyLimit; 
#line 1439 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
int granularity; 
#line 1442 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
int maxBlockSize = 0; 
#line 1443 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
int numBlocks = 0; 
#line 1444 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
int maxOccupancy = 0; 
#line 1447 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
int blockSizeToTryAligned; 
#line 1448 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
int blockSizeToTry; 
#line 1449 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
int blockSizeLimitAligned; 
#line 1450 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
int occupancyInBlocks; 
#line 1451 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
int occupancyInThreads; 
#line 1452 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
int dynamicSMemSize; 
#line 1458 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
if (((!minGridSize) || (!blockSize)) || (!func)) { 
#line 1459 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
return cudaErrorInvalidValue; 
#line 1460 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
}  
#line 1466 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
status = ::cudaGetDevice(&device); 
#line 1467 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
if (status != (cudaSuccess)) { 
#line 1468 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
return status; 
#line 1469 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
}  
#line 1471 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
status = cudaDeviceGetAttribute(&maxThreadsPerMultiProcessor, cudaDevAttrMaxThreadsPerMultiProcessor, device); 
#line 1475 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
if (status != (cudaSuccess)) { 
#line 1476 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
return status; 
#line 1477 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
}  
#line 1479 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
status = cudaDeviceGetAttribute(&warpSize, cudaDevAttrWarpSize, device); 
#line 1483 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
if (status != (cudaSuccess)) { 
#line 1484 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
return status; 
#line 1485 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
}  
#line 1487 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
status = cudaDeviceGetAttribute(&devMaxThreadsPerBlock, cudaDevAttrMaxThreadsPerBlock, device); 
#line 1491 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
if (status != (cudaSuccess)) { 
#line 1492 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
return status; 
#line 1493 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
}  
#line 1495 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
status = cudaDeviceGetAttribute(&multiProcessorCount, cudaDevAttrMultiProcessorCount, device); 
#line 1499 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
if (status != (cudaSuccess)) { 
#line 1500 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
return status; 
#line 1501 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
}  
#line 1503 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
status = cudaFuncGetAttributes(&attr, func); 
#line 1504 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
if (status != (cudaSuccess)) { 
#line 1505 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
return status; 
#line 1506 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
}  
#line 1508 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
funcMaxThreadsPerBlock = (attr.maxThreadsPerBlock); 
#line 1514 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
occupancyLimit = maxThreadsPerMultiProcessor; 
#line 1515 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
granularity = warpSize; 
#line 1517 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
if (blockSizeLimit == 0) { 
#line 1518 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
blockSizeLimit = devMaxThreadsPerBlock; 
#line 1519 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
}  
#line 1521 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
if (devMaxThreadsPerBlock < blockSizeLimit) { 
#line 1522 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
blockSizeLimit = devMaxThreadsPerBlock; 
#line 1523 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
}  
#line 1525 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
if (funcMaxThreadsPerBlock < blockSizeLimit) { 
#line 1526 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
blockSizeLimit = funcMaxThreadsPerBlock; 
#line 1527 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
}  
#line 1529 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
blockSizeLimitAligned = (((blockSizeLimit + (granularity - 1)) / granularity) * granularity); 
#line 1531 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
for (blockSizeToTryAligned = blockSizeLimitAligned; blockSizeToTryAligned > 0; blockSizeToTryAligned -= granularity) { 
#line 1535 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
if (blockSizeLimit < blockSizeToTryAligned) { 
#line 1536 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
blockSizeToTry = blockSizeLimit; 
#line 1537 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
} else { 
#line 1538 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
blockSizeToTry = blockSizeToTryAligned; 
#line 1539 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
}  
#line 1541 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
dynamicSMemSize = blockSizeToDynamicSMemSize(blockSizeToTry); 
#line 1543 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
status = cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(&occupancyInBlocks, func, blockSizeToTry, dynamicSMemSize, flags); 
#line 1550 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
if (status != (cudaSuccess)) { 
#line 1551 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
return status; 
#line 1552 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
}  
#line 1554 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
occupancyInThreads = (blockSizeToTry * occupancyInBlocks); 
#line 1556 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
if (occupancyInThreads > maxOccupancy) { 
#line 1557 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
maxBlockSize = blockSizeToTry; 
#line 1558 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
numBlocks = occupancyInBlocks; 
#line 1559 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
maxOccupancy = occupancyInThreads; 
#line 1560 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
}  
#line 1564 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
if (occupancyLimit == maxOccupancy) { 
#line 1565 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
break; 
#line 1566 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
}  
#line 1567 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
}  
#line 1575 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
(*minGridSize) = (numBlocks * multiProcessorCount); 
#line 1576 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
(*blockSize) = maxBlockSize; 
#line 1578 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
return status; 
#line 1579 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
} 
#line 1615 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 1616 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
cudaOccupancyMaxPotentialBlockSize(int *
#line 1617 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
minGridSize, int *
#line 1618 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
blockSize, T 
#line 1619 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
func, ::size_t 
#line 1620 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
dynamicSMemSize = 0, int 
#line 1621 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
blockSizeLimit = 0) 
#line 1622 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
{ 
#line 1623 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
return cudaOccupancyMaxPotentialBlockSizeVariableSMemWithFlags(minGridSize, blockSize, func, ((::__cudaOccupancyB2DHelper)(dynamicSMemSize)), blockSizeLimit, 0); 
#line 1624 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
} 
#line 1674 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 1675 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
cudaOccupancyMaxPotentialBlockSizeWithFlags(int *
#line 1676 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
minGridSize, int *
#line 1677 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
blockSize, T 
#line 1678 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
func, ::size_t 
#line 1679 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
dynamicSMemSize = 0, int 
#line 1680 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
blockSizeLimit = 0, unsigned 
#line 1681 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
flags = 0) 
#line 1682 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
{ 
#line 1683 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
return cudaOccupancyMaxPotentialBlockSizeVariableSMemWithFlags(minGridSize, blockSize, func, ((::__cudaOccupancyB2DHelper)(dynamicSMemSize)), blockSizeLimit, flags); 
#line 1684 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
} 
#line 1717 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
template< class UnaryFunction, class T> static __inline ::cudaError_t 
#line 1718 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
cudaOccupancyMaxPotentialBlockSizeVariableSMem(int *
#line 1719 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
minGridSize, int *
#line 1720 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
blockSize, T 
#line 1721 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
func, UnaryFunction 
#line 1722 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
blockSizeToDynamicSMemSize, int 
#line 1723 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
blockSizeLimit = 0) 
#line 1724 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
{ 
#line 1725 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
return cudaOccupancyMaxPotentialBlockSizeVariableSMemWithFlags(minGridSize, blockSize, func, blockSizeToDynamicSMemSize, blockSizeLimit, 0); 
#line 1726 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
} 
#line 1764 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 1765 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
cudaLaunch(T *
#line 1766 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
func) 
#line 1768 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
{ 
#line 1769 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
return ::cudaLaunch((const void *)func); 
#line 1770 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
} 
#line 1801 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
template< class T> __inline ::cudaError_t 
#line 1802 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
cudaFuncGetAttributes(::cudaFuncAttributes *
#line 1803 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
attr, T *
#line 1804 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
entry) 
#line 1806 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
{ 
#line 1807 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
return ::cudaFuncGetAttributes(attr, (const void *)entry); 
#line 1808 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
} 
#line 1830 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
template< class T, int dim> static __inline ::cudaError_t 
#line 1831 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
cudaBindSurfaceToArray(const surface< T, dim>  &
#line 1832 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
surf, ::cudaArray_const_t 
#line 1833 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
array, const ::cudaChannelFormatDesc &
#line 1834 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
desc) 
#line 1836 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
{ 
#line 1837 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
return ::cudaBindSurfaceToArray(&surf, array, &desc); 
#line 1838 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
} 
#line 1859 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
template< class T, int dim> static __inline ::cudaError_t 
#line 1860 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
cudaBindSurfaceToArray(const surface< T, dim>  &
#line 1861 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
surf, ::cudaArray_const_t 
#line 1862 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
array) 
#line 1864 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
{ 
#line 1865 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
::cudaChannelFormatDesc desc; 
#line 1866 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
::cudaError_t err = ::cudaGetChannelDesc(&desc, array); 
#line 1868 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
return (err == (cudaSuccess)) ? cudaBindSurfaceToArray(surf, array, desc) : err; 
#line 1869 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\cuda_runtime.h"
} 
#line 26 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
#pragma pack ( push, 8 )
#line 63 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { struct _iobuf { 
#line 64 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
char *_ptr; 
#line 65 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
int _cnt; 
#line 66 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
char *_base; 
#line 67 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
int _flag; 
#line 68 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
int _file; 
#line 69 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
int _charbuf; 
#line 70 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
int _bufsiz; 
#line 71 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
char *_tmpfname; 
#line 72 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
}; }
#line 73 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { typedef _iobuf FILE; }
#line 137 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) FILE *__cdecl __iob_func(); } 
#line 144 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { typedef __int64 fpos_t; }
#line 175 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _filbuf(FILE * _File); } 
#line 176 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _flsbuf(int _Ch, FILE * _File); } 
#line 178 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) FILE *__cdecl _fsopen(const char * _Filename, const char * _Mode, int _ShFlag); } 
#line 180 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) void __cdecl clearerr(FILE * _File); } 
#line 182 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) errno_t __cdecl clearerr_s(FILE * _File); } 
#line 184 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl fclose(FILE * _File); } 
#line 185 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _fcloseall(); } 
#line 187 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) FILE *__cdecl _fdopen(int _FileHandle, const char * _Mode); } 
#line 189 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl feof(FILE * _File); } 
#line 190 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl ferror(FILE * _File); } 
#line 191 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl fflush(FILE * _File); } 
#line 192 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl fgetc(FILE * _File); } 
#line 193 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _fgetchar(); } 
#line 194 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl fgetpos(FILE * _File, fpos_t * _Pos); } 
#line 195 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) char *__cdecl fgets(char * _Buf, int _MaxCount, FILE * _File); } 
#line 197 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _fileno(FILE * _File); } 
#line 204 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) char *__cdecl _tempnam(const char * _DirName, const char * _FilePrefix); } 
#line 210 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _flushall(); } 
#line 211 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) FILE *__cdecl fopen(const char * _Filename, const char * _Mode); } 
#line 213 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) errno_t __cdecl fopen_s(FILE ** _File, const char * _Filename, const char * _Mode); } 
#line 215 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl fprintf(FILE * _File, const char * _Format, ...); } 
#line 217 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl fprintf_s(FILE * _File, const char * _Format, ...); } 
#line 219 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl fputc(int _Ch, FILE * _File); } 
#line 220 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _fputchar(int _Ch); } 
#line 221 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl fputs(const char * _Str, FILE * _File); } 
#line 222 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) size_t __cdecl fread(void * _DstBuf, size_t _ElementSize, size_t _Count, FILE * _File); } 
#line 224 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) size_t __cdecl fread_s(void * _DstBuf, size_t _DstSize, size_t _ElementSize, size_t _Count, FILE * _File); } 
#line 226 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) FILE *__cdecl freopen(const char * _Filename, const char * _Mode, FILE * _File); } 
#line 228 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) errno_t __cdecl freopen_s(FILE ** _File, const char * _Filename, const char * _Mode, FILE * _OldFile); } 
#line 230 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl fscanf(FILE * _File, const char * _Format, ...); } 
#line 231 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _fscanf_l(FILE * _File, const char * _Format, _locale_t _Locale, ...); } 
#pragma warning(push)
#pragma warning(disable:6530)
#line 235 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl fscanf_s(FILE * _File, const char * _Format, ...); } 
#line 237 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _fscanf_s_l(FILE * _File, const char * _Format, _locale_t _Locale, ...); } 
#pragma warning(pop)
extern "C" { __declspec(dllimport) int __cdecl fsetpos(FILE * _File, const fpos_t * _Pos); } 
#line 240 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl fseek(FILE * _File, long _Offset, int _Origin); } 
#line 241 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) long __cdecl ftell(FILE * _File); } 
#line 243 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _fseeki64(FILE * _File, __int64 _Offset, int _Origin); } 
#line 244 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) __int64 __cdecl _ftelli64(FILE * _File); } 
#line 246 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) size_t __cdecl fwrite(const void * _Str, size_t _Size, size_t _Count, FILE * _File); } 
#line 247 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl getc(FILE * _File); } 
#line 248 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl getchar(); } 
#line 249 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _getmaxstdio(); } 
#line 251 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) char *__cdecl gets_s(char * _Buf, rsize_t _Size); } 
#line 253 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
template < size_t _Size > inline char * __cdecl gets_s ( char ( & _Buffer ) [ _Size ] ) throw ( ) { return gets_s ( _Buffer, _Size ); }
#line 254 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) char *__cdecl gets(char * _Buffer); } 
#line 255 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { int __cdecl _getw(FILE * _File); } 
#line 261 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _pclose(FILE * _File); } 
#line 262 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) FILE *__cdecl _popen(const char * _Command, const char * _Mode); } 
#line 264 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl printf(const char * _Format, ...); } 
#line 266 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl printf_s(const char * _Format, ...); } 
#line 268 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl putc(int _Ch, FILE * _File); } 
#line 269 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl putchar(int _Ch); } 
#line 270 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl puts(const char * _Str); } 
#line 271 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _putw(int _Word, FILE * _File); } 
#line 274 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl remove(const char * _Filename); } 
#line 275 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl rename(const char * _OldFilename, const char * _NewFilename); } 
#line 276 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _unlink(const char * _Filename); } 
#line 278 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl unlink(const char * _Filename); } 
#line 281 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) void __cdecl rewind(FILE * _File); } 
#line 282 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _rmtmp(); } 
#line 283 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl scanf(const char * _Format, ...); } 
#line 284 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _scanf_l(const char * _Format, _locale_t _Locale, ...); } 
#pragma warning(push)
#pragma warning(disable:6530)
#line 288 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl scanf_s(const char * _Format, ...); } 
#line 290 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _scanf_s_l(const char * _Format, _locale_t _Locale, ...); } 
#pragma warning(pop)
extern "C" { __declspec(dllimport) void __cdecl setbuf(FILE * _File, char * _Buffer); } 
#line 293 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _setmaxstdio(int _Max); } 
#line 294 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) unsigned __cdecl _set_output_format(unsigned _Format); } 
#line 295 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) unsigned __cdecl _get_output_format(); } 
#line 296 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl setvbuf(FILE * _File, char * _Buf, int _Mode, size_t _Size); } 
#line 297 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _snprintf_s(char * _DstBuf, size_t _SizeInBytes, size_t _MaxCount, const char * _Format, ...); } 
#line 298 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
__pragma(warning(push)) __pragma(warning(disable: 4793)) template < size_t _Size > inline int __cdecl _snprintf_s ( char ( & _Dest ) [ _Size ], size_t _MaxCount, const char * _Format, ... ) throw ( ) { va_list _ArgList; ( __va_start ( & _ArgList, _Format ) ); return _vsnprintf_s ( _Dest, _Size, _MaxCount, _Format, _ArgList ); }__pragma(warning(pop)) 
#line 300 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl sprintf_s(char * _DstBuf, size_t _SizeInBytes, const char * _Format, ...); } 
#line 302 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
__pragma(warning(push)) __pragma(warning(disable: 4793)) template < size_t _Size > inline int __cdecl sprintf_s ( char ( & _Dest ) [ _Size ], const char * _Format, ... ) throw ( ) { va_list _ArgList; ( __va_start ( & _ArgList, _Format ) ); return vsprintf_s ( _Dest, _Size, _Format, _ArgList ); }__pragma(warning(pop)) 
#line 303 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _scprintf(const char * _Format, ...); } 
#line 304 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl sscanf(const char * _Src, const char * _Format, ...); } 
#line 305 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _sscanf_l(const char * _Src, const char * _Format, _locale_t _Locale, ...); } 
#pragma warning(push)
#pragma warning(disable:6530)
#line 309 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl sscanf_s(const char * _Src, const char * _Format, ...); } 
#line 311 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _sscanf_s_l(const char * _Src, const char * _Format, _locale_t _Locale, ...); } 
#line 312 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _snscanf(const char * _Src, size_t _MaxCount, const char * _Format, ...); } 
#line 313 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _snscanf_l(const char * _Src, size_t _MaxCount, const char * _Format, _locale_t _Locale, ...); } 
#line 314 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _snscanf_s(const char * _Src, size_t _MaxCount, const char * _Format, ...); } 
#line 315 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _snscanf_s_l(const char * _Src, size_t _MaxCount, const char * _Format, _locale_t _Locale, ...); } 
#pragma warning(pop)
extern "C" { __declspec(dllimport) FILE *__cdecl tmpfile(); } 
#line 319 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) errno_t __cdecl tmpfile_s(FILE ** _File); } 
#line 320 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) errno_t __cdecl tmpnam_s(char * _Buf, rsize_t _Size); } 
#line 322 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
template < size_t _Size > inline errno_t __cdecl tmpnam_s ( char ( & _Buf ) [ _Size ] ) throw ( ) { return tmpnam_s ( _Buf, _Size ); }
#line 323 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) char *__cdecl tmpnam(char * _Buffer); } 
#line 324 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl ungetc(int _Ch, FILE * _File); } 
#line 325 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl vfprintf(FILE * _File, const char * _Format, va_list _ArgList); } 
#line 326 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl vfscanf(FILE * _File, const char * _Format, va_list _ArgList); } 
#line 328 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl vfprintf_s(FILE * _File, const char * _Format, va_list _ArgList); } 
#line 329 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl vfscanf_s(FILE * _File, const char * _Format, va_list _ArgList); } 
#line 331 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl vprintf(const char * _Format, va_list _ArgList); } 
#line 332 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl vscanf(const char * _Format, va_list _ArgList); } 
#line 334 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl vprintf_s(const char * _Format, va_list _ArgList); } 
#line 335 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl vscanf_s(const char * _Format, va_list _ArgList); } 
#line 337 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl vsnprintf(char * _DstBuf, size_t _MaxCount, const char * _Format, va_list _ArgList); } 
#line 339 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl vsnprintf_s(char * _DstBuf, size_t _DstSize, size_t _MaxCount, const char * _Format, va_list _ArgList); } 
#line 340 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
template < size_t _Size > inline int __cdecl vsnprintf_s ( char ( & _Dest ) [ _Size ], size_t _MaxCount, const char * _Format, va_list _Args ) throw ( ) { return vsnprintf_s ( _Dest, _Size, _MaxCount, _Format, _Args ); }
#line 342 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vsnprintf_s(char * _DstBuf, size_t _SizeInBytes, size_t _MaxCount, const char * _Format, va_list _ArgList); } 
#line 343 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
template < size_t _Size > inline int __cdecl _vsnprintf_s ( char ( & _Dest ) [ _Size ], size_t _MaxCount, const char * _Format, va_list _Args ) throw ( ) { return _vsnprintf_s ( _Dest, _Size, _MaxCount, _Format, _Args ); }
#pragma warning(push)
#pragma warning(disable:4793)
extern "C" { __declspec(dllimport) int __cdecl _snprintf(char * _Dest, size_t _Count, const char * _Format, ...); } extern "C" { __declspec(dllimport) int __cdecl _vsnprintf(char * _Dest, size_t _Count, const char * _Format, va_list _Args); } 
#pragma warning(pop)
#line 349 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl vsprintf_s(char * _DstBuf, size_t _SizeInBytes, const char * _Format, va_list _ArgList); } 
#line 350 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
template < size_t _Size > inline int __cdecl vsprintf_s ( char ( & _Dest ) [ _Size ], const char * _Format, va_list _Args ) throw ( ) { return vsprintf_s ( _Dest, _Size, _Format, _Args ); }
#line 351 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl vsscanf_s(const char * _Src, const char * _Format, va_list _ArgList); } 
#line 352 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
template < size_t _Size > inline int __cdecl vsscanf_s ( const char ( & _Src ) [ _Size ], const char * _Format, va_list _Args ) throw ( ) { return vsscanf_s ( _Src, _Size, _Format, _Args ); }
#line 354 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
#pragma warning(push)
#pragma warning(disable:4793)
extern "C" { __declspec(dllimport) int __cdecl sprintf(char * _Dest, const char * _Format, ...); } extern "C" { __declspec(dllimport) int __cdecl vsprintf(char * _Dest, const char * _Format, va_list _Args); } 
#line 357 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl vsscanf(const char * _srcBuf, const char * _Format, va_list _ArgList); } 
#pragma warning(pop)
extern "C" { __declspec(dllimport) int __cdecl _vscprintf(const char * _Format, va_list _ArgList); } 
#line 360 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _snprintf_c(char * _DstBuf, size_t _MaxCount, const char * _Format, ...); } 
#line 361 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vsnprintf_c(char * _DstBuf, size_t _MaxCount, const char * _Format, va_list _ArgList); } 
#line 363 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _fprintf_p(FILE * _File, const char * _Format, ...); } 
#line 364 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _printf_p(const char * _Format, ...); } 
#line 365 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _sprintf_p(char * _Dst, size_t _MaxCount, const char * _Format, ...); } 
#line 366 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vfprintf_p(FILE * _File, const char * _Format, va_list _ArgList); } 
#line 367 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vprintf_p(const char * _Format, va_list _ArgList); } 
#line 368 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vsprintf_p(char * _Dst, size_t _MaxCount, const char * _Format, va_list _ArgList); } 
#line 369 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _scprintf_p(const char * _Format, ...); } 
#line 370 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vscprintf_p(const char * _Format, va_list _ArgList); } 
#line 371 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _set_printf_count_output(int _Value); } 
#line 372 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _get_printf_count_output(); } 
#line 374 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _printf_l(const char * _Format, _locale_t _Locale, ...); } 
#line 375 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _printf_p_l(const char * _Format, _locale_t _Locale, ...); } 
#line 376 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _printf_s_l(const char * _Format, _locale_t _Locale, ...); } 
#line 377 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vprintf_l(const char * _Format, _locale_t _Locale, va_list _ArgList); } 
#line 378 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vprintf_p_l(const char * _Format, _locale_t _Locale, va_list _ArgList); } 
#line 379 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vprintf_s_l(const char * _Format, _locale_t _Locale, va_list _ArgList); } 
#line 381 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _fprintf_l(FILE * _File, const char * _Format, _locale_t _Locale, ...); } 
#line 382 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _fprintf_p_l(FILE * _File, const char * _Format, _locale_t _Locale, ...); } 
#line 383 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _fprintf_s_l(FILE * _File, const char * _Format, _locale_t _Locale, ...); } 
#line 384 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vfprintf_l(FILE * _File, const char * _Format, _locale_t _Locale, va_list _ArgList); } 
#line 385 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vfprintf_p_l(FILE * _File, const char * _Format, _locale_t _Locale, va_list _ArgList); } 
#line 386 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vfprintf_s_l(FILE * _File, const char * _Format, _locale_t _Locale, va_list _ArgList); } 
#line 388 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _sprintf_l(char * _DstBuf, const char * _Format, _locale_t _Locale, ...); } 
#line 389 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _sprintf_p_l(char * _DstBuf, size_t _MaxCount, const char * _Format, _locale_t _Locale, ...); } 
#line 390 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _sprintf_s_l(char * _DstBuf, size_t _DstSize, const char * _Format, _locale_t _Locale, ...); } 
#line 391 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vsprintf_l(char * _DstBuf, const char * _Format, _locale_t, va_list _ArgList); } 
#line 392 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vsprintf_p_l(char * _DstBuf, size_t _MaxCount, const char * _Format, _locale_t _Locale, va_list _ArgList); } 
#line 393 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vsprintf_s_l(char * _DstBuf, size_t _DstSize, const char * _Format, _locale_t _Locale, va_list _ArgList); } 
#line 395 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _scprintf_l(const char * _Format, _locale_t _Locale, ...); } 
#line 396 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _scprintf_p_l(const char * _Format, _locale_t _Locale, ...); } 
#line 397 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vscprintf_l(const char * _Format, _locale_t _Locale, va_list _ArgList); } 
#line 398 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vscprintf_p_l(const char * _Format, _locale_t _Locale, va_list _ArgList); } 
#line 400 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _snprintf_l(char * _DstBuf, size_t _MaxCount, const char * _Format, _locale_t _Locale, ...); } 
#line 401 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _snprintf_c_l(char * _DstBuf, size_t _MaxCount, const char * _Format, _locale_t _Locale, ...); } 
#line 402 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _snprintf_s_l(char * _DstBuf, size_t _DstSize, size_t _MaxCount, const char * _Format, _locale_t _Locale, ...); } 
#line 403 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vsnprintf_l(char * _DstBuf, size_t _MaxCount, const char * _Format, _locale_t _Locale, va_list _ArgList); } 
#line 404 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vsnprintf_c_l(char * _DstBuf, size_t _MaxCount, const char *, _locale_t _Locale, va_list _ArgList); } 
#line 405 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vsnprintf_s_l(char * _DstBuf, size_t _DstSize, size_t _MaxCount, const char * _Format, _locale_t _Locale, va_list _ArgList); } 
#line 415 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) FILE *__cdecl _wfsopen(const __wchar_t * _Filename, const __wchar_t * _Mode, int _ShFlag); } 
#line 417 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) wint_t __cdecl fgetwc(FILE * _File); } 
#line 418 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) wint_t __cdecl _fgetwchar(); } 
#line 419 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) wint_t __cdecl fputwc(__wchar_t _Ch, FILE * _File); } 
#line 420 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) wint_t __cdecl _fputwchar(__wchar_t _Ch); } 
#line 421 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) wint_t __cdecl getwc(FILE * _File); } 
#line 422 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) inline wint_t __cdecl getwchar(); } 
#line 423 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) wint_t __cdecl putwc(__wchar_t _Ch, FILE * _File); } 
#line 424 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) inline wint_t __cdecl putwchar(__wchar_t _Ch); } 
#line 425 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) wint_t __cdecl ungetwc(wint_t _Ch, FILE * _File); } 
#line 427 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl fgetws(__wchar_t * _Dst, int _SizeInWords, FILE * _File); } 
#line 428 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl fputws(const __wchar_t * _Str, FILE * _File); } 
#line 429 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _getws_s(__wchar_t * _Str, size_t _SizeInWords); } 
#line 430 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
template < size_t _Size > inline wchar_t * __cdecl _getws_s ( wchar_t ( & _String ) [ _Size ] ) throw ( ) { return _getws_s ( _String, _Size ); }
#line 431 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _getws(__wchar_t * _String); } 
#line 432 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _putws(const __wchar_t * _Str); } 
#line 434 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl fwprintf(FILE * _File, const __wchar_t * _Format, ...); } 
#line 436 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl fwprintf_s(FILE * _File, const __wchar_t * _Format, ...); } 
#line 438 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl wprintf(const __wchar_t * _Format, ...); } 
#line 440 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl wprintf_s(const __wchar_t * _Format, ...); } 
#line 442 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _scwprintf(const __wchar_t * _Format, ...); } 
#line 443 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl vfwprintf(FILE * _File, const __wchar_t * _Format, va_list _ArgList); } 
#line 444 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl vfwscanf(FILE * _File, const __wchar_t * _Format, va_list _ArgList); } 
#line 446 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl vfwprintf_s(FILE * _File, const __wchar_t * _Format, va_list _ArgList); } 
#line 447 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl vfwscanf_s(FILE * _File, const __wchar_t * _Format, va_list _ArgList); } 
#line 449 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl vwprintf(const __wchar_t * _Format, va_list _ArgList); } 
#line 450 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl vwscanf(const __wchar_t * _Format, va_list _ArgList); } 
#line 452 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl vwprintf_s(const __wchar_t * _Format, va_list _ArgList); } 
#line 453 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl vwscanf_s(const __wchar_t * _Format, va_list _ArgList); } 
#line 457 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl swprintf_s(__wchar_t * _Dst, size_t _SizeInWords, const __wchar_t * _Format, ...); } 
#line 459 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
__pragma(warning(push)) __pragma(warning(disable: 4793)) template < size_t _Size > inline int __cdecl swprintf_s ( wchar_t ( & _Dest ) [ _Size ], const wchar_t * _Format, ... ) throw ( ) { va_list _ArgList; ( __va_start ( & _ArgList, _Format ) ); return vswprintf_s ( _Dest, _Size, _Format, _ArgList ); }__pragma(warning(pop)) 
#line 461 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl vswprintf_s(__wchar_t * _Dst, size_t _SizeInWords, const __wchar_t * _Format, va_list _ArgList); } 
#line 462 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl vswscanf_s(const __wchar_t * _Src, const __wchar_t * _Format, va_list _ArgList); } 
#line 464 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
template < size_t _Size > inline int __cdecl vswprintf_s ( wchar_t ( & _Dest ) [ _Size ], const wchar_t * _Format, va_list _Args ) throw ( ) { return vswprintf_s ( _Dest, _Size, _Format, _Args ); }
#line 465 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
template < size_t _Size > inline int __cdecl vswscanf_s ( wchar_t ( & _Dest ) [ _Size ], const wchar_t * _Format, va_list _Args ) throw ( ) { return vswscanf_s ( _Dest, _Size, _Format, _Args ); }
#line 466 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl vswscanf(const __wchar_t * _srcBuf, const __wchar_t * _Format, va_list _ArgList); } 
#line 468 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _swprintf_c(__wchar_t * _DstBuf, size_t _SizeInWords, const __wchar_t * _Format, ...); } 
#line 469 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vswprintf_c(__wchar_t * _DstBuf, size_t _SizeInWords, const __wchar_t * _Format, va_list _ArgList); } 
#line 471 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _snwprintf_s(__wchar_t * _DstBuf, size_t _SizeInWords, size_t _MaxCount, const __wchar_t * _Format, ...); } 
#line 472 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
__pragma(warning(push)) __pragma(warning(disable: 4793)) template < size_t _Size > inline int __cdecl _snwprintf_s ( wchar_t ( & _Dest ) [ _Size ], size_t _Count, const wchar_t * _Format, ... ) throw ( ) { va_list _ArgList; ( __va_start ( & _ArgList, _Format ) ); return _vsnwprintf_s ( _Dest, _Size, _Count, _Format, _ArgList ); }__pragma(warning(pop)) 
#line 473 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vsnwprintf_s(__wchar_t * _DstBuf, size_t _SizeInWords, size_t _MaxCount, const __wchar_t * _Format, va_list _ArgList); } 
#line 474 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
template < size_t _Size > inline int __cdecl _vsnwprintf_s ( wchar_t ( & _Dest ) [ _Size ], size_t _Count, const wchar_t * _Format, va_list _Args ) throw ( ) { return _vsnwprintf_s ( _Dest, _Size, _Count, _Format, _Args ); }
#pragma warning(push)
#pragma warning(disable:4793)
extern "C" { __declspec(dllimport) int __cdecl _snwprintf(__wchar_t * _Dest, size_t _Count, const __wchar_t * _Format, ...); } extern "C" { __declspec(dllimport) int __cdecl _vsnwprintf(__wchar_t * _Dest, size_t _Count, const __wchar_t * _Format, va_list _Args); } 
#pragma warning(pop)
#line 480 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _fwprintf_p(FILE * _File, const __wchar_t * _Format, ...); } 
#line 481 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _wprintf_p(const __wchar_t * _Format, ...); } 
#line 482 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vfwprintf_p(FILE * _File, const __wchar_t * _Format, va_list _ArgList); } 
#line 483 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vwprintf_p(const __wchar_t * _Format, va_list _ArgList); } 
#line 484 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _swprintf_p(__wchar_t * _DstBuf, size_t _MaxCount, const __wchar_t * _Format, ...); } 
#line 485 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vswprintf_p(__wchar_t * _DstBuf, size_t _MaxCount, const __wchar_t * _Format, va_list _ArgList); } 
#line 486 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _scwprintf_p(const __wchar_t * _Format, ...); } 
#line 487 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vscwprintf_p(const __wchar_t * _Format, va_list _ArgList); } 
#line 489 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _wprintf_l(const __wchar_t * _Format, _locale_t _Locale, ...); } 
#line 490 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _wprintf_p_l(const __wchar_t * _Format, _locale_t _Locale, ...); } 
#line 491 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _wprintf_s_l(const __wchar_t * _Format, _locale_t _Locale, ...); } 
#line 492 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vwprintf_l(const __wchar_t * _Format, _locale_t _Locale, va_list _ArgList); } 
#line 493 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vwprintf_p_l(const __wchar_t * _Format, _locale_t _Locale, va_list _ArgList); } 
#line 494 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vwprintf_s_l(const __wchar_t * _Format, _locale_t _Locale, va_list _ArgList); } 
#line 496 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _fwprintf_l(FILE * _File, const __wchar_t * _Format, _locale_t _Locale, ...); } 
#line 497 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _fwprintf_p_l(FILE * _File, const __wchar_t * _Format, _locale_t _Locale, ...); } 
#line 498 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _fwprintf_s_l(FILE * _File, const __wchar_t * _Format, _locale_t _Locale, ...); } 
#line 499 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vfwprintf_l(FILE * _File, const __wchar_t * _Format, _locale_t _Locale, va_list _ArgList); } 
#line 500 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vfwprintf_p_l(FILE * _File, const __wchar_t * _Format, _locale_t _Locale, va_list _ArgList); } 
#line 501 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vfwprintf_s_l(FILE * _File, const __wchar_t * _Format, _locale_t _Locale, va_list _ArgList); } 
#line 503 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _swprintf_c_l(__wchar_t * _DstBuf, size_t _MaxCount, const __wchar_t * _Format, _locale_t _Locale, ...); } 
#line 504 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _swprintf_p_l(__wchar_t * _DstBuf, size_t _MaxCount, const __wchar_t * _Format, _locale_t _Locale, ...); } 
#line 505 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _swprintf_s_l(__wchar_t * _DstBuf, size_t _DstSize, const __wchar_t * _Format, _locale_t _Locale, ...); } 
#line 506 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vswprintf_c_l(__wchar_t * _DstBuf, size_t _MaxCount, const __wchar_t * _Format, _locale_t _Locale, va_list _ArgList); } 
#line 507 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vswprintf_p_l(__wchar_t * _DstBuf, size_t _MaxCount, const __wchar_t * _Format, _locale_t _Locale, va_list _ArgList); } 
#line 508 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vswprintf_s_l(__wchar_t * _DstBuf, size_t _DstSize, const __wchar_t * _Format, _locale_t _Locale, va_list _ArgList); } 
#line 510 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _scwprintf_l(const __wchar_t * _Format, _locale_t _Locale, ...); } 
#line 511 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _scwprintf_p_l(const __wchar_t * _Format, _locale_t _Locale, ...); } 
#line 512 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vscwprintf_p_l(const __wchar_t * _Format, _locale_t _Locale, va_list _ArgList); } 
#line 514 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _snwprintf_l(__wchar_t * _DstBuf, size_t _MaxCount, const __wchar_t * _Format, _locale_t _Locale, ...); } 
#line 515 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _snwprintf_s_l(__wchar_t * _DstBuf, size_t _DstSize, size_t _MaxCount, const __wchar_t * _Format, _locale_t _Locale, ...); } 
#line 516 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vsnwprintf_l(__wchar_t * _DstBuf, size_t _MaxCount, const __wchar_t * _Format, _locale_t _Locale, va_list _ArgList); } 
#line 517 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vsnwprintf_s_l(__wchar_t * _DstBuf, size_t _DstSize, size_t _MaxCount, const __wchar_t * _Format, _locale_t _Locale, va_list _ArgList); } 
#line 531 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
#pragma warning(push)
#pragma warning(disable:4141 4996 4793)
extern "C" { __declspec(deprecated("swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Micr" "osoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS.")) __declspec(dllimport) int __cdecl _swprintf(__wchar_t * _Dest, const __wchar_t * _Format, ...); } extern "C" { __declspec(deprecated("swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Micr" "osoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS.")) __declspec(dllimport) int __cdecl _vswprintf(__wchar_t * _Dest, const __wchar_t * _Format, va_list _Args); } 
#line 534 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(deprecated("swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Micr" "osoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS.")) __declspec(dllimport) int __cdecl __swprintf_l(__wchar_t * _Dest, const __wchar_t * _Format, _locale_t _Plocinfo, ...); } extern "C" { __declspec(deprecated("swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Micr" "osoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS.")) __declspec(dllimport) int __cdecl __vswprintf_l(__wchar_t * _Dest, const __wchar_t * _Format, _locale_t _Plocinfo, va_list _Args); } 
#pragma warning(pop)
#line 34 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\swprintf.inl"
#pragma warning( push )
#pragma warning( disable : 4793 4412 )
extern "C" { static __inline int swprintf(__wchar_t *_String, size_t _Count, const __wchar_t *_Format, ...) 
#line 37 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\swprintf.inl"
{ 
#line 38 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\swprintf.inl"
va_list _Arglist; 
#line 39 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\swprintf.inl"
int _Ret; 
#line 40 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\swprintf.inl"
__va_start(&_Arglist, _Format); 
#line 41 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\swprintf.inl"
_Ret = _vswprintf_c_l(_String, _Count, _Format, 0, _Arglist); 
#line 42 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\swprintf.inl"
_Arglist = ((va_list)0); 
#line 43 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\swprintf.inl"
return _Ret; 
#line 44 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\swprintf.inl"
} } 
#pragma warning( pop )
#line 47 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\swprintf.inl"
#pragma warning( push )
#pragma warning( disable : 4412 )
extern "C" { static __inline int __cdecl vswprintf(__wchar_t *_String, size_t _Count, const __wchar_t *_Format, va_list _Ap) 
#line 50 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\swprintf.inl"
{ 
#line 51 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\swprintf.inl"
return _vswprintf_c_l(_String, _Count, _Format, 0, _Ap); 
#line 52 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\swprintf.inl"
} } 
#pragma warning( pop )
#line 58 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\swprintf.inl"
#pragma warning( push )
#pragma warning( disable : 4793 4412 )
extern "C" { static __inline int _swprintf_l(__wchar_t *_String, size_t _Count, const __wchar_t *_Format, _locale_t _Plocinfo, ...) 
#line 61 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\swprintf.inl"
{ 
#line 62 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\swprintf.inl"
va_list _Arglist; 
#line 63 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\swprintf.inl"
int _Ret; 
#line 64 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\swprintf.inl"
__va_start(&_Arglist, _Plocinfo); 
#line 65 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\swprintf.inl"
_Ret = _vswprintf_c_l(_String, _Count, _Format, _Plocinfo, _Arglist); 
#line 66 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\swprintf.inl"
_Arglist = ((va_list)0); 
#line 67 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\swprintf.inl"
return _Ret; 
#line 68 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\swprintf.inl"
} } 
#pragma warning( pop )
#line 71 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\swprintf.inl"
#pragma warning( push )
#pragma warning( disable : 4412 )
extern "C" { static __inline int __cdecl _vswprintf_l(__wchar_t *_String, size_t _Count, const __wchar_t *_Format, _locale_t _Plocinfo, va_list _Ap) 
#line 74 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\swprintf.inl"
{ 
#line 75 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\swprintf.inl"
return _vswprintf_c_l(_String, _Count, _Format, _Plocinfo, _Ap); 
#line 76 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\swprintf.inl"
} } 
#pragma warning( pop )
#line 80 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\swprintf.inl"
#pragma warning( push )
#pragma warning( disable : 4996 )
#line 83 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\swprintf.inl"
#pragma warning( push )
#pragma warning( disable : 4793 4141 )
__declspec(deprecated("swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Micr" "osoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS.")) __inline int swprintf(__wchar_t *_String, const __wchar_t *_Format, ...) 
#line 86 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\swprintf.inl"
{ 
#line 87 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\swprintf.inl"
va_list _Arglist; 
#line 88 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\swprintf.inl"
__va_start(&_Arglist, _Format); 
#line 89 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\swprintf.inl"
int _Ret = _vswprintf(_String, _Format, _Arglist); 
#line 90 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\swprintf.inl"
_Arglist = ((va_list)0); 
#line 91 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\swprintf.inl"
return _Ret; 
#line 92 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\swprintf.inl"
} 
#pragma warning( pop )
#line 95 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\swprintf.inl"
#pragma warning( push )
#pragma warning( disable : 4141 )
__declspec(deprecated("swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Micr" "osoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS.")) __inline int __cdecl vswprintf(__wchar_t *_String, const __wchar_t *_Format, va_list _Ap) 
#line 98 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\swprintf.inl"
{ 
#line 99 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\swprintf.inl"
return _vswprintf(_String, _Format, _Ap); 
#line 100 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\swprintf.inl"
} 
#pragma warning( pop )
#line 103 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\swprintf.inl"
#pragma warning( push )
#pragma warning( disable : 4793 4141 )
__declspec(deprecated("swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Micr" "osoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS.")) __inline int _swprintf_l(__wchar_t *_String, const __wchar_t *_Format, _locale_t _Plocinfo, ...) 
#line 106 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\swprintf.inl"
{ 
#line 107 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\swprintf.inl"
va_list _Arglist; 
#line 108 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\swprintf.inl"
__va_start(&_Arglist, _Plocinfo); 
#line 109 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\swprintf.inl"
int _Ret = __vswprintf_l(_String, _Format, _Plocinfo, _Arglist); 
#line 110 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\swprintf.inl"
_Arglist = ((va_list)0); 
#line 111 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\swprintf.inl"
return _Ret; 
#line 112 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\swprintf.inl"
} 
#pragma warning( pop )
#line 115 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\swprintf.inl"
#pragma warning( push )
#pragma warning( disable : 4141 )
__declspec(deprecated("swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Micr" "osoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS.")) __inline int __cdecl _vswprintf_l(__wchar_t *_String, const __wchar_t *_Format, _locale_t _Plocinfo, va_list _Ap) 
#line 118 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\swprintf.inl"
{ 
#line 119 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\swprintf.inl"
return __vswprintf_l(_String, _Format, _Plocinfo, _Ap); 
#line 120 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\swprintf.inl"
} 
#pragma warning( pop )
#line 123 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\swprintf.inl"
#pragma warning( pop )
#line 555 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wtempnam(const __wchar_t * _Directory, const __wchar_t * _FilePrefix); } 
#line 561 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vscwprintf(const __wchar_t * _Format, va_list _ArgList); } 
#line 562 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _vscwprintf_l(const __wchar_t * _Format, _locale_t _Locale, va_list _ArgList); } 
#line 563 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl fwscanf(FILE * _File, const __wchar_t * _Format, ...); } 
#line 564 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _fwscanf_l(FILE * _File, const __wchar_t * _Format, _locale_t _Locale, ...); } 
#pragma warning(push)
#pragma warning(disable:6530)
#line 568 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl fwscanf_s(FILE * _File, const __wchar_t * _Format, ...); } 
#line 570 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _fwscanf_s_l(FILE * _File, const __wchar_t * _Format, _locale_t _Locale, ...); } 
#line 571 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl swscanf(const __wchar_t * _Src, const __wchar_t * _Format, ...); } 
#line 572 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _swscanf_l(const __wchar_t * _Src, const __wchar_t * _Format, _locale_t _Locale, ...); } 
#line 574 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl swscanf_s(const __wchar_t * _Src, const __wchar_t * _Format, ...); } 
#line 576 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _swscanf_s_l(const __wchar_t * _Src, const __wchar_t * _Format, _locale_t _Locale, ...); } 
#line 577 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _snwscanf(const __wchar_t * _Src, size_t _MaxCount, const __wchar_t * _Format, ...); } 
#line 578 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _snwscanf_l(const __wchar_t * _Src, size_t _MaxCount, const __wchar_t * _Format, _locale_t _Locale, ...); } 
#line 579 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _snwscanf_s(const __wchar_t * _Src, size_t _MaxCount, const __wchar_t * _Format, ...); } 
#line 580 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _snwscanf_s_l(const __wchar_t * _Src, size_t _MaxCount, const __wchar_t * _Format, _locale_t _Locale, ...); } 
#line 581 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl wscanf(const __wchar_t * _Format, ...); } 
#line 582 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _wscanf_l(const __wchar_t * _Format, _locale_t _Locale, ...); } 
#line 584 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl wscanf_s(const __wchar_t * _Format, ...); } 
#line 586 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _wscanf_s_l(const __wchar_t * _Format, _locale_t _Locale, ...); } 
#pragma warning(pop)
#line 589 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) FILE *__cdecl _wfdopen(int _FileHandle, const __wchar_t * _Mode); } 
#line 590 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) FILE *__cdecl _wfopen(const __wchar_t * _Filename, const __wchar_t * _Mode); } 
#line 591 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wfopen_s(FILE ** _File, const __wchar_t * _Filename, const __wchar_t * _Mode); } 
#line 592 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) FILE *__cdecl _wfreopen(const __wchar_t * _Filename, const __wchar_t * _Mode, FILE * _OldFile); } 
#line 593 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wfreopen_s(FILE ** _File, const __wchar_t * _Filename, const __wchar_t * _Mode, FILE * _OldFile); } 
#line 600 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) FILE *__cdecl _wpopen(const __wchar_t * _Command, const __wchar_t * _Mode); } 
#line 602 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _wremove(const __wchar_t * _Filename); } 
#line 603 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wtmpnam_s(__wchar_t * _DstBuf, size_t _SizeInWords); } 
#line 604 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
template < size_t _Size > inline errno_t __cdecl _wtmpnam_s ( wchar_t ( & _Buffer ) [ _Size ] ) throw ( ) { return _wtmpnam_s ( _Buffer, _Size ); }
#line 605 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wtmpnam(__wchar_t * _Buffer); } 
#line 607 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) wint_t __cdecl _fgetwc_nolock(FILE * _File); } 
#line 608 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) wint_t __cdecl _fputwc_nolock(__wchar_t _Ch, FILE * _File); } 
#line 609 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) wint_t __cdecl _ungetwc_nolock(wint_t _Ch, FILE * _File); } 
#line 621 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { inline wint_t __cdecl getwchar() 
#line 622 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
{ return fgetwc(&(__iob_func()[0])); } } 
#line 623 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { inline wint_t __cdecl putwchar(__wchar_t _C) 
#line 624 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
{ return fputwc(_C, &(__iob_func()[1])); } } 
#line 670 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) void __cdecl _lock_file(FILE * _File); } 
#line 671 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) void __cdecl _unlock_file(FILE * _File); } 
#line 673 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _fclose_nolock(FILE * _File); } 
#line 674 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _fflush_nolock(FILE * _File); } 
#line 675 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) size_t __cdecl _fread_nolock(void * _DstBuf, size_t _ElementSize, size_t _Count, FILE * _File); } 
#line 676 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) size_t __cdecl _fread_nolock_s(void * _DstBuf, size_t _DstSize, size_t _ElementSize, size_t _Count, FILE * _File); } 
#line 677 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _fseek_nolock(FILE * _File, long _Offset, int _Origin); } 
#line 678 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) long __cdecl _ftell_nolock(FILE * _File); } 
#line 679 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _fseeki64_nolock(FILE * _File, __int64 _Offset, int _Origin); } 
#line 680 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) __int64 __cdecl _ftelli64_nolock(FILE * _File); } 
#line 681 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) size_t __cdecl _fwrite_nolock(const void * _DstBuf, size_t _Size, size_t _Count, FILE * _File); } 
#line 682 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl _ungetc_nolock(int _Ch, FILE * _File); } 
#line 709 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) char *__cdecl tempnam(const char * _Directory, const char * _FilePrefix); } 
#line 715 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl fcloseall(); } 
#line 716 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) FILE *__cdecl fdopen(int _FileHandle, const char * _Format); } 
#line 717 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl fgetchar(); } 
#line 718 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl fileno(FILE * _File); } 
#line 719 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl flushall(); } 
#line 720 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl fputchar(int _Ch); } 
#line 721 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl getw(FILE * _File); } 
#line 722 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl putw(int _Ch, FILE * _File); } 
#line 723 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
extern "C" { __declspec(dllimport) int __cdecl rmtmp(); } 
#line 731 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\stdio.h"
#pragma pack ( pop )
#line 117 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\float.h"
extern "C" { __declspec(dllimport) unsigned __cdecl _clearfp(); } 
#pragma warning(push)
#pragma warning(disable: 4141)
extern "C" { __declspec(dllimport) unsigned __cdecl _controlfp(unsigned _NewValue, unsigned _Mask); } 
#pragma warning(pop)
extern "C" { __declspec(dllimport) void __cdecl _set_controlfp(unsigned _NewValue, unsigned _Mask); } 
#line 123 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\float.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _controlfp_s(unsigned * _CurrentState, unsigned _NewValue, unsigned _Mask); } 
#line 124 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\float.h"
extern "C" { __declspec(dllimport) unsigned __cdecl _statusfp(); } 
#line 125 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\float.h"
extern "C" { __declspec(dllimport) void __cdecl _fpreset(); } 
#line 202 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\float.h"
extern "C" { __declspec(dllimport) unsigned __cdecl _control87(unsigned _NewValue, unsigned _Mask); } 
#line 210 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\float.h"
extern "C" { __declspec(dllimport) extern int *__cdecl __fpecode(); } 
#line 241 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\float.h"
extern "C" { __declspec(dllimport) double __cdecl _copysign(double _Number, double _Sign); } 
#line 242 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\float.h"
extern "C" { __declspec(dllimport) double __cdecl _chgsign(double _X); } 
#line 243 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\float.h"
extern "C" { __declspec(dllimport) double __cdecl _scalb(double _X, long _Y); } 
#line 244 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\float.h"
extern "C" { __declspec(dllimport) double __cdecl _logb(double _X); } 
#line 245 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\float.h"
extern "C" { __declspec(dllimport) double __cdecl _nextafter(double _X, double _Y); } 
#line 246 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\float.h"
extern "C" { __declspec(dllimport) int __cdecl _finite(double _X); } 
#line 247 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\float.h"
extern "C" { __declspec(dllimport) int __cdecl _isnan(double _X); } 
#line 248 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\float.h"
extern "C" { __declspec(dllimport) int __cdecl _fpclass(double _X); } 
#line 251 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\float.h"
extern "C" { __declspec(dllimport) float __cdecl _scalbf(float _X, long _Y); } 
#line 274 "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\include\\float.h"
extern "C" { __declspec(dllimport) void __cdecl fpreset(); } 
#line 11 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
 __declspec(noinline) void matrixPlusVector(float *input, float *bias, float *output, int rows, int columns) ;



















#line 32 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
#line 22 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
 __declspec(noinline) void matrixTanh(float *input, float *output, int rows, int columns) ;



















#line 43 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
#line 33 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
 __declspec(noinline) void matrixIncorporateTanhDeriv(float *base, float *activation, float *output, int rows, int columns) ;



















#line 54 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
#line 44 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
 __declspec(noinline) void matrixReLu(float *input, float *output, int rows, int columns) ;



















#line 65 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
#line 55 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
 __declspec(noinline) void matrixIncorporateReLuDeriv(float *base, float *activation, float *output, int rows, int columns) ;



















#line 76 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
#line 66 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
 __declspec(noinline) void matrixSigmoid(float *input, float *output, int rows, int columns) ;



















#line 87 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
#line 78 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
 __declspec(noinline) void matrixIncorporateSigmoidDeriv(float *base, float *activation, float *output, int rows, int columns) ;



















#line 99 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
#line 89 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
 __declspec(noinline) void matrixCrossEntropyError(float *sigmoidScores, float *trueLabels, float *output, int rows, int columns) ;





















#line 112 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
#line 101 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
 __declspec(noinline) void matrixBellmanErrorAndDeriv(float *predictedQValues, float *maxQHatValues, float *chosenActionIndices, float *currentRewards, float *error, float *errorDerivative, float 
#line 102 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
discount, float *isLastEpisode, int rows, int columns) ;

































#line 137 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
#line 122 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
 __declspec(noinline) void DqnStanfordEvaluation(float *predictedactionIndices, float *chosenActionIndices, float *currentRewards, float *matchPredictRewards, float *nonMatchPredictRewards, int rows) ;



























#line 151 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
#line 138 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
 __declspec(noinline) void matrixHadamard(float *input1, float *input2, float alpha, float *output, float beta, int rows, int columns) ;



















#line 159 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
#line 149 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
 __declspec(noinline) void columnwiseMax(float *input, float *output, int rows, int columns) ;

































#line 184 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
#line 167 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
 __declspec(noinline) void columnwiseMaxIndex(float *input, float *output, int rows, int columns) ;





































#line 206 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
#line 187 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
int main() 
#line 188 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
{ 
#line 189 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
return 0; 
#line 190 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
} 
#line 1 "kernel.cudafe1.stub.c"

#line 1 "kernel.cudafe1.stub.c"
#line 1 "d:\\vinods\\repos\\msr-dssm\\private\\vinods\\cudalibmanaged\\kernels\\x64\\debug\\kernel.cudafe1.stub.c"

#line 1 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\crt/host_runtime.h"







































































#line 73 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\crt/host_runtime.h"

template <typename T>
static inline T *__cudaAddressOf(T &val) 
{
    return (T *)((void *)(&(const_cast<char &>(reinterpret_cast<const volatile char &>(val)))));
}





        











          



          







#line 109 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\crt/host_runtime.h"


#line 112 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\crt/host_runtime.h"




#line 117 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\crt/host_runtime.h"


#line 120 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\crt/host_runtime.h"

static void ____nv_dummy_param_ref(void *param) { volatile static void **__ref; __ref = (volatile void **)param; }




extern "C" {
void __cudaRegisterLinkedBinary__NV_MODULE_ID ( void (*)(void **), void *, void *, void (*)(void *));
}




extern "C" {

#pragma data_seg("__nv_module_id")
  static const __declspec(allocate("__nv_module_id")) unsigned char __module_id_str[] = "__NV_MODULE_ID";
#pragma data_seg()




#line 143 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\crt/host_runtime.h"









}

extern "C" {
extern void** __stdcall __cudaRegisterFatBinary(
  void *fatCubin
);

extern void __stdcall __cudaUnregisterFatBinary(
  void **fatCubinHandle
);

extern void __stdcall __cudaRegisterVar(
        void **fatCubinHandle,
        char  *hostVar,
        char  *deviceAddress,
  const char  *deviceName,
        int    ext,
        int    size,
        int    constant,
        int    global
);

extern void __stdcall __cudaRegisterManagedVar(
        void **fatCubinHandle,
        void **hostVarPtrAddress,
        char  *deviceAddress,
  const char  *deviceName,
        int    ext,
        int    size,
        int    constant,
        int    global
);

extern char __stdcall __cudaInitModule(
        void **fatCubinHandle
);

extern void __stdcall __cudaRegisterTexture(
        void                    **fatCubinHandle,
  const struct textureReference  *hostVar,
  const void                    **deviceAddress,
  const char                     *deviceName,
        int                       dim,       
        int                       norm,      
        int                        ext        
);

extern void __stdcall __cudaRegisterSurface(
        void                    **fatCubinHandle,
  const struct surfaceReference  *hostVar,
  const void                    **deviceAddress,
  const char                     *deviceName,
        int                       dim,       
        int                       ext        
);

extern void __stdcall __cudaRegisterFunction(
        void   **fatCubinHandle,
  const char    *hostFun,
        char    *deviceFun,
  const char    *deviceName,
        int      thread_limit,
        uint3   *tid,
        uint3   *bid,
        dim3    *bDim,
        dim3    *gDim,
        int     *wSize
);




#line 225 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\crt/host_runtime.h"


#line 228 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\crt/host_runtime.h"
extern int __cdecl atexit(void(__cdecl *)(void));
#line 230 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\crt/host_runtime.h"

}

static void **__cudaFatCubinHandle;

static void __cdecl __cudaUnregisterBinaryUtil(void)
{
  ____nv_dummy_param_ref((void *)&__cudaFatCubinHandle);
  __cudaUnregisterFatBinary(__cudaFatCubinHandle);
}

static char __nv_init_managed_rt_with_module(void **handle)
{
  return __cudaInitModule(handle);
}

#line 1 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\common_functions.h"















































































































































































































#line 209 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\common_functions.h"








#line 218 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\common_functions.h"

#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 9330 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"


#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\host_defines.h"










































































































































































































































#line 236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\host_defines.h"
#line 9333 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_constants.h"























































































































































#line 153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_constants.h"
#line 9334 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"
















































































































































































































#line 9543 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"







#line 1 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\crt/func_macro.h"













































#line 47 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\crt/func_macro.h"





#line 53 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\crt/func_macro.h"









#line 63 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\crt/func_macro.h"







#line 71 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\crt/func_macro.h"

#line 73 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\crt/func_macro.h"

#line 75 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\crt/func_macro.h"
#line 9551 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"



#pragma warning(disable : 4211)

#line 9557 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"

static inline double rsqrt(double a);

static inline double rcbrt(double a);

static inline double sinpi(double a);

static inline double cospi(double a);

static inline void sincospi(double a, double *sptr, double *cptr);

static inline double erfinv(double a);

static inline double erfcinv(double a);

static inline double normcdfinv(double a);

static inline double normcdf(double a);

static inline double erfcx(double a);

static inline float rsqrtf(float a);

static inline float rcbrtf(float a);

static inline float sinpif(float a);

static inline float cospif(float a);

static inline void sincospif(float a, float *sptr, float *cptr);

static inline float erfinvf(float a);

static inline float erfcinvf(float a);

static inline float normcdfinvf(float a);

static inline float normcdff(float a);

static inline float erfcxf(float a);

static inline int min(int a, int b);

static inline unsigned int umin(unsigned int a, unsigned int b);

static inline long long int llmin(long long int a, long long int b);

static inline unsigned long long int ullmin(unsigned long long int a, unsigned long long int b);

static inline int max(int a, int b);

static inline unsigned int umax(unsigned int a, unsigned int b);

static inline long long int llmax(long long int a, long long int b);

static inline unsigned long long int ullmax(unsigned long long int a, unsigned long long int b);



static inline int __isnan(double a);

#line 9619 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"



static inline void sincos(double a, double *sptr, double *cptr);

#line 9625 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"



static inline double exp10(double a);

static inline float exp10f(float a);

static inline void sincosf(float a, float *sptr, float *cptr);

static inline int __isinf(double a);

#line 9637 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"





#line 9643 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"



static inline int __signbit(double a);

static inline int __finite(double a);

static inline int __signbitl(long double a);

static inline int __signbitf(float a);

static inline int __finitel(long double a);

static inline int __finitef(float a);

static inline int __isinfl(long double a);

static inline int __isinff(float a);

static inline int __isnanl(long double a);

static inline int __isnanf(float a);

#line 9667 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"













































































































































#line 9809 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"



#pragma warning(default: 4211)

#line 9815 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"

#line 9817 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"

#line 9819 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"



#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"


















































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 884 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"


#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\host_defines.h"










































































































































































































































#line 236 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\host_defines.h"
#line 887 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_constants.h"























































































































































#line 153 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_constants.h"
#line 888 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"



































































































































































































































































































































































































































































































































































#line 1436 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"







#line 1 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\crt/func_macro.h"









































































#line 75 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\crt/func_macro.h"
#line 1444 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"



#pragma warning(disable : 4211)

#line 1450 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"



static inline int __isnan(double a)
{
  volatile union {
    double                 d;
    unsigned long long int l;
  } cvt;

  cvt.d = a;

  return cvt.l << 1 > 0xffe0000000000000ull;
}

#line 1466 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"









static inline double exp10(double a)
{
  return pow(10.0, a);
}

static inline float exp10f(float a)
{
    return (float)exp10((double)a);
}

static inline void sincos(double a, double *sptr, double *cptr)
{
  *sptr = sin(a);
  *cptr = cos(a);
}

static inline void sincosf(float a, float *sptr, float *cptr)
{
  double s, c;

  sincos((double)a, &s, &c);
  *sptr = (float)s;
  *cptr = (float)c;
}

static inline int __isinf(double a)
{
  volatile union {
    double                 d;
    unsigned long long int l;
  } cvt;

  cvt.d = a;

  return cvt.l << 1 == 0xffe0000000000000ull;
}

#line 1513 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"








#line 1522 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"

#line 1524 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"









static inline int __signbit(double a)
{
  volatile union {
    double               d;
    signed long long int l;
  } cvt;

  cvt.d = a;
  return cvt.l < 0ll;
}














#line 1558 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"

static inline int __finite(double a)
{
  volatile union {
    double                 d;
    unsigned long long int l;
  } cvt;

  cvt.d = a;
  return cvt.l << 1 < 0xffe0000000000000ull;
}








































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 2922 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"








static inline int __signbitl(long double a)
{
  return __signbit((double)a);
}

static inline int __signbitf(float a)
{
  return __signbit((double)a);
}

static inline int __finitel(long double a)
{
  return __finite((double)a);
}

static inline int __finitef(float a)
{
  return __finite((double)a);
}

static inline int __isinfl(long double a)
{
  return __isinf((double)a);
}

static inline int __isinff(float a)
{
  return __isinf((double)a);
}

static inline int __isnanl(long double a)
{
  return __isnan((double)a);
}

static inline int __isnanf(float a)
{
  return __isnan((double)a);
}























































































































































#line 3121 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"


























































#line 3180 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"

#line 3182 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"







static inline double rsqrt(double a)
{
  return 1.0 / sqrt(a);
}

static inline double rcbrt(double a)
{
  double s, t;

  if (__isnan(a)) {
    return a + a;
  }
  if (a == 0.0 || __isinf(a)) {
    return 1.0 / a;
  } 
  s = fabs(a);
  t = exp2(-3.3333333333333333e-1 * log2(s));                
  t = ((t*t) * (-s*t) + 1.0) * (3.3333333333333333e-1*t) + t;


#line 3210 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
  if (__signbit(a))
#line 3212 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"
  {
    t = -t;
  }
  return t;
}

static inline double sinpi(double a)
{
  int n;

  if (__isnan(a)) {
    return a + a;
  }
  if (a == 0.0 || __isinf(a)) {
    return sin (a);
  } 
  if (a == floor(a)) {
    return ((a / 1.0e308) / 1.0e308) / 1.0e308;
  }
  a = remquo (a, 0.5, &n);
  a = a * 3.1415926535897931e+0;
  if (n & 1) {
    a = cos (a);
  } else {
    a = sin (a);
  }
  if (n & 2) {
    a = -a;
  }
  return a;
}

static inline double cospi(double a)
{
  int n;

  if (__isnan(a)) {
    return a + a;
  }
  if (__isinf(a)) {
    return cos (a);
  } 
  if (fabs(a) > 9.0071992547409920e+015) {
    a = 0.0;
  }
  a = remquo (a, 0.5, &n);
  a = a * 3.1415926535897931e+0;
  n++;
  if (n & 1) {
    a = cos (a);
  } else {
    a = sin (a);
  }
  if (n & 2) {
    a = -a;
  }
  if (a == 0.0) {
    a = fabs(a);
  }
  return a;
}

static inline void sincospi(double a, double *sptr, double *cptr)
{
  *sptr = sinpi(a);
  *cptr = cospi(a);
}

static inline double erfinv(double a)
{
  double p, q, t, fa;
  volatile union {
    double d;
    unsigned long long int l;
  } cvt;

  fa = fabs(a);
  if (fa >= 1.0) {
    cvt.l = 0xfff8000000000000ull;
    t = cvt.d;                    
    if (fa == 1.0) {
      t = a * exp(1000.0);        
    }
  } else if (fa >= 0.9375) {
    



    t = log1p(-fa);
    t = 1.0 / sqrt(-t);
    p =         2.7834010353747001060e-3;
    p = p * t + 8.6030097526280260580e-1;
    p = p * t + 2.1371214997265515515e+0;
    p = p * t + 3.1598519601132090206e+0;
    p = p * t + 3.5780402569085996758e+0;
    p = p * t + 1.5335297523989890804e+0;
    p = p * t + 3.4839207139657522572e-1;
    p = p * t + 5.3644861147153648366e-2;
    p = p * t + 4.3836709877126095665e-3;
    p = p * t + 1.3858518113496718808e-4;
    p = p * t + 1.1738352509991666680e-6;
    q =     t + 2.2859981272422905412e+0;
    q = q * t + 4.3859045256449554654e+0;
    q = q * t + 4.6632960348736635331e+0;
    q = q * t + 3.9846608184671757296e+0;
    q = q * t + 1.6068377709719017609e+0;
    q = q * t + 3.5609087305900265560e-1;
    q = q * t + 5.3963550303200816744e-2;
    q = q * t + 4.3873424022706935023e-3;
    q = q * t + 1.3858762165532246059e-4;
    q = q * t + 1.1738313872397777529e-6;
    t = p / (q * t);
    if (a < 0.0) t = -t;
  } else if (fa >= 0.75) {
    



    t = a * a - .87890625;
    p =         .21489185007307062000e+0;
    p = p * t - .64200071507209448655e+1;
    p = p * t + .29631331505876308123e+2;
    p = p * t - .47644367129787181803e+2;
    p = p * t + .34810057749357500873e+2;
    p = p * t - .12954198980646771502e+2;
    p = p * t + .25349389220714893917e+1;
    p = p * t - .24758242362823355486e+0;
    p = p * t + .94897362808681080020e-2;
    q =     t - .12831383833953226499e+2;
    q = q * t + .41409991778428888716e+2;
    q = q * t - .53715373448862143349e+2;
    q = q * t + .33880176779595142685e+2;
    q = q * t - .11315360624238054876e+2;
    q = q * t + .20369295047216351160e+1;
    q = q * t - .18611650627372178511e+0;
    q = q * t + .67544512778850945940e-2;
    p = p / q;
    t = a * p;
  } else {
    



    t = a * a - .5625;
    p =       - .23886240104308755900e+2;
    p = p * t + .45560204272689128170e+3;
    p = p * t - .22977467176607144887e+4;
    p = p * t + .46631433533434331287e+4;
    p = p * t - .43799652308386926161e+4;
    p = p * t + .19007153590528134753e+4;
    p = p * t - .30786872642313695280e+3;
    q =     t - .83288327901936570000e+2;
    q = q * t + .92741319160935318800e+3;
    q = q * t - .35088976383877264098e+4;
    q = q * t + .59039348134843665626e+4;
    q = q * t - .48481635430048872102e+4;
    q = q * t + .18997769186453057810e+4;
    q = q * t - .28386514725366621129e+3;
    p = p / q;
    t = a * p;
  }
  return t;
}

static inline double erfcinv(double a)
{
  double t;
  volatile union {
    double d;
    unsigned long long int l;
  } cvt;

  if (__isnan(a)) {
    return a + a;
  }
  if (a <= 0.0) {
    cvt.l = 0xfff8000000000000ull;
    t = cvt.d;                        
    if (a == 0.0) {
        t = (1.0 - a) * exp(1000.0);  
    }
  } 
  else if (a >= 0.0625) {
    t = erfinv (1.0 - a);
  }
  else if (a >= 1e-100) {
    



    double p, q;
    t = log(a);
    t = 1.0 / sqrt(-t);
    p =         2.7834010353747001060e-3;
    p = p * t + 8.6030097526280260580e-1;
    p = p * t + 2.1371214997265515515e+0;
    p = p * t + 3.1598519601132090206e+0;
    p = p * t + 3.5780402569085996758e+0;
    p = p * t + 1.5335297523989890804e+0;
    p = p * t + 3.4839207139657522572e-1;
    p = p * t + 5.3644861147153648366e-2;
    p = p * t + 4.3836709877126095665e-3;
    p = p * t + 1.3858518113496718808e-4;
    p = p * t + 1.1738352509991666680e-6;
    q =     t + 2.2859981272422905412e+0;
    q = q * t + 4.3859045256449554654e+0;
    q = q * t + 4.6632960348736635331e+0;
    q = q * t + 3.9846608184671757296e+0;
    q = q * t + 1.6068377709719017609e+0;
    q = q * t + 3.5609087305900265560e-1;
    q = q * t + 5.3963550303200816744e-2;
    q = q * t + 4.3873424022706935023e-3;
    q = q * t + 1.3858762165532246059e-4;
    q = q * t + 1.1738313872397777529e-6;
    t = p / (q * t);
  }
  else {
    



    double p, q;
    t = log(a);
    t = 1.0 / sqrt(-t);
    p =         6.9952990607058154858e-1;
    p = p * t + 1.9507620287580568829e+0;
    p = p * t + 8.2810030904462690216e-1;
    p = p * t + 1.1279046353630280005e-1;
    p = p * t + 6.0537914739162189689e-3;
    p = p * t + 1.3714329569665128933e-4;
    p = p * t + 1.2964481560643197452e-6;
    p = p * t + 4.6156006321345332510e-9;
    p = p * t + 4.5344689563209398450e-12;
    q =     t + 1.5771922386662040546e+0;
    q = q * t + 2.1238242087454993542e+0;
    q = q * t + 8.4001814918178042919e-1;
    q = q * t + 1.1311889334355782065e-1;
    q = q * t + 6.0574830550097140404e-3;
    q = q * t + 1.3715891988350205065e-4;
    q = q * t + 1.2964671850944981713e-6;
    q = q * t + 4.6156017600933592558e-9;
    q = q * t + 4.5344687377088206783e-12;
    t = p / (q * t);
  }
  return t;
}

static inline double normcdfinv(double a)
{
  return -1.4142135623730951 * erfcinv(a + a);
}

static inline double normcdf(double a)
{
  double ah, al, t1, t2, u1, u2, v1, v2, z;
  if (fabs (a) > 38.5) a = copysign (38.5, a);
  ah = a * 134217729.0;
  u1 = (a - ah) + ah;
  u2 = a - u1;
  v1 = -7.0710678398609161e-01;
  v2 =  2.7995440410322203e-09;
  t1 = a * -7.0710678118654757e-1;
  t2 = (((u1 * v1 - t1) + u1 * v2) + u2 * v1) + u2 * v2;
  t2 = (a * -(-4.8336466567264567e-17)) + t2;
  ah = t1 + t2;
  z = erfc (ah);
  if (a < -1.0) {
    al = (t1 - ah) + t2;
    t1 = -2.0 * ah * z;
    z = t1 * al + z;
  }
  return 0.5 * z;
}

static inline double erfcx(double a)
{
  double x, t1, t2, t3;

  if (__isnan(a)) {
    return a + a;
  }
  x = fabs(a); 
  if (x < 32.0) {
    








  
     
     
    t1 = x - 4.0; 
    t2 = x + 4.0; 
    t2 = t1 / t2;
       
    t1 =         - 3.5602694826817400E-010; 
    t1 = t1 * t2 - 9.7239122591447274E-009; 
    t1 = t1 * t2 - 8.9350224851649119E-009; 
    t1 = t1 * t2 + 1.0404430921625484E-007; 
    t1 = t1 * t2 + 5.8806698585341259E-008; 
    t1 = t1 * t2 - 8.2147414929116908E-007; 
    t1 = t1 * t2 + 3.0956409853306241E-007; 
    t1 = t1 * t2 + 5.7087871844325649E-006; 
    t1 = t1 * t2 - 1.1231787437600085E-005; 
    t1 = t1 * t2 - 2.4399558857200190E-005; 
    t1 = t1 * t2 + 1.5062557169571788E-004; 
    t1 = t1 * t2 - 1.9925637684786154E-004; 
    t1 = t1 * t2 - 7.5777429182785833E-004; 
    t1 = t1 * t2 + 5.0319698792599572E-003; 
    t1 = t1 * t2 - 1.6197733895953217E-002; 
    t1 = t1 * t2 + 3.7167515553018733E-002; 
    t1 = t1 * t2 - 6.6330365827532434E-002; 
    t1 = t1 * t2 + 9.3732834997115544E-002; 
    t1 = t1 * t2 - 1.0103906603555676E-001; 
    t1 = t1 * t2 + 6.8097054254735140E-002; 
    t1 = t1 * t2 + 1.5379652102605428E-002; 
    t1 = t1 * t2 - 1.3962111684056291E-001; 
    t1 = t1 * t2 + 1.2329951186255526E+000; 
      
    t2 = 2.0 * x + 1.0; 
    t1 = t1 / t2;
  } else {
    
    t2 = 1.0 / x;
    t3 = t2 * t2;
    t1 =         -29.53125;
    t1 = t1 * t3 + 6.5625;
    t1 = t1 * t3 - 1.875;
    t1 = t1 * t3 + 0.75;
    t1 = t1 * t3 - 0.5;
    t1 = t1 * t3 + 1.0;
    t2 = t2 * 5.6418958354775628e-001;
    t1 = t1 * t2;
  }
  if (a < 0.0) {
    
    t2 = ((int)(x * 16.0)) * 0.0625;
    t3 = (x - t2) * (x + t2);
    t3 = exp(t2 * t2) * exp(t3);
    t3 = t3 + t3;
    t1 = t3 - t1;
  }
  return t1;
}

static inline float rsqrtf(float a)
{
  return (float)rsqrt((double)a);
}

static inline float rcbrtf(float a)
{
  return (float)rcbrt((double)a);
}

static inline float sinpif(float a)
{
  return (float)sinpi((double)a);
}

static inline float cospif(float a)
{
  return (float)cospi((double)a);
}

static inline void sincospif(float a, float *sptr, float *cptr)
{
  double s, c;

  sincospi((double)a, &s, &c);
  *sptr = (float)s;
  *cptr = (float)c;
}

static inline float erfinvf(float a)
{
  return (float)erfinv((double)a);
}

static inline float erfcinvf(float a)
{
  return (float)erfcinv((double)a);
}

static inline float normcdfinvf(float a)
{
  return (float)normcdfinv((double)a);
}

static inline float normcdff(float a)
{
  return (float)normcdf((double)a);
}

static inline float erfcxf(float a)
{
  return (float)erfcx((double)a);
}







static inline int min(int a, int b)
{
  return a < b ? a : b;
}

static inline unsigned int umin(unsigned int a, unsigned int b)
{
  return a < b ? a : b;
}

static inline long long int llmin(long long int a, long long int b)
{
  return a < b ? a : b;
}

static inline unsigned long long int ullmin(unsigned long long int a, unsigned long long int b)
{
  return a < b ? a : b;
}

static inline int max(int a, int b)
{
  return a > b ? a : b;
}

static inline unsigned int umax(unsigned int a, unsigned int b)
{
  return a > b ? a : b;
}

static inline long long int llmax(long long int a, long long int b)
{
  return a > b ? a : b;
}

static inline unsigned long long int ullmax(unsigned long long int a, unsigned long long int b)
{
  return a > b ? a : b;
}



#pragma warning(default: 4211)

#line 3666 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"

#line 3668 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"

#line 3670 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"

#line 3672 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.hpp"


#line 9823 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"

#line 9825 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"

#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions_dbl_ptx3.h"






















































#line 56 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions_dbl_ptx3.h"

#line 58 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions_dbl_ptx3.h"







































































































































































































#line 258 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions_dbl_ptx3.h"




#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions_dbl_ptx3.hpp"






















































#line 56 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions_dbl_ptx3.hpp"

#line 58 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions_dbl_ptx3.hpp"




























































































































































































































































































































































































































































































#line 535 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions_dbl_ptx3.hpp"



#line 539 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions_dbl_ptx3.hpp"

#line 263 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions_dbl_ptx3.h"
#line 264 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions_dbl_ptx3.h"

#line 266 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions_dbl_ptx3.h"
#line 9827 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"

#line 9829 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\math_functions.h"

#line 220 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\common_functions.h"

#line 222 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\common_functions.h"

#line 247 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\crt/host_runtime.h"





#line 253 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\crt/host_runtime.h"

#pragma pack()



#pragma warning(disable: 4099)





#line 265 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\crt/host_runtime.h"

#line 267 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\crt/host_runtime.h"

#line 269 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\crt/host_runtime.h"

#line 271 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\crt/host_runtime.h"
#line 3 "d:\\vinods\\repos\\msr-dssm\\private\\vinods\\cudalibmanaged\\kernels\\x64\\debug\\kernel.cudafe1.stub.c"
#line 1 "d:\\vinods\\repos\\msr-dssm\\private\\vinods\\cudalibmanaged\\kernels\\x64\\debug\\kernel.fatbin.c"
#line 1 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\fatBinaryCtl.h"
































#line 1 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\fatbinary.h"
















































typedef struct fatBinaryHeader *computeFatBinaryFormat_t;




#line 55 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\fatbinary.h"



#line 59 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\fatbinary.h"



















struct __declspec(align(8)) fatBinaryHeader
{
  unsigned int           magic;
  unsigned short         version;
  unsigned short         headerSize;
  unsigned long long int fatSize;
};


typedef enum {
  FATBIN_KIND_PTX      = 0x0001,
  FATBIN_KIND_ELF      = 0x0002,
  FATBIN_KIND_OLDCUBIN = 0x0004,
} fatBinaryCodeKind;

#line 94 "c:\\program files\\nvidia gpu computing toolkit\\cuda\\v7.0\\include\\fatbinary.h"
#line 34 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\fatBinaryCtl.h"






typedef enum {
  FBCTL_ERROR_NONE = 0,
  FBCTL_ERROR_NULL,           
  FBCTL_ERROR_UNRECOGNIZED,   
  FBCTL_ERROR_NO_CANDIDATE,   
  FBCTL_ERROR_COMPILE_FAILED, 
  FBCTL_ERROR_INTERNAL        
} fatBinaryCtlError_t;
extern char* fatBinaryCtl_Errmsg (fatBinaryCtlError_t e);

extern fatBinaryCtlError_t fatBinaryCtl_Create (void* *data);

extern void fatBinaryCtl_Delete (void* data);


extern fatBinaryCtlError_t fatBinaryCtl (void* data, int request, ...);














typedef enum {
  fatBinary_PreferBestCode,  
  fatBinary_AvoidPTX,        
  fatBinary_ForcePTX,        
  fatBinary_JITIfNotMatch    
} fatBinary_CompilationPolicy;





extern fatBinaryCtlError_t fatBinaryCtl_PickCandidate (void* data);







extern fatBinaryCtlError_t fatBinaryCtl_Compile (void* data, 
                                                 void* *elf, size_t *esize);








typedef struct {
  int magic;
  int version;
  const unsigned long long* data;
  void *filename_or_fatbins;  

} __fatBinC_Wrapper_t;

















#line 124 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\fatBinaryCtl.h"



#line 128 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v7.0\\include\\fatBinaryCtl.h"
#line 2 "d:\\vinods\\repos\\msr-dssm\\private\\vinods\\cudalibmanaged\\kernels\\x64\\debug\\kernel.fatbin.c"



extern "C" {
#line 7 "d:\\vinods\\repos\\msr-dssm\\private\\vinods\\cudalibmanaged\\kernels\\x64\\debug\\kernel.fatbin.c"

#pragma data_seg(".nv_fatbin")
static const __declspec(allocate(".nv_fatbin")) unsigned long long fatbinData[]= {
0x00100001ba55ed50,0x000000000000a2c8,0x0000009001010002,0x0000000000007128,
0x0000000000007128,0x0000001400010007,0x0000004800000040,0x0000000000002047,
0x0000000000000000,0x000000000001dc20,0x646f6e69762f3a44,0x2f736f7065522f73,
0x4d5353442d52534d,0x657461766972702f,0x2f73646f6e69762f,0x4d62696c61647543,
0x4b2f646567616e61,0x6b2f736c656e7265,0x75632e6c656e7265,0x0000000000000000,
0x010102464c457fa2,0x0002660001000733,0x78310001004600be,0x08c9f822000801db,
0x40001405140df500,0x4600400003003800,0x7368732e00000100,0x082e006261747274,
0x2aff00086d792700,0x2e0078646e68735f,0x325a5f2e74786574,0x4378697274616d33,
0x72746e4573736f72,0x726f72724579706f,0x69695f535f536650,0x666e692e766e2e00,
0x6168736f16002d6f,0x09011a005c646572,0x6174736e6f639f00,0x5f7015003b30746e,
0x00415f6775626564,0x61735f6765725fb2,0x66aa00152e007373,0x65722e00656d6172,
0x346800f70300116c,0x0400dc66686e6174,0x3102fc0021030012,0x776e6d756c6f6333,
0x665078614d657369,0x00050700210f010c,0x00eb080700230f01,0x120088040400260f,
0x754c65524e010930,0x820604001e0f0085,0x0f007f0d00200e00,0x1b02010405000023,
0x696f6d6769537e00,0x070700210f010464,0x98000200230f0104,0x01260a0e00660f01,
0xf70044020200260f,0x735f616475635f15,0x5f7669645f30326d,0x7a74666f6e5f6e72,
0x6f6c735f3233665f,0x0f00b86874617077,0x07f203210413002f,0x6e6174536e714431,
0x6c61764564726f66,0x02886e6f69746175,0x2e0f032209028c01,0x00300f0323061300,
0x1000330f031b0913,0x686e61544f023d0b,0x3d0d001e0b07023d,0x0e01b80800200802,
0x230805025c0f005d,0x001b361201570400,0x6e616d6c6c654271,0x6544646e418603dc,
0x5f532d00cb766972,0x6d061f00390f00b6,0x0178091e003b0f01,0x030126041b003e0f,
0x5673756c508f0036,0x260f000559746365,0x00280f0193060f00,0x08002b0f017c090b,
0x4e047a3819009c04,0x260f04e965646e49,0x00280f009c060d00,0x08002b0f009c090b,
0x6f636e49b002200b,0xa2657461726f7072,0x0f02170e016e0704,0x320f020e0d120030,
0x00350f02050e0e00,0x002d391d00c4040d,0x0f0300c70f04bf03,0x350f00ca061c0033,
0x00380f00cd091800,0x33663f0505660f15,0x060020010a055732,0x8e040400410f0433,
0x614871008e341202,0x0005e372616d6164,0x00260f028e0b0003,0x0b00280f028e060b,
0x0f04002b0f028e09,0x8e0f04d4000b028e,0x028e0e00300e1902,0x0f1e028e0f00320e,
0x6c43092903020035,0x0195000925656e69,0x3f00140a0100180f,0x170101002b787470,
0x0209660800100600,0x626186000c020010,0x09a62e0076657262,0x611900600409b50c,
0x00290f0011010024,0x71636f2900620300,0x7255001a636f2400,0x70890a0165676e61,
0x6173656d616e6275,0x7f00e90500150600,0x3a7478745f787470,0x5e0f100a9d0f170b,
0x617261705f6faf0b,0x0f0b4d0d240b656d,0x0f040afe0f060b6e,0x9b0f0b1f0e760b86,
0x0bb30f0b090e6c0b,0x0bca0f0305df0f55,0x0bf00f120b950f36,0x0c150f110b590f49,
0x0c2a0f000b8f0faa,0x0c5a0f170b720f8a,0x0c770f050bdb0fdb,0x0c940f050bf80f8e,
0x0cbb0f0f0bf70f8e,0x0ce50f090c150fb6,0x020f090c660f2aff,0x290f110c650f8a0d,
0x7d0900010fddff0d,0x183600030000004d,0x18291d0018dc1100,0x041d001801152000,
0x051d00182d110018,0x371d001854110018,0x381d00188d110018,0x2a1d0018ef110018,
0x1d0018022a200018,0x1d00188311001839,0x1d0018be1100182b,0x000003207500183a,
0x0298220010430022,0x1d00300359200008,0x1500307f1100302c,0x1119e9581300103b,
0x2000303b1d0030a5,0x00183c1d00180425,0x00182d1d0018ae11,0x00183d1d0018f611,
0x182e1d0018056e20,0x183e1d0018c11100,0x2f1d0018066b2000,0x3f1d0018c6110018,
0x1e00180737200018,0x401d00180100f030,0x311d0018f0110018,0x1d00180842200018,
0x1d0018d111001841,0x0018093020001832,0x0018c8110018421d,0x180a00200018331d,
0x187b110017431d00,0x18ec110018441d00,0x0b3e200018341d00,0xcd110018451d0018,
0x02200018351d0018,0x110018061d00180c,0x110018071d00182e,0x110018081d001858,
0x110018091d001874,0x1100180a1d001882,0x1100180b1d00188e,0x1100180c1d0018ca,
0x2000180d1d0018f2,0x00180e1d00180d17,0x03f010122603d200,0x00014b57009ba013,
0x0318781303a81200,0x03a8101600187510,0x021520000803d822,0x30b0130390060018,
0x0378060018a61100,0x0018041004136014,0x1104439013031806,0xa0130300060018e1,
0x0600180591200048,0xa9200173901302e8,0x301302d006001806,0x0600180762200090,
0x1b200018f81302b8,0x781302a006001808,0x1d00180906200018,0x00180a5e2000d842,
0x180b17200048441d,0x0018e01302400600,0x0034b21311119c0f,0xa401083164722540,
0x0002700000001005,0x0015051300150100,0x7d3210002a027825,0x0115015b20052002,
0x001507003233002a,0x003360002a01b825,0x282503cb05000002,0x1503003333002a09,
0x1601002a09302400,0x3e38150124051003,0x50052002b4351000,0xb03610001405000d,
0xba0500a558052002,0x68052902ac371000,0x1000002838110014,0x2839110014881500,
0x2831110014801900,0x0064401500100000,0x0090560029303121,0xfa31100029a80000,
0x32110015a0052a02,0x15c016001100002a,0x15b819002a331100,0x00e0c01800290200,
0xc8022000d7387020,0x32702100280401e2,0x0504d7d0022002b7,0xd819002939110015,
0x001a000029030014,0x0535311100521015,0x00cf281600110210,0x00e4013828015c02,
0x0000015501703312,0x0171341101ae08c8,0x01d8980000014856,0x0001505601223411,
0x29019b0201d87000,0x002a3511020201a0,0x2c3611020201a829,0x002ad01600260002,
0x0015b813022c3611,0x2a38326631002a01,0x00d1d81600110000,0x160011021005d601,
0x021005bb010015e0,0x31210069f8160011,0x0000020857004030,0x56006b301102c058,
0x2102c13000000210,0xec02602a002c3131,0x026829002c311102,0x00031832312102ed,
0x3211002c90170028,0xc302001678130319,0x029026002b351200,0x15353766254107bc,
0xbe03682500110000,0x02a85401d3321101,0x337022002ab80000,0x15d01504af0001be,
0xb819002a33322100,0x02e056002a030015,0x01e801002af00000,0x0069081600110210,
0x0003180275063f01,0xbd36110093032800,0x002a401608700000,0x0015280228057901,
0x0000035865002a04,0x00d23911025103a0,0x120015901500ce00,0x04c8037026017f32,
0x1100016832722532,0x1537110054801600,0x0015041b00110100,0x003fb00000038856,
0x9800000345015003,0x930801503513003f,0x0000153837663100,0x1200d20480250011,
0xb800000346015037,0x11021006300100e7,0xe737110054d01600,0x0093081505510000,
0x1600590002913512,0x2600011102001570,0x6539120015201600,0x0015180000044502,
0x002a1819027a3612,0x1600110002633612,0x1a034e3211001568,0x56034e3311001528,
0x1100156000000430,0x0000043856044734,0x1a00933511001548,0x110000a802001540,
0x052a020015581600,0x01e338120015501a,0x190015391100690a,0x0015303721009360,
0x01e3371201116819,0x376623017a047027,0x333821001509031e,0x04882b00110001a4,
0x030777049026031e,0x615f32676ca10ef6,0x35155c786f727070,0x3fa815002a677261,
0x049855013a391100,0x7c34110014f00000,0x14b8000004a05500,0x00390006dd611200,
0x000014020015b015,0x9a0201cbd8160010,0x00e2331100140904,0x0014d0000004c055,
0x120014c81800e102,0xf81600100004ac70,0x004c000064010149,0x0000140100f4e016,
0x1401011de8160010,0x703112003ce81900,0xb676120015f01901,0x0131051f00110100,
0x00002a7473643109,0x00018505082b0026,0x6b07e605182b0011,0x0810059000000520,
0x0200158816001500,0x3f701600150003a7,0x0528560135371100,0x033e02002a480000,
0x00150114003f7813,0x020069801a002a00,0x2aa816002600044f,0x0015901302810200,
0x1100002a02017503,0x2633120015b81500,0x00bd020015b01a01,0x120015c015001100,
0x8025001100003f37,0x650560341101b506,0x056005e0000005d0,0xf800000545067703,
0x19002a3531210015,0x0856002a030015e0,0x4b02005418000006,0x0015201600110005,
0x0000063065048e02,0x5600bd02018f0640,0x02002a5800000638,0x2a040015401804a3,
0x06b8000006706500,0x00ce00033e02058a,0x560773020015a816,0x0200159000000688,
0x54981600110001b9,0x2b00110003bc0200,0x0006a05600150718,0x0002a002003fc800,
0x3322003fb0150065,0x6622009308034134,0x982500110005b438,0x500008ad0200d207,
0xc5321200e7d01500,0x0054e81600110006,0x000007105504b802,0x0000bd3312009320,
0xf7020015881600a4,0x0015381600260004,0x0000072856026102,0x3019059f02001530,
0x1100059f3412002a,0x5031110015801600,0x8a32110015401a04,0x1578000007485605,
0x000746054b331200,0x1a047b0200156000,0x110000a802001558,0xb436120015701600,
0x1a06860200150a0a,0x781a059f02006970,0x118019031e020093,0x0788270782351201,
0x1903db356622017a,0x1100040503001590,0xa86f031e07a02b00,0x11058a07a8000007,
0x058a07c02a002600,0x8a0808000007b06a,0x07d0000007b86b05,0x07c82a003900058a,
0x080fcc07c822058a,0x8a020014d019058a,0x07e8000007d86a05,0x8a030014e018058a,
0x8a08102a00100005,0x8a07f82a004c0005,0x058a081a00100105,0x058a03003c080028,
0x00058a0300150819,0x11058a08182f0011,0x018508202b002600,0x120b83b816001100,
0x000008306600e331,0x02ad331205a00880,0x12002c5800000847,0x980000084701f134,
0x9057002c3411002c,0x3512002ca0000008,0x160115006e0303eb,0x0084a01b002c0000,
0x0600eec010012b02,0x2f00039a31120db6,0x014302002ce8170c,0xca31120de2091829,
0x64310de309202802,0x170028000e0e3831,0x030e0f3812002c48,0x09385d002c0a0016,
0x164013002c680000,0x000ccc0201c50300,0xf50200155016003d,0x202505002a50130c,
0x04be020238003b25,0x580401e900132109,0x0000230015101607,0x13027601a0260f04,
0x100014581b0eee03,0x00028a001a0de428,0xdf020dbb40160010,0x18008e0c003c0005,
0x043b3266220e9d68,0x02001578160ec600,0x15b8160011000188,0x040edc080b540300,
0x00982b0011000d52,0x3322001590190744,0x2a0600e300041130,0x220ef20902e00200,
0x0ec9b017002a3266,0x042678652d02f503,0xc100c82a0f070513,0x6166220ef3c01803,
0x74d01700250004a3,0x120f070900140001,0x66120f070902d966,0xe8000000e05b108b,
0x0118260010000174,0x113600094b01044e,0x0000140004120016,0x010412010826025c,
0x4702003c011803e9,0xa176120014101901,0x0108201f00110000,0x08030c0103fd000a,
0x27003f3366220f94,0xcd33662210100128,0x5550000001305600,0x130fbe0904270202,
0x22002a40190d1966,0x0200150a0bf33333,0x4178150fbf0003cc,0x1502b9000e14020f,
0x601808b302001460,0x118813003d040028,0x1302e60011320410,0x001310de040ffb98,
0x19106201a82a100f,0xb01811e6020028a8,0x0d031307dd001022,0xc810037301c02a10,
0x2631130f4905011f,0x0200150601b00006,0x66221021d01805ff,0x110015d81a126231,
0xf016001100001534,0x15e81a0218020015,0x001101002a361100,0x150a0e2303006906,
0x9302002904900200,0x2b10890300393300,0x1600110000e60210,0x18550174010fc728,
0xc502001420000002,0x003d04002820180f,0x0900024827010b00,0x150510f00304f701,
0x10d9581301240000,0x13f6381805248b0f,0x1003082704dd0213,0xe10014001503170c,
0x02002a0a06b00113,0x4b01002a2019017f,0xa002001430052902,0xa400802613e00004,
0x158a481003d00013,0x13e0081313a40016,0x0029001390006027,0x1c13900005076018,
0x1800147212051c08,0x1a09040e03007a78,0x04ef881805820305,0x2704da061313cc00,
0x04c5061314c100b8,0x13e104002a01082b,0x2704db071314d605,0x18043b04135200e0,
0xa509101901135220,0xe7201307a0641213,0x090ace0113520503,0x03fb0000290203fc,
0x03fa0a1404a24817,0x03fa061314870217,0x1540010c31015827,0x1902870201220118,
0x1000028702042370,0x0c44011449801800,0x0f0b003433040f09,0x06130dd202682704,
0x130dd201f0270410,0x13b601c82c041107,0x1813b60a03d5f813,0x081313b605034300,
0x035a0913b60a031c,0x13f628180d036612,0x045402302704f603,0x501900100004f603,
0xf2b019141e0413f2,0xb002882c141e0413,0xb002c82c139f0009,0x09b00513b5c01809,
0x09b002e82c002800,0x000687040016d013,0xe50313e0e818002a,0x0000038002f02f01,
0x181903aa881c13df,0xc9181a003e021376,0x2027001408002313,0x270015021315b103,
0x1431031c15b10368,0x2713f202130ff700,0x13f20313100c0380,0x801309cd02009107,
0xf20313100c05007d,0x02291e0f00150013,0xa02f00189e00282f,0xfe01a82700189e01,
0x280217099b021400,0xa202602a09b00401,0x3415038800302806,0x0e188800f02604a8,
0x1f0004a8361f04a8,0x04a6381f0004a737,0x01302a04a6071302,0xf8000996801804f8,
0x04f80409ab091c04,0x0104bcb018001100,0x145602001509177b,0x10ed701200dfb018,
0x0910987012099409,0x1b189b35702504b9,0x360b0117010028e0,0x047900091b001808,
0x1885301c04b60013,0x00055e0217b4301a,0x18054901882b08dc,0x047b647226089e40,
0xff0198290549a01c,0x084fa01307020201,0x2a047c0513054905,0x0490c0180e7501c0,
0x01e8260863326625,0xda031898051c0ab4,0x0079020028d8190e,0x18ff02782b084b00,
0x18ff02402b050600,0x5a0907fc00010800,0x28135a0907cf0413,0x13034e0302b70250,
0x6013034e0918a758,0x681f052b1a0f0015,0x1707e41014230351,0x2a00151113035105,
0x3d03510a09df0510,0x0115020351030035,0x03510a00033d481f,0x460203510a0b7902,
0x0351061d03510c06,0x01033d801f064303,0x520b05d90203520b,0x0003520800333f03,
0x33312f120352071f,0x035433312f140353,0x5d03000354341f15,0x03530f171101171d,
0x1603540a0f3f026d,0x66131c03050bb864,0xee021c03c819026a,0x321f0b8ed0052a1b,
0x03090be202010bcd,0x0b790a012566131c,0x031a2e02180fbd03,0x00140b036b000fbd,
0x081e3715081e2819,0x0fbd011db5024026,0x09123432120b7609,0x3805130f6900081b,
0x781816ad02782b1c,0x1902c03366221bf8,0x88190e0d03003f80,0x001c6133332f1c4c,
0x02a0271c61343325,0x00025b01b401103b,0x08d500106502a800,0xd703120fbd03382f,
0x0000025c0fbd0908,0x0408ea080fbd02d8,0x0fbd0308be090fbd,0xfa080fbd03001409,
0x000002300fbd0408,0x00025b0fbd090883,0xc903170fbd02f800,0x003c03180fbd040a,
0xbd040014090fbd03,0x0c0fbd0f08f9070f,0x2826167a031d3f09,0xbd010f2c01014703,
0x970350000003570f,0x121d54090fbd0111,0x12002a40190f5632,0x120015481900bc33,
0x041d54501801b034,0x03602b02ba001f13,0x3f04002a60181f13,0x0c02001d3f881800,
0x3303b0271d3f0313,0x03a8271d3f001318,0x002a0a0fc2011833,0x221d54080fc33812,
0x2b00110000543466,0x170125000fc303c0,0x6809040b010f6f04,0xba03d0261459031d,
0x0a03f6010f6f0122,0x0011000f6f020015,0x0fc3010f6f03f027,0x0fc3303222001509,
0x1de63132251e6409,0xe60003f902001507,0x031311750408271d,0x0000e604102b1de6,
0x01219b0428260011,0x2186041de5080fc3,0x0a003e0400292018,0xa601003f33111dbb,
0x0bbf03001550151d,0x1d001501141da604,0x00056f34121dbb05,0x1d18c40478271dbb,
0x1900e634121dbb03,0x0009a934121d9168,0x08b2051bbc001d52,0xb204f0271d3f0413,
0x04c8271d3f051308,0x0c08181c8a0408b2,0x0c10181c7505131c,0x1c0c28181c75041c,
0x770f001503086c01,0x0a1308bf41181232,0x0b1308bf381808aa,0x081308bf40180015,
0x091324aec81808aa,0x2f0124aed01f0015,0x0280270024ae0278,0x110c0a03c301073c,
0x6f000015000a1502,0x1b24c5010fd80904,0x5d040015040fd802,0x00a02a08ed0c1308,
0x3433113668190ca2,0x0ca2801708ed0d00,0x0d00363e08ec001d,0x1b08ea00002308eb,
0x200315e6090571a8,0x0036644324d70a11,0x1323ca201815930c,0x021900f82715940d,
0x1302190514dd0c17,0x9602019c0708ae0d,0x02190510a438130e,0x0bad581708ae0b13,
0x6701f02710b80c13,0x2486601a003e0010,0x09016813003e3911,0x2814650a13106706,
0x08af0b13106701c8,0x050817106701d028,0x089c09131067060c,0x143e081c0c2fe817,
0x03089af018114e03,0x18cd01143c09114e,0xe3026028089b0613,0x32088908121e0118,
0xf4681a1152316472,0x9c02190b0d31130b,0x0864020030324302,0x190512020f019817,
0x3a02003433083b80,0x1e0103103e281708,0x010016011507ab03,0x64723208120811bf,
0x021095f81b07c332,0x030a07079d000b29,0x15074c081316ca03,0x160a040701001601,
0x2b07230003210200,0x06524013034b0440,0x0306a54019039f09,0x002306cf401a03c9,
0xdd06295004001400,0x25dd0a24cb401325,0x11eb0125b3034827,0x11eb03a828247904,
0x311200810a226f01,0x03c828073c00015a,0xc816073d031311eb,0x28071302002307fa,
0x071404131baf0458,0x1505131baf042028,0x28291baf03f82c07,0x30291baf03011804,
0x38181baf03014304,0x1640131baf05065c,0x00252f0237420f00,0x0e3a02482f2a0e3a,
0x031f0c118b501f00,0x00118b061f00118b,0x8b061f00118b071f,0x391f130e3a0f0011,
0x010e39301f010e39,0x39321f010e39311f,0x38047a118b0f030e,0x001f76118be81f0e,
0x2b0df7001300118b,0xd801e022089d0268,0x1a18e818089d0915,0x9d09193304089d04,
0x089d0215ef401a08,0x089d02682b117900,0x1d39570f00155013,0xe82f00196000752f,
0x6005f02f00196005,0x00196002482f0019,0x032e0001ac02482b,0x00150001ac05382b,
0x0344002bd205402b,0x0040292bd202c02b,0x08930a00353305ca,0x150b1301ac073827,
0x6022080807402b00,0x1500080809254600,0x0013065e06882600,0x0e13019848180371,
0x0f1301980018035e,0x00343301c2060015,0x13124d8817037210,0x03ff0150261e9211,
0x1300373d2d83121d,0x1e7b1200383c2d82,0x14d0190028397221,0x2708d21200313300,
0x1e67131303ff0588,0x1e54141c03fff818,0x1100002a0003ff00,0x5614130387101800,
0x1b14131d3410171e,0x1a09041406d82a1a,0x081a1a042d03041a,0x0029041a19090415,
0x0401000d1dd7501f,0x820190261dd71013,0x06202703d6131305,0xe81803d61013031b,
0x03c108018501099f,0x051d331017097600,0x8b0619dc1117098b,0xf2201919dc0e1309,
0x02202611bc0f1319,0x1d0c09002a000ff8,0x381519da0a119403,0x1306eb02482c19da,
0x601a06eb0a110258,0x1911193831250933,0x750111050d098bc0,0x8be0191107041309,
0x9102e02b11080409,0x29037f092da70412,0x0003a902085d02f8,0x150019dd601c0015,
0x02f82819ddf81c00,0x001400036a020eef,0x160e130ac8041828,0x0f130ac803482800,
0x0e1309082019099c,0x0f1309086019106a,0x00ac0009080a2dfe,0x2cb0311219f8601a,
0x03ed36121a756819,0x13091c010f1e0317,0x01091cd819109708,0x30690209480b18ed,
0x09130908060ff204,0x00280009080e0ff3,0x1b0028000908101d,0xd9022db00a2b8210,
0x0001c1032daf0a10,0x130b610610280011,0x0b61048028095b04,0x0b370015095b0517,
0x9800000458118401,0x280f7a05130b4d04,0x2cce04130b4d04a0,0x2cd0040b4d04c028,
0x08660111c604c027,0xc8262d0d03001508,0x96000b760634da04,0xd8180b7605202c2c,
0x2914206472232c5b,0x0ed8321206590528,0x146103065a053029,0x03002c5817002800,
0x1616050016032e8c,0x0300990517038a01,0x05682b0010001139,0x6a042c5e68131139,
0x172c350001d80200,0x881801d802006ad0,0x2913716472232c21,0x03f53212076f05d8,
0x194802077005e02a,0x002c060826002800,0x050016f013126402,0x060827002b001699,
0x1908a23166220208,0x40393264322b9210,0x005668000006471d,0x322bfd2018221402,
0x2bd4000daa336472,0x270daa3312074b07,0x33647232074c0678,0x2ca0172beb000083,
0x00168813084a0200,0x052bad0217177105,0x2c032bc2031d1771,0x6b06c0270011001d,
0x002a030015031712,0x02002a072bd73315,0x5f02002ab81a0246,0x1501142c40c0130a,
0xc500140015031700,0x3abb061614230117,0xd02200940200d300,0x01001601152c0206,
0x15f8000006471410,0xb60728290d3d0201,0xb7071911b3331308,0x2bf1000098331208,
0x030c6603002c5817,0xd6080b429f0f0016,0x0337020a0fbb0109,0x09d60637020a2089,
0x127e040e09d6401f,0x2de01b01127ed81f,0x372c341f372c0a0d,0x361f00372c351f00,
0x00372c371f00372c,0x01e02a0a372c381f,0x2b301f372b0b3754,0x1f01372b311f0137,
0x372b341f14372b32,0x351f00372a371f00,0x003729371f00372a,0x28331f013728361f,
0xd6401a0602030037,0x1f37290d3387021d,0x37290a1f0137290b,0x31152837290b1f01,
0x08130b5768183728,0x09130b5728180d2e,0x2a000cef00180d2e,0x2f02029102302900,
0x1a31980426610939,0x481831980212a040,0x0260271f36031e92,0x2c1b133366250092,
0x0968701b23ee02f8,0xee0a12b10423ee02,0x23eed81d09520023,0x1323b2e0191a5c00,
0x1323b2f8191a5e02,0x330f001600097f03,0x1f010db23d1f0a46,0x2712201f01271220,
0x2027012712201f01,0x150710e004031203,0x312f002714311f00,0x1633312f00226d32,
0x1f012716341f0127,0x2716201f0a271635,0x1227160a3b71021f,0x25234eb819229932,
0x7701682b00153631,0xf9721310e6c01832,0x040ed5042bf10914,0x0da104002a09165f,
0x6a0216740b276a09,0x0b10960216740b27,0x16740b276a021674,0x6a02167409147103,
0x165e66122b270927,0x38e6026027167300,0x2755201b16730a13,0x0a16070316878018,
0x2b3c0a15da030d78,0x150475a81a0f6302,0x275502002b042139,0x1f3b0b09229db818,
0x0367201d023b0b18,0x201803670a167004,0x1f0f0a2695031686,0x2755481b1f0f3515,
0xfb0c275505042309,0x331f0203fb321f03,0x0203fb331f0203fb,0x550203fb0c01f902,
0x011e0b0803fb0427,0x0e0a01d0031a0010,0xd803082f02df030d,0x0203165430190003,
0x003f032756301904,0x0384044002033026,0x082b28031e093019,0x403813277f041d36,
0x1df34018277f0927,0x022755901a277f04,0x277f0916a404277f,0x13277f090069a013,
0x1f1449d30f0015a8,0x2701f82f01052732,0x22402f01f82f0005,0x650205510a014f01,
0x402f031f161c010a,0x401f54402f381f77,0x140904391f0a0904,0x402c0f010904391f,
0x71402c0f03ba001f,0x2a371f00402b331f,0x66474029381e0040,0x02b8092425020035,
0x0a0dca022bdc181b,0x681c052f3715122b,0x0104051a201827a7,0x1a3b01091b9d043b,
0x80130e3302006978,0x0dda0105da0523c1,0x9a0000bc0223d609,0xb81a05ee03402c1b,
0x12a70405ee031b84,0x0304db101a05ee0a,0x1b1c0540250905ee,0x27041b1c0a2bf504,
0x3e381f174d140f40,0x1f010d3ed81f2b0d,0x3e03802f010d3ee0,0x770d3e03882f000d,
0x03202fe10d3e401f,0x1f930d3e0f38043b,0x0d3e091f010d3e08,0xef04000d3e071f00,
0x3e081f03e910191f,0x1f020d3e091f020d,0x0d3e091f020d3e08,0x051d020d3e041f02,
0x1fef041421020943,0x3615278a0a279e08,0x09157503102b1feb,0x306f0b09eb04092c,
0xeb0330700b09eb03,0x0b09eb0330710b09,0x01307335312f3072,0x51490f307435312c,
0xd01f0108eb3a1f07,0x0104b0d81f0108eb,0x0270260104b0681f,0x0f0d049a0a130287,
0x840300b40040292f,0x1d1c0309d200171d,0x0817960309135019,0x17049c3472253a92,
0x2a0e0e0b1304d820,0x001488190c700090,0x383e049c0b00373d,0x1810cd02049b0c00,
0x1a002839111e2400,0x0b0d00303e0df6b0,0x001ede0923d8020e,0x00e02a24550404d8,
0xd80300dfe018251f,0x1f1b070e09e81804,0x031b94091b2e101b,0xd8031f1a2018082f,
0x0f7c05355b301804,0x070404d8000e0608,0x99681304d8401c0e,0x0df4701904d80904,
0xd80924780404d803,0x0c0f020dcbc81a04,0xd8190c0f092d1204,0xebf0192247022d27,
0x1c1b800023df0208,0x091f04001304ec90,0x04ec09355a0404ec,0x493a09171f19581c,
0x2a092d0004122a09,0x0380032cd6701912,0xd40000e302493609,0x2cd50404ec30192c,
0x0901051304ece819,0x2c20041304ecc019,0x04ac051c08d50019,0xd50a0df10408d505,
0x1d04b0040df20408,0x28181a25022bfb03,0x010dc739662f0ddb,0x312f010dc833312f,
0xca34312f010dc933,0x010dcb34312f010d,0x312e010dcc35312f,0x1f0f55680f0dcd35,
0x04e2e01f2b099239,0x881f010992e81f01,0xff0992901f010992,0x701f7e0992281f6e,
0x701739fe048a0992,0xa6181d0de204090e,0x09a6023a12781b09,0x900409a60a0de404,
0x1d09900009a60a09,0xba0d09b80109a6e8,0x368a0212d5e81904,0x920f313003297f09,
0x1b44ff03182a0509,0x0c0009a602047618,0x02480009a6701d05,0x0a09900409a6481d,
0xce044e34801909a6,0x04ce022953881b04,0x01740ef000169013,0x0001ffffffff0000,
0x288080810c007c04,0x8007288081ff0800,0x0710300005088080,0x1000058310000582,
0x1000058510000584,0x2880808050000586,0x8080820850003308,0x1000232810002328,
0x3000232810002328,0x0588100005870728,0x058a100005891000,0x058c1000058b1000,
0x058e1000058d1000,0x05901000468f1000,0x0592100005911000,0x0594100005931000,
0x0596100005951000,0x0598100005971000,0x059a100005991000,0x059c1000059b1000,
0x059e1000059d1000,0x05a01000559f1000,0x05a2100005a11000,0x05a4100019a31000,
0x05a6100005a51000,0x05a8100019a71000,0x05aa100005a91000,0x05ac100019ab1000,
0x05ae100005ad1000,0x05b0100019af1000,0x05b2100005b11000,0x05b4100019b31000,
0x05b6100005b51000,0x05b8100019b71000,0x05ba100005b91000,0x05bc100019bb1000,
0x64be100005bd1000,0x1300010020003a01,0x0002640443455d98,0x0c67ff019c0f0188,
0x0456ca0270255a0d,0x0f000b980425019c,0x2652730478ff0344,0xff019c0f019df204,
0x9ca8042f33130476,0x043f264d0480ff01,0xcd047fff019c0154,0x80ff019c20042f55,
0x04d4a4042f161204,0xe0042f53ba0480ff,0x2f111c0480ff0338,0xf70480ff0338c804,
0x80ff019cfa042f30,0x019cda1e019c7014,0x04d40f78ff0e7c0f,0x26402f041effffff,
0x83075320019cf404,0xfb0101a31b1b0018,0xab01010101000a0e,0xf26a57000209351a,
0xf0f0840107ce0300,0x84f080f080f5f0f0,0x0201038080a10005,0x300008f082820118,
0x00d8320009848086,0x1509001f04001001,0x1182150037841d00,0xf08080f082807000,
0x813a001105000480,0x0703828b00018081,0x09006bf201018002,0x101e0054801f0058,
0x5704002101005409,0x0064011802044a00,0x02f06a0013070320,0x1875011d01010008,
0x0063f08485808401,0x0103f18192000102,0x050070800100f802,0x007f0d007100009d,
0x5c8080f0f001086f,0x7884010cf9460000,0x009a09016a801301,0x808081f58084817f,
0x4500158619040180,0xd10f00118580f187,0xed840103bd4f0600,0x84848480815f1b01,
0x005905982f0f0059,0x01036f005a80101d,0x022e016284012002,0xaa012802054f004c,
0x0b02f10ba4220f00,0x016f0b014d09017a,0x1c851f09001e801f,0x2f050080091f0300,
0x07091119012a01e5,0xf5230f00d7831f02,0x3f2f03cd0f00d709,0x81150800f0820120,
0x0011050380300040,0x79f084280b012d0f,0x0f01240f01b50103,0x860a1e049501842f,
0x0dff2e0f01300f00,0xbe0a046d8210037f,0x8284101703810f00,0x04ab2f1000790f03,
0x3a01988016260571,0x00700f04d7200203,0x0335014c06e52f06,0x8f120f00e30f01e0,
0x760f1c02890f04db,0xd42f1100750f0800,0x1200e90f2c00e802,0x01352c0757043520,
0x762f3a4411f40757,0x65522f73646f6e69,0x2d52534d2f736f70,0x6972702f4d535344,
0x39f0001e65746176,0x4d62696c61647543,0x4b2f646567616e61,0x6300736c656e7265,
0x72676f72705c5c3a,0x73656c6966206d61,0x61696469766e5c5c,0x6d6f632075706720,
0x7420676e69747570,0x5c5c74696b6c6f6f,0x37765c5c07f3500c,0x6c636e695c5c302e,
0x5c3a43005c656475,0x004646100046505c,0x29363878282013f0,0x736f7263694d5c5c,
0x757369562074666f,0x6964757453206c61,0x562700403231206f,0x00936b0021004443,
0xf1010075632e08f0,0x65642a9d05ae9588,0x6e75665f65636976,0x682e7304fc4cef63,
0xa79281b202007070,0x6874616d08caa805,0xeb30001cb310001c,0x00682ec9001c0680,
0xdc8e0591e9f5f803,0xcf1301c000087c02,0x0100d8030ff208ba,0x01130202038e8ee3,
0x1802089003030464,0xc90277f003010401,0x0011131300110100,0x0202b9720100cb7b,
0x1902090004530201,0x0108f20307fb000d,0x01050260030304b8,0x0100c40220030404,
0x13007f0000310402,0x01940305ff3ba97a,0x020203b89d8ed501,0x029d95b2d5640112,
0x2212be1300002f02,0x6000add5012b0345,0x009c110204a90302,0x003a0105027bd75f,
0xc10335000f991303,0x0302046580003b00,0xa840003b12020ad8,0x088a2000e7060275,
0xb477f603014000b3,0x00210f1300210200,0x187aa51305005c0f,0x9d8ef10100f90371,
0x02002bf2e52f00c4,0x00c115160121e614,0x002e01210202035f,0xe485002e04f62302,
0x3301140203030100,0xe39001210201cf00,0x003c11020303728e,0x010a37006a851403,
0x03002e131f006ae3,0x0188a60320761304,0x8ecf0189aa56ab33,0x0209030108027a03,
0x2c14020039ab0109,0x1e1f006736190158,0x29026e6614030067,0x002f1a1f002f00cd,
0x0189035f3f490403,0x1e55140f002fff01,0x2e1b12005d201902,0x0039ff0439b91f00,
0x43059c020320042e,0x0262000538020103,0x23042bf00100f002,0x3d04e823042c02e0,
0xd820001201c02304,0x0031019820003004,0x044828020101b05c,0x4101060201043d00,
0x04a05c0441081204,0x94032101f4300201,0x10008200c8250046,0x500016a811000a30,
0x2100770203f00138,0x07b10810006e7b03,0x390000739002023f,0x00cf0800482b0301,
0x045f01b023045e01,0x00c12f070043081f,0x230446f112040044,0x04682813044701b8,
0x6804a02304680813,0x00650f0021381504,0xf1e8190065f91106,0x030102c00202a000,
0xa02f042502b00204,0x00e0151f01003802,0x0032b80202034f05,0x3301a82f04730202,
0x1d05980201400000,0xd001b82401c40200,0x03034f00b5011001,0x320a1f0200bbb802,
0x32031f0044000502,0x383f01dea61c0100,0x007d020001df8001,0x981f01e40104a803,
0x080081361f020081,0xcd2f01003204802f,0x0033e01f08003300,0x33f81f009d891102,
0x13080065201f1900,0x25011101d00032e8,0x10011108030b1308,0x012e0200f07a1506,
0x3b063a0803084087,0x05247c0720134906,0x24040000a0000f00,0x27670b0b3e080300,
0x01110c3fb6002a09,0x300600000a400112,0x00000b330a029000,0x000070001c010b07,
0xa3000b1331011d08,0x0509000006590658,0x34340a2b00233100,0x000803003b0b8700,
0x0000068000180c00,0x34001f1349000f0d,0x0804ff29881a1300,0x3a65666e65676c01,
0x392e342047444520,0xef2f162b057a0400,0x5c3a443200010804,0x5c1400555c110037,
0x1e0400555c130055,0x05cf5c1400550a00,0x006678616d660272,0x025a5000ba000006,
0x7803290628ea0000,0x70000f7903290010,0x0774616f6c660400,0x696466020000c509,
0x0009006665646976,0x004b059d24002c00,0x0f62032900106119,0x06026c8802002200,
0x3904522607320000,0x6c02007100100800,0x280000050066676f,0x00100400286b1b00,
0x0009038d02050027,0x1b0030731400a800,0x5f069c0159262400,0xe2b0900694002358,
0x0412fb070202ab98,0x08360f00110f2af7,0x2686401713320135,0x014f090000047470,
0x1a0195ccb14229c8,0x8d0f0587d4051f00,0x02750000c7000f88,0x851ba7092a28c213,
0x7475706e69069c01,0x0900001a06640026,0x696206076b009803,0x001d2815001d7361,
0x3015003c74756f3e,0x003c776f7236001f,0x001d3815001d0c11,0x4c0400200c425102,
0x12046de20707247e,0x0011001f00110558,0x4d0d1300ec0a1205,0x0195e4b190059100,
0x160e1500166a0a02,0xc8072c0016b21000,0x02004e01382c004e,0x0673003911130039,
0x01a902abc8e2b490,0x050064696f760b7f,0x000000150f048b33,0x982f0186161c004b,
0x0186161e00018602,0x000188161f016908,0x1f01491615016905,0x1500200602016930,
0x04000a4813016934,0x11701f00110559a5,0x69181f0169030500,0xb81c0169191b0201,
0x02004e01282c004e,0x1f0201691c1f0039,0x1787220f11319305,0x160187211c006900,
0x6573616245030dd8,0x63615101860c0025,0x00230b5b5b766974,0x0312211f0203120f,
0x211f0c0312211f09,0x1f0301c01c080312,0x1f01a903050011b0,0x0312241f0201a923,
0x12b01b0312b01c04,0x2a0e0501a9271f03,0x0045000391bb0f91,0x030ca81f01852c1c,
0x2c1f0b030c2c1f01,0x0c030c2c1f09030c,0x35640408030c2c1f,0x030c801a07031d0f,
0x0c2f1f0201632e1f,0x801b030c801c0403,0x08360163321b030c,0x0036bb04567400b1,
0xcb092132aa000007,0x0921062db2105e8d,0x0e0639b415000cda,0x600f008c750f0342,
0xbd371c007600198d,0x371f000342701f01,0x0b0342371f0f0342,0x42371f090342371f,
0x1c080342371f0c03,0x050011481f033158,0x0201df391b01c903,0x1c0403423a1f0107,
0x150342481b034248,0x060039b31000393d,0x946e0f93950e0341,0x018a421c004a0008,
0x421f00034705582f,0x090347421f0b0347,0x47421f0c0347421f,0x1f033605402b0803,
0x1f01520305001130,0x0347451f02034744,0x302a034705302b04,0x270168481a016805,
0x46021826033ef608,0x01162003464a1003,0x092109d0b1110370,0x03000db311000d25,
0x04402a47fa0309ab,0xb5040a7d061a0038,0x2f625c04006c0109,0xe8b02702006c04a0,
0xb407000db211006c,0x902c0f06421e0f03,0x02304e1c007e0025,0xba4e1f0003bad01f,
0x1f0b03ba4e1f0f03,0x03ba4e1f0903ba4e,0xb81c0803ba4e1f0c,0x03050011a81f03a9,
0x1f020252501f0252,0x03baa81c0403ba51,0x08a5541f03baa81b,0x00240f1299cd0f03,
0x0a26591d00630010,0x01d8731201a30915,0x2e7365726f635365,0x7572749c01ac0c00,
0x00236c6562614c65,0x01ac591f0201ac0f,0x591f0c01ac591f09,0x019b09802b0801ac,
0x01ac03050011701f,0xac5c1f0201ac5b1f,0x2a01ac09702b0401,0x03fe5f1b01ac0970,
0x0510260866015f26,0x7709213ffa000392,0x0003f1eeb5220385,0x282f0023d013002b,
0x002bb91202002b08,0x0f0d963f0f07640d,0x651c007d00239757,0xe302190788250219,
0x6574636964657270,0x021c756c61565164,0x616d7f00021c651f,0x0200267461485178,
0x736f686371021f06,0x6e495d1503416e65,0x060d07002c636964,0x52746e65727275cc,
0x0600276472617765,0x1e0b00e165100236,0x00fc01001e401a00,0x002865766974615b,
0x7369647200284815,0x662402ba6e756f63,0x06e508f001057400,0x70457473614c7369,
0x02002265646f7369,0x661502dc581e0043,0x060202dc601f02bc,0xc70402dc64150020,
0x1f001105807c043c,0x1f02dc0305001160,0x02dc691b0202dc68,0x01882c004e01182b,
0xdc6c1a003902004e,0x6d240016790a2102,0x2b1097b412109700,0x5005802b005004c8,
0x15003b706d743100,0x02d9e2b227003b73,0x250f149ad605002f,0xc47a1d0067001000,
0x78611d02c4041e02,0x02a40f02ca7a1e02,0x02a40f02d07a1e06,0x6d620002cb7a1f01,
0x0f00875068637461,0x6e4f02d00603002c,0x401e0e002f4d6e6f,0xd60502567a150276,
0x881d04725d071402,0x050011601f001105,0x0302567c1a025603,0xb90f0796490f01b1,
0xa18a1c0052000b45,0x273115122af01b01,0x1b001f0101910c00,0x6155018406001f32,
0x2c07001e6168706c,0x016a8a1f068d0809,0x0100387465623c00,0x548a150154060cec,
0x8a1f0203ca441f01,0x050ffd781b000174,0x03050011c81f0011,0x1b0203ca8c1f0174,
0x2c004ee81c03ca8d,0x1f003902004e0158,0x08a10c0f030f4e90,0x1f004b000200180f,
0x1f0c0d060809dd95,0x0c0d951f0b0c0d95,0x951f0c0c0d951f09,0x481c09bb05080c0d,
0x01530300110c096d,0x3880072c0169971a,0x6d0c200011b01b00,0x420100904311569b,
0x01810902319a1300,0x1301350c12145104,0x072b05520000669b,0x901f00110e002460,
0x150fc3f81b050011,0x050de4b41600be9d,0xa00f029ce70f01dc,0xa2a71f0059000f9d,
0x01e60f0026050d03,0xa71f0901e6a71f08,0x0801e6a71f0c01e6,0x0011c81f01d5d81c,
0x01e6a91f01e60305,0x0011b81b00380504,0x4701011c0101e608,0x08c41f0047ac1300,
0x34200208ad130102,0x031703011a054b01,0xa2000041ae130208,0x110e002470072b43,
0x101b050011a01f00,0xb61b00e0b01503e0,0x0c9f00930d100208,0x00040500746e6904,
0x2f23cf0498ff1a17,0x9af3040e1a170072,0x0e00110f03287114,0x6e2f001504106c01,
0x2f231704541a1700,0x0a94138d1a1700d4,0x0011040012d31400,0x201a170f0011d21e,
0x004eb91d004ea61c,0x2f250704471a170f,0x0af413701a170142,0x001105008d411300,
0x201a170f0011401e,0x11191b004e01062b,0x253104671a170f00,0x6413921a1701ac2f,
0x1104014aab1400a7,0x1a170f0011aa1e00,0x4e891d004e761c20,0x28d404411a170f00,
0x34cc1b711a17191f,0x0011171e00110516,0x004ede1c201a170f,0x081a170f004ef11d,
0x1a17020d2f6c2204,0x1702862f28ff0476,0x851400a73b13921a,0x11841e0011040180,
0x4e4d1c201a170f00,0x1a170f004e601c00,0x1703532f2be10447,0x5214008da713701a,
0x11511e0011040b34,0x4eb91c201a170f00,0x1a170f004ecc1d00,0x17ea1f002ce41307,
0x332f0030ef131c1a,0x002c4213171a1703,0x8b047e1a1703472f,0x7513931a17bc1f2c,
0x110401f3bb1400a7,0x1a170f0011ba1e00,0x4e9a1d004e871c20,0x309c045f1a170f00,
0xde139b1a1704dd2f,0x110414d4dc1400b8,0x1a170f0011db1e00,0x04032c004ef01c20,
0x2113071a170f004e,0x0e1a17046a2f0024,0x1704c82f00237d13,0x1fa56604f6267d1a,
0x730a135cff1a1700,0x1e0011059d9c0401,0x1c201a170f00118f,0x0f004e2f1d004e1c,
0x1c00505f1c1a1a17,0x04651a170f00506e,0xf01a1705fb2f3435,0x01a7fa140105b513,
0x0f0011f91e001104,0xa300347d04551a17,0xd82113c11a170f73,0x0011050008671300,
0x201a170f0011661e,0x004e461d004e331c,0x2f385704471a170f,0x75a204701a1706ee,
0x1e001104010aed14,0x1c0a1a170f0011ec,0x0f00119b1b003891,0x2f0026a7130b1a17,
0x24a81b071a1706dc,0x0011b91f00110e00,0x165e1a1706d92f05,0x136e1a170faff507,
0x0420817e1400850e,0x170f00117d1e0011,0x221b0038171c0a1a,0x32132d1a170f0011,
0x071a17076c2f0048,0x1f00110e0024331b,0x1707692f05001144,0x7e88047fb204261a,
0x0195ccb89000058b,0xf82f0017031c7978,0x1703d0290a001702,0x01602a0001001b00,
0x80b5900006400008,0x1803082a00100404,0x0018d01b00100400,0x88165fd50400580c,
0x02abc8e4b06b0058,0x102f0018041b3688,0x0018f01b0b001803,0x007001682a00700c,
0x0195ccb99000058b,0x081b00170300c788,0x006d0c001703006e,0x702a01340c001703,
0xb190000640000801,0x03202a0010040094,0xb11f00c4201e0018,0x1c0f021b240100c4,
0x758917fe2f1c1900,0x2f1b4205105a000c,0x0fd12f04981906d4,0xb1130dd02f1f8395,
0x00079d3916222f13,0x052b2f1b7b010d3b,0x6d270c212f166367,0x001c8a02150c0019,
0x03c82f1bb8021198,0x7ab302322f048795,0x2f07960c0a152f0c,0x145c2f1671f7086d,
0xa3640187270c692d,0x0108148dcf12ab2f,0x69737265762eb000,0xd1c7c72e34206e6f,
0x6d73207465677261,0xf2b834202c30325f,0x65726464612e0002,0x20657a69735f7373,
0x6973698000363436,0x413ceb2e20656c62,0x2060c46c2e282020,0xa40013203233622e,
0x306c61767465725f,0x24002828009f2029,0x60c4a40200160400,0xb8bd7b002900305f,
0x20830bb22e206730,0x133b3e373c702509,0x250920323366a500,0x7311001338333c66,
0x5b3e353c72410013,0x67656262007401a4,0x646c226a41306e69,0x30315c003c04006f,
0x3b5d6500765b202c,0x2c200023766f6d00,0x6d74003b72002820,0x78653900533a3070,
0x2e617262c1005865,0x31706d7409696e75,0x6134001731110029,0x0046321100467362,
0x2e70746573003b90,0x7025093100176567,0x30202c3203f5005c,0x4343434330463366,
0x00ed746f6e003b44,0x01f4005200003600,0x6172622032702540,0x3b345f3042420920,
0x3b31410010020071,0x61003a5500080000,0x005d341300726464,0x756d003b32662585,
0x1f202c353200196c,0x384200f000770000,0x7663003b42334141,0x020025697a722e74,
0x002836326631009d,0x37373220010e3519,0x3237313346429000,0x722e35031d3b3030,
0x39202c3835001e6e,0x003f0a0067371200,0x4642357c003f3911,0x3327003f45384542,
0x1a00063911003f30,0x270001310100bb38,0x7865005200bb0800,0x74662e4194282e32,
0x2c10927500002d7a,0x006903001f0b0031,0x13009c3619017902,0x303030384f018933,
0x00552c33220000db,0x3b32338f003f2014,0x00007b7063720000,0x003b3339007b3210,
0x433f005f3310005f,0xf5331202005f3030,0x5f33332401af0100,0x022e3515022e0a00,
0x2e08004642323433,0x2e35702100430002,0x2e331b022e361602,0x3a3229022e321302,
0x230100fd361a009e,0x039a000023331200,0x2900f67225200942,0x3102d90400153b36,
0x037f000014646e61,0x2d00f500192c3322,0x3633383437343132,0x0020726f003b3834,
0x337229004e2c3423,0x1c0234336620004d,0x28008f371302e072,0x03993112020c3a34,
0x230103b108007f03,0x4542373544427a01,0x8c0184311101e336,0x4231384136384333,
0x2400033231110184,0x003f321a005e0500,0x3830456e003f3511,0x01c301003f373736,
0x033c0a003f343127,0x4141457d033c3112,0x3c01003f39324141,0x3719003f36312703,
0x27030312311102fd,0x036f010241311d00,0x023f010115393128,0x1b3313023f716523,
0x3f0b028466302300,0x3f33702100b90002,0x8d361b023f341602,0x6d3519018d351301,
0x7452007837332804,0x361300273a32706d,0x0f08051137110008,0x3b37336602ce0103,
0x5b09280594747300,0x00255d302b310627,0x58746572003b3561,0x646e690582331400,
0x656f06757d003a30,0x090782207972746e,0x2a3436753f066e06,0x322c1f060c040a00,
0x171e0032311f1d00,0x003232332f003232,0x341f1e0032331f11,0x1d074a381d01074a,
0x0013353126074934,0x3c644c0013343620,0x075e311b075e3331,0x075e3111002b7513,
0x3c3b5d2e0f01660f,0x311f13003c321f00,0x13003c331f01003c,0x0f00f202003c3219,
0x00003b331f14003b,0x5d343c13003b341f,0x744201400208463b,0x005103057234706d,
0x6469746e78032300,0x04230000173b782e,0x7554001861746333,0x400101b06f6c2e6c,
0x3336722900370005,0x0000490304350000,0x058301002e0303b6,0x15035d3811003301,
0x391400370303a535,0x3125004e79190081,0x010082791c008230,0x31723a00390104bb,
0x1900853213003630,0x3603001600008579,0x3611008732312100,0x746c2004bd010087,
0x063309049d030027,0xc80a05540002c604,0xc834702100ff0004,0x5f313904c8351404,
0x100935311304c832,0x1001006a0a093531,0x0023010688321301,0x67371a07673a322e,
0x5f31330995311b07,0x2c01db3314003d33,0x006a3315012a3a37,0x0100ed020197331a,
0x453811054e02001f,0x3436733209a30000,0x83002664722200a8,0x622e6c6873003b34,
0x001b0001fc0102fa,0x0003b50300533213,0x00240003900100b5,0x5b100adf0602bb01,
0x1300603b5d2c0020,0x4800005f08008037,0x01005f0b001a0102,0x642800cc641101f0,
0x39005f3212005f38,0x062e05062f3b5d39,0xd830312f0077321d,0x001d010221020100,
0x1200763112007b0b,0x0106503111002033,0x4202001d5b110067,0x933a392201460106,
0x065204014e341101,0x53311f0653303126,0x064b0d0dee0d0606,0x2a0f06430e00220d,
0x2a0f05d7311d0c00,0x1f16002a321f0500,0x05f9331f1305f933,0xf8321f05f8391c12,
0x05f00f01130e0b05,0x05ac0f06011d0f0f,0x05df0f0000330f01,0x331e0b0033341f0c,
0x312f03c13214059c,0x9e32312f6a059d31,0x3f059f33312f7305,0x059f3213059f321b,
0x9f321f0f059f321f,0x3213059f321b1105,0x312f059f3216059f,0xa135312f2805a034,
0x140104c9331f0105,0x351704c70b04ae34,0x220005a1341f05a1,0x0003cd04b52d5d35,
0xb9706d6574430d33,0x4c003b6765725902,0x0b5f301c000b0111,0x31290b5903001602,
0x3b610b760300323b,0x14012b6c6c616300,0x1251202c2511b028,0x0047002800202c52,
0xf00311523b290039,0xfc00b3000bbe0605,0x6c6143202f2f7d02,0x646e45207165736c,
0x0127361f01273020,0x0b001b0001e70101,0x371a066938170127,0x0006515d382305ec,
0xec321c0c78020191,0xec321f05ec371605,0xfe0c1314470f0305,0x06100e1100340f05,
0x003c311f1e003c0f,0x18003c0f06340d28,0x0c7b0f28003c331f,0x361c130c7b391f14,
0x0f080683331f0683,0x0f0206950f1b0198,0x0f030c8f0f1d0046,0x0f010c990f1d0046,
0x0f020ca30f1e0045,0x06000cad0f1d0045,0x1f6b0711381f0533,0x1130322f73071139,
0x33130711331b3f07,0x1f0f0711331f0711,0x0711331b11071133,0x0711331607113313,
0x322f28071131322f,0x0cb3341f670cb232,0x15139d0716220b47,0x350cd2331f0cd234,
0x33009c060cd23215,0x145a090cd7202c35,0x1a6275733415bd0b,0x1914540113980100,
0xb50114460100b035,0x08b90f00b0371e00,0xbb31642e01e50202,0x341b0d8235312808,
0xb302079735110d82,0x0a02663a33323203,0x1f07973432260797,0x0f1c78060d0d8333,
0x830e002206050d83,0x130d830f002a0e0d,0x09002a321f002a0d,0x0d83361f210d830f,
0x130e120d83341f23,0x011d0e0f0d830f01,0x0f01260e0e0d830f,0x830e012f0e0e0d83,
0x72351f049434150d,0x74067236322f6a06,0x72341b3f0672371f,0x72341f0672341306,
0x1b110672341f0f06,0x1706723413067234,0x290672381f067234,0x1ccc08520d83391f,
0x1b4d30332a18ee06,0x3416001a0719650a,0x221e3b31332c128e,0x270fe90300193233,
0x12006f0305f67861,0x480f013302002234,0x3422006a35124a0d,0x332605b10a01a53a,
0x180d48341f05b135,0x340f0d480e20cc0d,0x3c0f030d480f0200,0x0e28003c311f2700,
0x331f17003c0f0d48,0x2f020d480f28003c,0x19c40e2406483031,0x01990e1d0d49351f,
0x0f01a30e210d490f,0x0f0601ad0f210d49,0x0f1d00450f010d04,0x1d0045351f010d49,
0x04f93514000d490f,0xd70f06c03a36333c,0x010706d7371f0006,0x3b372c04000103ce,
0x33010406d70f069f,0x1d9d0603ce391200,0x1f0106d80f06c008,0x1206a8020806d831,
0x331f00370a06ae30,0x14030006020806d9,0x6f040506d9381f05,0x06d9391f06d90806,
0xd9351306d9351b12,0x43391506d9351e06,0x06d90f0023351307,0x5f353b06d9391a01,
0x05003d3313006037,0x0606d939332d06d9,0xb1030114341907ae,0x2f01130100f30106,
0x49331f060d4a3034,0x33160d49321e190d,0x2269040108020d49,0x202a33662f07e100,
0x07381607e0381607,0x0734130107351b01,0x57351a071c341901,0x0032361300320900,
0x331f020dda3a352f,0x160dd9311e190dd9,0x362f0067010dd935,0x1a7b331f030daa3a,
0x3a31343207480239,0x3426074837190074,0x060cf9351f074832,0x250e0cfc0e28300e,
0x12002d0f0cff0e00,0x1f08002d0f0d020e,0x020d080f19002d32,0x06c20f208534312e,
0x017c6611141e0600,0x100d1d333c64664f,0x01340e080d1d361f,0x0f013e0e150d200f,
0x0e0036341f0a0d23,0x00360f010661321f,0x483615000d290f0e,0x342f6a0652331f20,
0x2b35342f75065234,0x33312f06520b0a0d,0x130653361b120653,0x070653361e065336,
0x540f002435130cc2,0x4b065533312a0106,0x3313006331315f36,0x36342f065605003f,
0x0a0656321f030656,0x0d2e37342f0cb102,0x30162d0d2d331f06,0x3666330060000d2e,
0x012b4b64151a1c34,0x36252a6c6e122a6d,0x2e009d641327cd34,0x0d4f341f27d03a38,
0x370027a633312401,0xb635120d51391c00,0x69643e074335122b,0x331f00930227ed76,
0x351d0d6b02002bf2,0x352f006e35120da6,0x2be3371e132be332,0x0853361b0e074c0f,
0x345f363a074c3613,0x03052be3381f2be3,0x71030d2be30f2b3d,0xe3311f2b08391a2b,
0x052b83323324092b,0x0f2ae83b382e2b47,0x05003f3417062be3,0x34332f2c9e0d2ae8,
0x2ca12c3422122be3,0x2e004802012be30f,0x062be30f2ae63b30,0x1f003f052d193714,
0x007b3610062be336,0x2be3371f2be3371b,0x33242cde34342609,0x311f2e110b005f37,
0x022e1331120c2be4,0x1b02323231262e14,0x3519046e04023236,0x3b2be734342d034c,
0x00fb012be7365f36,0x361f00163b34343a,0x1b022ad200002be9,0x2aaf01052beb0f00,
0xee3731723a005302,0x4c381c001634122b,0x2bf0371a00980405,0xf0361f052bf0351f,
0x020a2bf0371f072b,0x005e022abb022b4b,0x092bf0391f003f0b,0x003f022b90303227,
0x2bf031322f03490a,0x3f022e5132322609,0x3316030a31322a00,0x02024e35312d2e13,
0x1f072bf0331f0033,0xce3031260c2bf039,0x391b024a3031260c,0x3819018f38130190,
0x122bf235342b047c,0x08395f363317dc35,0x4407052230312200,0x840801f72c392319,
0x1f04600206250b02,0x012c341100062539,0x2f0c570a05806413,0x3a34120606253134,
0x05d0351d00a60313,0x0625361f00193612,0x007802015f341100,0x137c371f00783413,
0x341234137b331f06,0x19014938352408bb,0x0c353935260c3531,0x34e10f03137d361f,
0x1300370f13800d16,0x1f21003f0f13830e,0x0f13890e2b003f31,0x2b003f331f1a003f,
0x20d7381f1420d70f,0xa70f08138e371f24,0x490f0213910f1e01,0x490f0313940f2000,
0x480f0120e00f2000,0x480f0220e30f2100,0x371400139d0f2000,0x6a1a7430362f0b67,
0x321f742d9531362f,0x130d48371b3f1a74,0x0f1a74371f0d4837,0x74371b111a74371f,
0x4537160d4537131a,0x2f281a7433362f0d,0x087407b220e63436,0x1f4220c70f2d990e,
0x20c7351f0320c734,0x071b020320c20206,0x66253f14aa0400b0,0x01f837125220c736,
0x1b160a02473a3522,0x99371f0799363626,0x930d103cf20f0307,0x34ab0f0300310f07,
0x39311f2400390f00,0x00390f07810e2500,0x750f250039331f14,0x0e077632332e0207,
0x1d001430321f34c9,0x080777381f143131,0x1434d00f06018b0f,0x03076b0f1a00430f,
0x021afc0f1a00430f,0x021af90f1a00420f,0x0007590f1a00420f,0x14a4371f057b3815,
0x2f7514a438362f6a,0xa4381f00075b3936,0xf1001af7321e0514,0x391406fc38702100,
0x3813075c381b06fc,0x322b075c381e075c,0x02075d381c14a439,0x384b0e2c321c0e2b,
0x413313006535325f,0x14a6301f34f70600,0x2b461afc31372f27,0x8374672a1afd3832,
0x11840f0f39381e11,0x010e34315f384b0c,0x1a6a341f010e3413,0x3217012813311f34,
0x2f371128b107074d,0xc83414147b351207,0x0f03321c01560000,0x31da371702883712,
0x372e108002010f05,0x332d010f0422d335,0x7032109701029130,0x0122331640ba3232,
0x160270040121361b,0x30163cad03029435,0x383a12af37180077,0x3cb83212029c365f,
0x018e3417006c3012,0x1c0041371303010c,0x00e4353228006d37,0x126337111043381e,
0x01020e454632434e,0x00803532703213d1,0x007f391b00803616,0x0924e603007f3813,
0x42342f007c0201a7,0x043731333707007c,0x45391213b3391b01,0x01125c01139e0a00,
0x363838333879001c,0x01414c01139a3730,0x3335363031aa0024,0x1213a03631323335,
0x72143803010b7537,0x29005532322404d6,0x11bf751111a43332,0x8b32322a038a3511,
0x09c5371213240102,0x121577020371351c,0x314541467b13ab37,0x1725010163423734,
0xe338170163373222,0x01210404e4311c01,0x006409016630312a,0x381d00a30e02c604,
0x435809006500151f,0x000aac0f004b3519,0x16470f002138352e,0x9935101647351005,
0x01004167656e3502,0x361142fb351a01ce,0x12a906001b0a0311,0x0a00004e2c313632,
0x01001e0700da030b,0x65361a00980203c4,0x0632120b3d361214,0x7a162c022c550a00,
0x1b36334136433443,0x4531427c0baa0200,0x3612149b36453439,0x00600302d9010087,
0x7d011c361244060a,0x3f41314241414144,0x003f361700a80200,0x030105361141090a,
0x3711003f331c0027,0x1a00d83936270129,0x3725012c0101eb31,0xa903036c07014a30,
0x5a38312c18fb0019,0x022a03008d381100,0x000402800d051702,0x95676c2c37ae0007,
0x6f0003a833382418,0x7802002c3a342305,0x4934322400490905,0x322743210d341f00,
0x4583766f280e0139,0x0544f6030402d80f,0x0f39140153081a33,0x12156f0d066c0c1a,
0x066c36372f156f37,0x6c39372f1b940200,0xb701066c311d0806,0x17078e343170320d,
0x3124066d0c041d35,0x3116066f0e015435,0x70311b066f0b007a,0xfe33702319090106,
0x0971321d05f00707,0x280672311d067104,0x0006720f00ea3731,0x730107067230382f,
0x0800823731703218,0x38312406730c050f,0x7f391606750b0082,0x0a07007f42342f00,
0x011a2939312f0675,0xf236141a1439372b,0x1a32060106760f19,0x2c3138240506760f,
0x0f1a47060676071a,0x1a4a343324020676,0x1203a33811029507,0x2309e7341d1c6b38,
0x0606760f006d2c39,0x06763931220af501,0x321403f60c0af508,0x38280676321a0122,
0xa30406760e006431,0x321a000676321f00,0x0f004b3633280676,0x0f0021371e01039e,
0xdc2c353333050676,0x913833240676071c,0x0a19b202056b0745,0x2b3017191f07001b,
0x3134260676391c1d,0x9303332e341b1cea,0x1f19ae0819990419,0x7634342f06067633,
0x1d65021a91020906,0x1f003f331a006003,0x00a8341209067636,0x00b4361a003f3517,
0x0b1a0c3714333302,0xd838171adb02003f,0x1a45351201eb0a00,0x1f12f707014a3915,
0x12022a020f067631,0x040280301c07e735,0x02090676321f0676,0x002c3a3737330ef7,
0x0214c60f00093314,0x3a3404331f133e02,0x3c0f0100693b332f,0x31642e042702011b,
0x1800693831281b3e,0x2a28d1371306d337,0x0657371214d53831,0xa108033c06209802,
0x21f437121b790200,0xe03519011a383724,0xf6381f1b79371713,0xff0e1c51060f032e,
0x2f080e18003d0f2e,0x0045311f2700450f,0x331f310045321f31,0x310045341f310045,
0x0f02290000453516,0x31008a361f230045,0x1f008a0f3037371e,0xc4391f310045381f,
0x35312e15810e0229,0x0b0f29c4361e1cf8,0x391f51bb331d001d,0x0f2403330f083099,
0x0f26004f0f0230a2,0x1f26004f0f0330ab,0x004f341f01004f32,0x351f01004f331f26,
0x01004f341f26004f,0x5d352a26004f361f,0x036e0f1a1e044243,0x4f371f01009d0f24,
0x0f00323e371f2600,0x003247381f27009d,0x175a391e2701880f,0x5a30382f15743914,
0x75175a31382f6a17,0x311f1a2bfe32382f,0x13175a391b121eb6,0x002bfe391f175a39,
0x2bfe391f175a311b,0x3c391b1eb8311a03,0x5739161757391314,0x1f27175733382f17,
0x327438130209f138,0x381e103e02098708,0x24e2030196010985,0x58301d013ea1391f,
0x3255351f0b390117,0x5239133255391b1b,0x371f011752391f17,0x312e0a2e030000c1,
0xd10300dc0200c337,0x1e9f3114111b090a,0x7e3613007e5d392b,0x7e31312f32a10e00,
0x007e0e1efc040100,0x007e3218007e3318,0xd25d332e007d3613,0x8a03010065341f1e,
0x18fe311818fd0e2d,0x0065030b2b353129,0xbd070740165d362f,0x381340473431250c,
0x0f024b3a36210103,0x0118dd321f0248f9,0x18dd32642e167002,0xeb0b19ac04165302,
0x140bad0102320003,0x0d5d3232320bad75,0x3a3628030c3b1410,0xed66120085011013,
0x4333322f01430d22,0x001c021843010001,0x321f0cd708009b0c,0x7a5d35323f022ee8,
0x29740f297f020229,0x130269385f393b12,0x382d248605016637,0x4fa136322f027337,
0x0c001c02174d0100,0x3229140b381700cb,0x3239226d0300cb37,0x2432312710545d38,
0x508b381f2f10022f,0x010001f139322f02,0x008b0b001c02142a,0x8c331b01f1313327,
0x2f2fd55d3133340d,0x2e32040330420000,0x52303c32120a4703,0x051330336430202c,
0x41331f2a5e0d0001,0x00470302de010100,0x00360101309e331f,0x32332f024e34642d,
0x1c022ed70100024e,0x0302680200f80c00,0x342400f8331b0254,0x4602016800308c5d,
0x190008385f39332b,0x1f50b539170e8b39,0x115df40f030e8b39,0x0e0e00320f0e800d,
0x311f1c003a0f0e75,0x26003a321f26003a,0x35341d26003a331f,0x2a351f15003a0f0d,
0x280e0d29351d010d,0x34322d0d14371e0d,0x0f080d15301f5771,0x0f020d0a0f1901c8,
0x0f030cff0f1b0044,0x0f030cf40f1b0044,0x0f030ce90f1b0044,0x000ba4341f1b0044,
0x57df351f1c010f0f,0x44391a05c7301400,0x341f030b9a331f52,0x3317043c01070b9a,
0x0b9a0f2a80070abd,0x0f007f002a7b0404,0x1f0b103115010b10,0x9330312b0f607e32,
0x0009006080311409,0x429e3a332f00e705,0x223114192f220f03,0x091b381e29150d2f,
0x0aa60300005f391f,0x091931312806800e,0x31313f002917301f,0x0f291b01055d3f5d,
0x145f78311c0d5d38,0x27050009005f7931,0xc9381f000ac60f01,0x0b890e1bc6030100,
0x64391f150e303228,0x2f012d30322e0029,0x29af0301083a3132,0x2a0aad32180aad0e,
0xb433322206b73232,0x33082f0200ee0c30,0x44b30f00f53a3539,0x030100ee32312f02,
0x34312807400e00ce,0x2f003ecc331f00ee,0x65351f000b363431,0x65351e2b79030100,
0x36312b07a5371700,0x3614585037181629,0x310a0009341400dd,0xaf311f526f391716,
0xe50d0965c90f045e,0x3dea0e06002a0f3d,0x14e5311c1400320f,0x0064321f0e00320f,
0x770d1e0064331f1e,0x32351f0e00320f07,0x2f1331c1361f1e00,0x15311f2431c23031,
0x820f0701cc0f095f,0x311f13003c0f0c3e,0x1f1400770f001356,0x13003c0f025f5032,
0x00b20f000077331f,0x00760f0107790f14,0x3b0f013f74351f14,0x060007ac361f1300,
0x391f6b52df0f06c5,0x52e030312f7452df,0x5f92055f91311d40,0x135f940f115f930f,
0x97075f96055f950d,0x2f2952e830312f5f,0x45a0074852e93031,0x44321b0f03526a0f,
0x1c361502321b351f,0x9a0e3f5fb4351f12,0x321e00129a321f12,0x010f12993918129a,
0x3d0201f739135032,0x52cb07604d311e1f,0xcf0e0745d331312f,0x0e00250e45d30e6e,
0xd30e11002d0f45d3,0x2d321f08002d0f45,0x1f136da1331f1900,0x0d074306091c0d39,
0x0c45c032312f1bfa,0x0e1245c00f01210e,0x361f0945c00f012b,0x1f01316a0f0e0036,
0x0045c00f0e003637,0x52eb0a0497323126,0x7e391f03067e381f,0x0c19973031280706,
0x6f060406800f1975,0x0e2f361f00840119,0x321b100e2f371f0a,0x31265fdb311414db,
0x3a3730314f0e2f32,0xd60f073d030319fe,0x1f2c44a9321f0251,0x49b538160251d635,
0x251a773a3830314c,0x05270e0800b43b30,0xf231111a780240e3,0x010f720f00e5010f,
0x31100f980700c002,0x323c0e0e540f042b,0x0806d003014c375f,0x084c6d32312f60c8,
0x1a1a341701f33619,0x020da8311f00f303,0x190f5e0f077c3913,0x1d0118dc0f05fd04,
0x0f05c835181a1e31,0x108532312c0d6ed5,0x3416010a0261e101,0x030e713a342f010a,
0x71311f1c0e71341f,0x3f0c0e713717000e,0x053514014c371302,0x14036e08515c0302,
0x6700036c03020435,0x24097f0300d20a2a,0x07407a0f00463731,0x5d590334407a311f,
0xde381a0073383124,0x410f06de39312706,0xe30d0976500f0461,0x0f06e80e002a0e06,
0x320f06ed0e1b0032,0x0f100032321f0d00,0x2f000e3b0f2206f7,0x60d50f1206f83232,
0x06fd0f0201360f09,0x0f07020f01400e17,0x080f13003c30312f,0x0f1400b4311f0107,
0x590104d50601070e,0x00070f0f0cbd0b2b,0x341a08071033312f,0x07120f1c650b201f,
0x1231322f051f0906,0x10071331312f0a07,0x005fdd040713331c,0x71361800e70a0009,
0xde03067132322906,0x012c321206410333,0x1a009a371600f30b,0x590214670200db30,
0x381f040761301f0d,0x0307613917420761,0xd6311900d6082a7b,0x0747331f05420300,
0x00310100df321507,0x48331c100748361f,0x4833312760fe0407,0x4f391f0894321e07,
0x2f39140585020501,0x0749381f003f0135,0x371f2f0749361f06,0x0f0cab37130b0749,
0x010749331c0e0749,0x074906010b026219,0x361f04074939322f,0x030749381f300749,
0x2730332d06903917,0x313324016c301802,0x36e70307690e0227,0x0a5b5f0007693115,
0x4633146ad80400f2,0x1e20530907690600,0x033f07830f032e36,0x0b008d34332402fa,
0x2d31135b7b080783,0x9f6573217bb20161,0x5f8f7ba02e202186,0x01007b206f666e69,
0xffffffffffffff00,0xffffffffffffffff,0x62618f0f407d1d23,0x01897b2076657262,
0x7b20636f6c5f6fff,0x676e61728fb600ce,0x8f00001b7b207365,0x73656d616e627570,
0x3113c401e0ff11b6,0x0020c2919a080a04,0x1704002019030020,0x00001c55aba8000c,
0x18000339001011f0,0x21f025d8f9010010,0x0010080001390010,0x1e21001000000101,
0xfe081104359e5404,0x000c3717000c00fd,0x000c3617000c0b17,0x000c3417000c3517,
0x000c3217000c3317,0x000c3017000c3117,0x000c2f17000c0d17,0x000c2d17000c2e17,
0x000c2b14000c2c17,0x000c2d17000c121a,0x000c2f17000c2e17,0x000c3117000c3017,
0x000c3317000c3217,0x000c3517000c3417,0x000c3717000c3617,0x3000041e43015005,
0x185701cc071101cc,0x141f01bc18190300,0x1201bc111f0001bc,0x58091f005801a422,
0x0c1f00b018133c00,0x0110012c223c0058,0x006010110060cc13,0x00302c1903002c55,
0x0439005028000539,0x1f02ec0200502000,0x007824132202ec21,0x5848133c00d8121f,
0x0048550058141100,0x0009390028481903,0x1040000839004844,0x3900583800073900,
0x0110020020300006,0x029804420110211f,0x0250044c0464161f,0xc01a1f440300181f,
0x281c1f0128044c00,0x201f1f0130075101,0x053f0320061b0003,0x20111e0003302400,
0xf8211f2804080f02,0xca80130001005000,0x2605d00006f40098,0x2605f8000010031c,
0x2605e400001004c4,0x2605e80000100660,0xc0d22f17001007fc,0x342601c400001000,
0xd02605f40000100b,0x6c2605f80000100c,0x082605fc0000100e,0xa426060000001010,
0x4026060400001011,0xdc26060800001013,0x7826060c00001014,0xf915003826001016,
0x1004882ab2750513,0xf000001001d02600,0x0728000030501700,0x013a2a0120001d2a,
0x2a012001962a0120,0x2002642a0120020b,0x8e2a0120030e2a01,0x012003e52a012003,
0x05152a012004b22a,0x2a0120058e2a0120,0x2006712a012005fe,0x421b012006e62a01,
0xc11b00e0901b0200,0x1b00e001f02a00e0,0x00e002862a00e02a,0x02df2a00e002b12a,
0x2a00e0031b2a00e0,0xe003822a00e00349,0xdf2a00e003b02a00,0x00e0040e2f00e003,
0xe0c91b00e09f1b0b,0xe0551b01c0121b00,0xe0f21b00e0ba1b00,0xe0751b01c0241b00,
0xe0f61b00e0a71b00,0x5b2a00e004282a00,0x1b00e08e1b00e004,0xaf1b00010400d0a7,
0x18d21bcd93040018,0x0018da1ba02c0400,0x040030e31fd0cc04,0x30f41f040030eb1f,
0x2f040030fc1f0400,0x18111b0300300209,0x50027a2ad1470400,0x0018821b00010401,
0x040180241bb9bd04,0x110400182c1ba816,0x3d1b040030351f9e,0x30461fd04c040018,
0x1b0400304e1f0400,0x8b1fc4f304001883,0x040018941b040030,0x2a0400309c1fc512,
0x1b00010402900400,0x8d1bd0a004001808,0x18951ba52f040018,0x00309e1fccc70400,
0x0270040018a61b04,0x30b71f040030af1f,0x23040018ec1b0400,0xfd1b040030f41fbc,
0x05052fca30040018,0x062005872b030030,0x04001804a91f001a,0xe0040530361bbced,
0xcfba0400183e1b01,0x184f1b040030471f,0x0030581f04c80400,0x951b040030601f04,
0x309d1f0240040018,0x40040018a61b0400,0x0c2a040030ae1f02,0x141b000104050007,
0x18991bc76e040018,0x0018a11b01e00400,0x040030aa1fcf7704,0x1f0270040018b21b,
0x0030c31f040030bb,0x01b8150018f81b04,0x18091b0300300f03,0x0030111f02400400,
0xcfba040018361b04,0x2a07280400183e1b,0x1b00010405e008c9,0x782acf67040018d1,
0x1805c9720c001809,0x0030891fcee80300,0xcea8040018911b04,0x30a21f0400309a1f,
0x70040018d71b0400,0xe81b040030df1f02,0x30f01f0270040018,0x0760000a53390400,
0x0400185b1b000104,0x10040018e01bcefd,0xcea0040018e81b02,0x18f91b040030f11f,
0x300b022fce600400,0x0300300b0a2f0300,0x1f02700400183f1b,0x0018501b04003047,
0x040030581f027004,0x1b02580400187c1b,0xb41bb8c004001884,0x18bc1bcedc040018,
0x0018e81bceec0400,0x040018f01bced804,0x0408a00c832acee8,0x360400188b1b0001,
0x700400180d322aa6,0xc4430400183a1b02,0x184b1b040030431f,0x0030541fc4190400,
0x911b0400305c1f04,0x30991f02d0040018,0xd0040018a21b0400,0x262a040030aa1f02,
0x2e1b0001040a700e,0x18de1b0d28040018,0x0018e61b00c00400,0x040030ef1f040004,
0x2fcd32040018f71b,0x0f082f0300300f00,0x0400183d1b030030,0x1b040030451f0120,
0x561f01200400184e,0x0400187a1b040030,0xc6040018821b0648,0xcdbb040018a51bcd,
0x2acdcb040018ad1b,0x1b0001040b80103f,0xba2acd6104001847,0xc21bcbe404001811,
0x30cb1fcc16040018,0x86040018d31b0400,0xe41f040030dc1fcb,0x001812192a040030,
0x003012212fcc3704,0xa9070400182a1b03,0x18691b040030321f,0x0030711fb4ec0400,
0xcc660400187a1b04,0x13032a040030821f,0x180b1b0001040d20,0x1814102a0f880400,
0x0018181bcb0e0400,0x040030211fcb4004,0x1fcb4e040018291b,0x00303a1f04003032,
0x0001041050a41b04,0x2aa9e2040018ac1b,0x1bca5a0400181584,0x951f0a500400188c,
0x0400189d1b040030,0x1f040030a61fc713,0x0018e31b040030ae,0x040030eb1fcaad04,
0x1fc94b040018f41b,0x3016602a040030fc,0x0018681b0001040f,0x040018ed1b060004,
0x00040018f51b0750,0x062a040030fe1f06,0x0f2f057004001817,0x0030171f03003017,
0xc894040018361b04,0x18471b0400303e1f,0x00304f1fca990400,0x0150040018751b04,
0x1b0e700400187d1b,0xa11fad8e04001899,0x040030aa1f040030,0x18bb1b040030b21f,
0x0030c31f11e00400,0xd41b040030cc1f04,0x18462aae75040018,0x184e1b00010410d0,
0x0018d31b03300400,0x040018db1b01b004,0x1b040030e41f0330,0xf51f02a0040018ec,
0x040030fd1f040030,0x0210040018191c2a,0x2d1b03003019242f,0x30351f09f0040018,
0xbe0400187d1b0400,0x10b0040018851bae,0x1fae6a040018a11b,0x0030b21f040030a9,
0xc31b040030ba1f04,0x30cb1fcadc040018,0x1b040030d41f0400,0x002a0240040018dc,
0x1b0010081b022800,0x1b00101f1b001017,0x1b0010361b00102e,0x1b00104d1b001045,
0x1b0010741b00106c,0x1b00108c1b001084,0x2a0010a41b00109c,0x0010cc1b00f800c4,
0x0010e41b0010dc1b,0x0010fc1b0010f41b,0x10141b0010010c2a,0x103c1b0010341b00,
0x10531b00104b1b00,0x106a1b0010621b00,0x01812f0010791b00,0xa81b001004030200,
0xc01b0010b81b0010,0xd81b0010d01b0010,0xffffff00010f0010,0x440400005de4a148,
0x183106e31de22800,0x1de2145103791ca6,0x00109c150010a000,0x001000140010c012,
0x101c86240010e010,0x82110010f0022200,0x0020025de4b00010,0xcd9e029c04280040,
0x40b860029de42c40,0x50580008925ca328,0x0312001884029c04,0x30029de448510018,
0x00209802dc310038,0x9c2100382c02dd31,0x8802dc04481b87a2,0x4840001803120018,
0x0418c1190693dc23,0x040c0e00001cf1dc,0x1ba9e412000893dc,0xe7603007c3074022,
0x18e74000331ff505,0x003820a1dc234000,0x81dc043c0010f413,0x0000382140200038,
0x1ca331003807c233,0x20cb1c032111b7a0,0x28c008f91de44831,0x108e0000fc025c23,
0x1805f006e302dde2,0x198ec00080b1dc03,0x4800c00080b29e03,0x03605100b0925c03,
0x925c3113af28831c,0xff80b2a0b212f730,0x20288260034800ff,0x1de4300028821100,
0x025de4285218fb02,0x000020619200f024,0x31007871dc434801,0x01dd20002018019d,
0x00619c852851018a,0x0000fc61dc7f06cf,0x18e0220000d0220e,0x3200d00c802700d0,
0x01dc2200c0019de4,0x911200c05d1400c0,0x0200c0921e2200c0,0x20629c0360510078,
0x3201b871dc2100c0,0x61e03200c0922003,0x0c00286111002020,0xc018411c034100a0,
0x2201381c515c3200,0xc014012100e01001,0x080000c0411c2200,0x3300a05000cd3400,
0x01e00f00d043dc00,0xdfe00041dc008f1b,0xe008130901e0208e,0xc020cf0038061b01,
0xf80000015de2208e,0x00a0220000381b0b,0x1c71007060190038,0x00385800d2e00041,
0xe80400781b0c5c34,0xfffffc419c029100,0x38fe2501a8423801,0x1c03c10008030120,
0x1c045800c0005c41,0x38511c20cf5a1121,0x51ec015de250de00,0xd81461dc0018feb8,
0x619c710800900f01,0x3400985800cfc000,0x5c003100905000cf,0xe061002000001061,
0x4000685c005000ef,0x105109c221dd04c8,0xdc1112171871dc00,0x1c621c00585101a8,
0xf501f8825c21c745,0xf131a8d8029de210,0xec7a5398015de218,0x14000024515c0018,
0xf6aaac68029de230,0x5800e30008020010,0x300e000020515c00,0x60d000d018519c00,
0x14411c0018fcc5c8,0x021700b0300c0000,0x07210350e2110128,0x28192e003501481b,
0x41dc004200080302,0x0262002000008814,0x0000b811215c4418,0x711c04208e520060,
0x151482411c2024d3,0x4820415c310038c8,0x0058201c01580204,0x20001de75f012004,
0x420110028003180c,0x280f02181d0018fe,0x0dfeff03180f4d03,0x811203101d140310,
0x020310815e240310,0x031014625c3302f0,0x108160033406b001,0x2061230020141203,
0x9c22031014190310,0xe81c31dc3f031021,0x943306e81c110206,0x00905c1300901de4,
0xa061130090019d23,0x0160010778601303,0x07780041dc036052,0x7860200333036802,
0x4011077800412207,0x0380040058040028,0x22009010209c0342,0x9008002200901430,
0x201300900c002200,0x581f0238001006b8,0x0804609417040020,0x33050008801f0380,
0x0000280188001de4,0xdc443002c8040008,0xff0068101400a920,0xfc333334011de201,
0x0e00001031dc0018,0x1007c02200031023,0x312103a005a02903,0xa8ec415ce024e70c,
0x0015215c8430fee2,0xc5c8005201500600,0xe23008a202a01afc,0x801ad6fefa38011d,
0x00301c02300c4203,0x00605102281c2021,0x013803025808411c,0x001018fc24028802,
0xa803029002015004,0x2102a01b0bf03502,0x285c202129bb715c,0x0050515c00604900,
0x04210250519c0031,0x020058201c02405c,0x00310340fe150070,0x2503300203c0411c,
0x0031dc5e00181b00,0x1a0520050120d0ac,0x00581de222052001,0x120198dd1a030805,
0xde1c433a310b0802,0x2101a8dde4683516,0x00008001016001e0,0xf55ef99806f00500,
0xf21aa06c00dde21a,0x0a00001030dc0018,0x10f8219d3804c830,0x101afaaaa8a45400,
0x0104780000080200,0x2703800030210060,0x0105d00b05a8210e,0x002a056850160008,
0x1d0248011802480c,0xf8060c180c027890,0x08c0190c28a01b0b,0x020010d0019d310c,
0x0801dde414420a88,0x0ad0030c081c130c,0x0228047071dca333,0x20721c0342001884,
0x0e0bd01881220bd0,0xc00809b00c1309b0,0x0400f0819ca3310a,0x041061dc23330428,
0x1404a0a11304a004,0xdc330b680204a0a2,0x04a02c1204a02462,0x2e07d00304a0a214,
0x1004a00f07b02861,0xc8029de4340b8803,0x0010020bc8fc1306,0x680000068806a007,
0xe72100f00091dc23,0x0300e0a81c002001,0xe82c120bf80000b0,0xe803130898b11300,
0xe8d31404f8d11300,0x30632300c8341200,0xd31404f8381200e8,0x341f00e8301300e8,
0x2861dc004f2900e8,0x0c7002c023040780,0x0f00c00a0c70021a,0x0d3071dc23050d30,
0x0d300a00c0286323,0x2c1f00c02861e033,0x03400330043101a8,0x1de775008004925c,
0x4205a803fff98000,0x801f00b820009de4,0x067030dc230b0670,0x70301a00b8002122,
0x2012067020e02306,0x063007c826000670,0x2f00b808409c0342,0x229c2f0206700c50,
0x1f0e0ff00f230650,0x000018024303d800,0xe05c130fe0020f28,0x821ca3410ed8030f,
0x1888025c38003824,0x23484f0018031200,0x18812f240fe073dc,0x02a005c0230c0fe0,
0x0fe080140fe00519,0x077a0c080f023804,0x70070020fc180018,0xb8081e0000145e0b,
0x00b8511302b00400,0x2309900200b85014,0x3401b00202b0621c,0x02b00300b8502003,
0x0600580400286011,0x302f036820130368,0x02b0211f0309201c,0x220302b0041c2f43,
0x3307300202b000dd,0x01dc2202b09de414,0x9ca34200b80302b0,0x1884012812581c61,
0xe448530018031200,0xe8981f02e83001dd,0x3f0102e8881f0402,0x712f2402b063dc23,
0xa01080230c02b00c,0xb0701202b0101908,0x1202b018009c3302,0x130560211301f808,
0x1401f8311301f800,0x0301f80c1f01f830,0x01f80c1e01f8301c,0x41d0fa011102b00f,
0x04310aa8311c0484,0x0920e2120c90a01c,0x0702b80402201914,0xf507120018010b78,
0x0b000f0b08101ce6,0xd8301c00311fffff,0x1de4233d02880f0f,0x030810215c2f0368,
0x0e800c190e80de1d,0x150388020e80e015,0x320e800c190e80dc,0x15112f036811011c,
0x112305600f040368,0x050e68281f372bdd,0xe443010804011804,0x03f45c0268fc011d,
0xdc03300030180000,0x30dc036071093800,0xe0fc1108f8c00060,0x0e000018319ca000,
0x1c421148225f8412,0x0ff8060040021de2,0x0040715c2211e802,0x529c220040515c22,
0x004020a15c320040,0x40431c0032039800,0x320388dc23683011,0x12300502e0e4190e,
0x5d3800c805179004,0x3b00d80504b81c02,0x2060130b9028011d,0x48dde22014000117,
0x15229c4419fe6200,0x8e00002ca1551148,0x04500018c0040278,0x2300300312032802,
0x3030b120123022dc,0x3102a80418b00400,0x0a600011f0501c00,0x07c8031303501611,
0x48931c0333000802,0x048600e034c12001,0x202010c00007f39c,0x201c120020831a00,
0x011838c35c034200,0xe41a8e00003cd1a3,0x803813005830031d,0x9de2403205310000,
0x4838a1dc004200a8,0x08011106a8851303,0x100020029de23300,0xc009e721320bd8b3,
0x11037095dc04320b,0x0138e24021317b09,0x04800201681bff24,0x12a0000358191622,
0x02485c002102200a,0xc00312a01de25833,0x2212a00005b00205,0x1502980112a00050,
0x2206d8dc110038c8,0x1110201f04600458,0x0211014811602100,0x0007f29c04c20120,
0x1030a29c432012c0,0xe72101282ca32001,0x901c83405104e005,0x480704b803326f20,
0x1010004810402d00,0xa112004834120048,0x00480c01f0030048,0xa839fe2800084211,
0x00500204500f1106,0x1b1802c831dc2330,0xe027027001120ed0,0x7e31015802002800,
0xe030102501100019,0x00015d9101680402,0x0c901de71bffffff,0x0513a8050a084014,
0x5000007041110070,0x01dd22006001180e,0x30102708e8010060,0x0051320388030a88,
0xf8060060090d0001,0x6102280100480403,0x03a8fe08425c0318,0xa0dd1302985c9221,
0x0031037801dd291a,0x430be0040690725c,0x01fa03581d229d04,0x91dc003016000024,
0x325c03301200001c,0x10031b681d140050,0x004100b8021c2102,0x921c2a061020a25c,
0x600500109c120010,0xb2120330a2dc231c,0xa8000650dd110458,0x320d68030ff8020d,
0xd8dc100470311c03,0x1c1302681a0e2708,0x2413046020130430,0x0ed0030440020518,
0x06131b7006045806,0x301d320e58010c60,0x04e85c0023006818,0x0611016801002800,
0x200160f801200398,0xb8198e240530dc23,0x423a310318021216,0x0002f0391007885c,
0x00300210580408c0,0x48051201e81a0e20,0x0018030220a01000,0x0070021204781b14,
0x0040041700403a10,0x1c402cba225f8430,0x021932003091dc23,0x1078dc002000289c,
0x3100085c00310840,0x168e4206b8003088,0x0d2800110588df84,0x17c8020808318827,
0xb8e438023200a801,0x02f0201a01100801,0x0a90dc0324008002,0x5101a00007085013,
0x12009820df84128e,0x15013068130aa843,0xd004521c310fa858,0x50050fb0825c2101,
0x30016078501c3100,0xdc432100207c001c,0x28501c0368400b20,0x0050001c03684200,
0x041a8e320748dc10,0x0af05c43203103c8,0x0358141a13386817,0x400e11134800002f,
0x58021f0cb8021b13,0x01002a0ce8070a1f,0x120ce80120211f88,0x0cd8001d220cd803,
0x035d320cd8035c22,0x0f503400220f5034,0x1803120018840328,0x603001dc23485f00,
0x1819300ea0230413,0x1768031d2311b00e,0x131270040c500313,0x2208e8f31311b0f1,
0xe838c4220c303cd3,0xf31311b040d32208,0x11002038c32208e8,0x341306a0070028c3,
0xb2110e4830121fd0,0x07400403c00400a8,0xd80311b0a31c8534,0x00909d141f70030e,
0x0250e31313e8e113,0x34a3dc320070b212,0x1313e83cb2220ce0,0x111320a2130ce0e3,
0x034200700c0028a2,0x1fb801097828821c,0x821c85331f90481c,0x2f0a9020c12b1300,
0x0f880f611f6004e0,0x00900d18a89c120d,0x0ab89c12650e200f,0x1d0130a0001de747,
0x230501300f19d880,0x582042230130515c,0x2041603201300a0b,0x800b0130411200a0,
0x0130040e19d80f00,0x230501300f00900c,0x1a6842140130515c,0x0c1f1a680601300a,
0x0090611c22021a68,0x0f0101300f0e0802,0x2f13f80337ff1148,0x0230049811480540,
0x0fac0e880f0e900e,0xe01b0710071c1a70,0x01077001002a0750,0x0010031ca6340730,
0x60042226b8014029,0x1200100103230030,0x3100100412002080,0x145c32001090045d,
0x1303000413030001,0x03004c0422030004,0x84042803004d2422,0x4843001803120018,
0x000513030004dde4,0x3422030050052203,0x0018880528030051,0x2f030051351c0342,
0x45412f2303004123,0x190a9817130d16f8,0x1a68414422030017,0x50042201e0490422,
0x140588fd44220258,0x2207f88112164005,0x3855142202588155,0x1422025859052202,
0x025881552207f85d,0x5504220300590422,0x2202384004220258,0x8840e32201284404,
0xb002037844f32205,0x04f83c03dde4420e,0x26d8e11f0768e313,0x1a680913d8a01405,
0xfd412f00c0011d23,0x0318e01e24020828,0x0205b84314082803,0x1f05b8e0202c0828,
0x05b881130305b838,0x18050b03c014912f,0xa003120b80c0120e,0x0413016043dc2300,
0x1e220160111200a0,0x6052011802016014,0xf322046040e55c03,0x320160141200a054,
0x28e311070840e3e0,0x821c034301400c00,0x0208c83c1f08c838,0x30021300a0839c23,
0x901d140090421201,0x03de230090011200,0x5c330070921201f0,0x0448441228c83c84,
0x0a08821301f00313,0x1c330228c840822f,0x2808241f04f02041,0xe01c2b13f800120b,
0x2f00a84c01221ed0,0x204314130820fd31,0x1c231a0820381f08,0x0201d8d11301d8c1,
0x07f00100b00e0ef8,0x1f0338221e049440,0x78e25e2c0e027818,0xe260240278241902,
0x381e00a0241300a0,0x48041008300f00a0,0x2a0aa01081dc3b01,0x06404813032807a0,
0x130640dd1400b002,0x1300b071140be071,0x2408e0181908e01c,0x00b0181300b071a0,
0x1d00332909701c1f,0x3f01e800121fd020,0x5114031ac0fd30dc,0x219c331ac0021d70,
0x20240f68021d7010,0x13002010121d7051,0x033300780a1ac020,0xe00cd02f1d70c09c,
0xb0309c0494410823,0x50f800209c015712,0x05c80000d8011116,0x009d23079809a021,
0x134c00b8401f03d8,0x0500b8b01f00b8a0,0x0f0a300c3407900f,0x2f06708013ee2e18,
0x0ea80c092e180740,0x0208c11304081d14,0x232188020ea8c214,0x340f00020df8a35c,
0x04a8030ea8c22003,0xa820190ea830a223,0x1f2e180122a8010e,0x3f12b8030a20e82c,
0xde24032320925c23,0x82232320032ea8a1,0xe02413280205e01c,0xdc330408022ea8a1,
0x05e01c1f05e02881,0xa80f23b810612323,0xc02f7725300fbb1e,0xfc025d38012ff00c,
0x10580224600501b0,0x6d23a00f2548481d,0x1450021c2548dd14,0x2540a11f2540c012,
0x1200680000a80213,0x0c1240c11f00e030,0x1240631307a07113,0xe03461231240711b,
0x2c1f2c2540381f00,0x010ad8021f0531b0,0x5e1d01a00c00c00c,0x602c01a0241901a0,
0x393301a00f26e8b2,0xa29c24254828025d,0x0441254860182548,0x25500c092825201e,
0x7830dc230508780f,0x780a072818222308,0x1e07281820e03308,0x280f25500e07281c,
0x2f0b3540001f4707,0x28a31f840728011c,0x230d0728911f2407,0x07280819165008a0,
0x3540281f07289014,0x2f0000d0218e2f87,0x9de4440030500300,0x15f0021f1c88fc00,
0x000f2fc808002e82,0x2346ff0aa00f7216,0x38b8091f1b680a20,0x460aa00f00900d98,
0x1024522f0aa04213,0x02040881dc220211,0x380f0098581e16c0,0x0b480136080e6b0b,
0x90011faf0b48581f,0xf0041d78dd150324,0xffbc552128001326,0x36500416a819fbff,
0x903bfe25006fdc10,0x1227880a24c8061f,0x080124380735e09c,0x0420c00535f00400,
0x401120f05d122760,0x0420e030122c3600,0x08032158401c0048,0xdc2236e8dc022300,
0x408500400b36e871,0x90307e000018721c,0x2203300b0de80402,0x981d042200185de4,
0x305c402000300424,0x58040250300e242d,0x367818925c404002,0x88040b580700180c,
0xc820160070241300,0x30401100c8141d00,0x60dc310018121e0a,0x0178019d2400c00c,
0xffe326080000f803,0xfdffffc030dc0239,0x0221600031dc030b,0x18012c26880501e8,
0x3004289001172590,0x880a20401de72400,0x0f02200332e8051f,0x0f331fd00f0127b8,
0xe01b1880060c0de0,0x27068001002a06a0,0x025de23206800110,0x030e10925c231fe0,
0x30031fe01c130690,0x0450581030a3121f,0x104803001884031c,0x1a20180200104811,
0x1a2018c314201898,0x2f2018c313201888,0x24c12f23069020b3,0x187020c222230690,
0x2f3218021f608214,0x925c230b32d8b25c,0x0a05683083230d78,0x06903082603332d8,
0x902013030690341f,0x010a148824302f06,0x0d009858002d1360,0x1c390600a01a0600,
0x98a0e02407280c83,0x060080141b600300,0x40dc231a06000c1f,0x0300980c20220098,
0x033990b15c2f3348,0x39900315b880de24,0x2c3990021bf84214,0x1bf8201e1bf880e0,
0x020098041016680f,0x15c01c0058352358,0x1508fcb02f33e803,0x0f0de010221c3912,
0x1f0de06013161508,0xd840135eff150870,0x2aff0a680a002f03,0x0a700f3e7871dc24,
0x172c0001001f5bff,0x40130018085d6301,0x0800300b3a2e0008,0x130400400b1f0001,
0x00400d292f00387a,0x00400c4b2413130b,0x5cc058174ed8a813,0x1e63e8044d782a17,
0x1e1200d9020054ea,0x0b008052c72f0007,0xc72203004001022f,0x00c016942f000870,
0x5b220300400a1f0c,0x004007572f000887,0xb2220400403f1f0b,0x004004392f00088e,
0xeb22040040691f0b,0x0c0040bd1f000892,0x97a822040040851f,0x0b004000b82f0008,
0x986022040040931f,0x0b00401a172f0008,0xb2772f0400409f1f,0x040040db1f130040,
0x4001f82f4ec18e13,0x0300400b032f0b00,0x021f2f0008ce8622,0x040040281f0b0040,
0x8f782f0008d0a522,0x1c000753120b0040,0x0453012013004070,0x041b5034031355d8,
0x13040040af1f0028,0x0040015c26004088,0x012f2f000040001f,0x5f0161e438030040,
0x0040371f0040015e,0xec130400405f1f00,0x381f004058170040,0x040040e41f000040,
0x40391f004062442e,0x03004002632f0000,0x403a1f0000409c1f,0x030040031b2f0000,
0x403b1f010062f42e,0x13040040751f0000,0x1f004078170040fc,0x4004212f0000403c,
0x1f00c063742e0300,0x0040d71f0000403d,0x0003c00163cc3904,0x2f0000403e1f0040,
0x64842e03004005ac,0x2f0000403f1f0280,0xc0641e0402000648,0xee1f000040401f00,
0x008065442e040040,0x07b52f000040411f,0x000040ac1f030040,0x08722f000040421f,
0x020066142e030040,0x40d61f000040431f,0x881700401c130400,0x2f000040441f0040,
0x66a42e030040097c,0x20000040451f00c0,0x2200010e6e18010f,0x0040e01700406710,
0x3f5c370300d00517,0xf01303004002a700,0x400c0340201b0040,0x03040080045f2f00,
0x400c02c0101b5611,0x1f03004008922f00,0x0040431f00004020,0x2e0300400a272f00,
0x0040061f01006830,0x102e040040521f00,0x000040071f004069,0x40f01f040040751f,
0x2e000040081f0000,0x1300400001d40ab2,0x004012902654c1d0,0x80e61f0009000a1f,
0x2600407d60220400,0x00800c1f00400240,0x09840c0694b81300,0x001f0a08017fa039,
0x004001a32f040680,0x668c080040e01303,0x4002222f0106000f,0x0f004080182e0300,
0x040040c91f010600,0x0206000f0040501e,0x881303004003d32f,0xc00f00144c170040,
0x030040047e2f0105,0x0205c00f0080d41e,0x0c2a030040054b2f,0x0405c0001f040081,
0x81742e040040fa1f,0x962f0105c00f01c0,0xc081b42e03004006,0x07502f0105c00f00,
0x0f0080ec1e030040,0x0040081d2f0205c0,0xc00f0040822c2e03,0x03004009242f0105,
0x05800f01c0826c2e,0xb81e040040de1f01,0x29130205800f0080,0xf8130018061b0340,
0x038003274e010040,0x2f00400d00002b4c,0x8c98230300400120,0xef2c1603c0070840,
0x0400400f0154066a,0x03d82600408f1022,0x400f00002d4d0040,0x92e8220400400f03,
0x2e4c0080b0170040,0x02452f00400b0000,0x26004095120400c0,0x00002f4c00400560,
0x040040ef1f004012,0x40071608409af823,0x00280b3ef80d1000,0x5023030040034a2f,
0x4c004004160540a2,0x062f004011000030,0xc0a6e02303004004,0x00c0311f01000701,
0x8023040040a11f00,0x324c00c0070080a9,0x05892f0040180000,0x170040b1120401c0,
0x057007331601c030,0x03004006252f0040,0x40f8170040b44022,0xc11f000140341f00,
0x175af13813040040,0x0002c0351f004078,0xb02e03004007852f,0x000040361f0280bb,
0x882203004008552f,0x4c018098170040bf,0xb31f00400c00000b,0x0100c2202e040040,
0x094f2f000300371f,0x07c0c61823030040,0x1300c00d0cc00319,0x1086db782f095806,
0x08170008a8002b02,0x380c076805170e08,0x380800084a582a00,0x8017000100062f00,
0x0000000000000008,0x000000c801010001,0x0000000000003048,0x0000004000003042,
0x0000001400040002,0x0000004800000078,0x0000000000002047,0x0000000000000000,
0x00000000000129c9,0x0000002c00000048,0x6e6f642d2d20672d,0x2d656772656d2d74,
0x6f6c626369736162,0x65722d2d20736b63,0x2d74612d6e727574,0x0000000020646e65,
0x646f6e69762f3a44,0x2f736f7065522f73,0x4d5353442d52534d,0x657461766972702f,
0x2f73646f6e69762f,0x4d62696c61647543,0x4b2f646567616e61,0x6b2f736c656e7265,
0x75632e6c656e7265,0x0000000000000000,0x2e25f600020a0d2a,0x206e6f6973726576,
0x61742e0a0d322e34,0x5f6d732074656772,0x75626564202c3032,0x726464612e0a0d67,
0x657a69735f737365,0x690bf0003c343620,0x662e20656c626973,0x61702e2820636e75,
0x3233622e206d6172,0x65725f06f8001220,0x5f2029306c617674,0x2866686e6174345a,
0x1100170400250a0d,0x0d305f0cf400145f,0x2e0a0d7b0a0d290a,0x6572702e20676572,
0x3b3e373c70252064,0x2520323366960013,0x7310001338333c66,0x3b3e353c72530013,
0x3420636f6ce10095,0x0d31203933313120,0x696765627200880a,0x34096f001d3a306e,
0x4200002b30203020,0x6803009e646c0a0d,0xa45b202c30315c00,0x6f6d0a0d3b5d7400,
0x8300282c11002376,0x3a30706d740a0d3b,0x0075657865370070,0x3105f200790a0d25,
0x620a0d3820303431,0x7409696e752e6172,0x293118003c31706d,0x383031312033e300,
0x7362610a0d303120,0x3ba0006b3211006b,0x672e707465730a0d,0x3170250952001765,
0x33663001f4001c2c,0x3b44434343433046,0x00013f746f6e0a0d,0x4000f50065010037,
0x2061726220327025,0x00853b345f304242,0x01013e3111001001,0x64610a0d3a64000a,
0x007b2c3424007564,0x196c752400f93210,0x7900001f2c352300,0x334141384201f000,
0x2e7476630a0d3b42,0x00a0020025697a72,0x3519002936326631,0x7000383732200137,
0x3e30323731334642,0x6e722e616d666401,0x0039202c3835001e,0x11003f0a00683712,
0x424642357c003f39,0x303327003f453845,0x381a00063911003f,0x0900272c312300bc,
0x78650a0d01f400bc,0x786f727070612e32,0x3020002e7a74662e,0x6c0200210d00332c,
0x009f3619017f0200,0x3030384f018f3313,0x562c33220000de30,0x5d323321003f0500,
0x00007e7063723f00,0x00213311007e3210,0x3f00623310006207,0x3312020062303043,
0x03002a2c322300fb,0x38351502380a0062,0x0700474232343402,0x3570220044000238,
0x331b023836150238,0x3229023832150238,0x020103361b00a13a,0x6211002533130025,
0x3b362800fd0203b5,0x6e613302e6050014,0x00182c3322001364,0x3834373431322da0,
0x726f2301cf343633,0x28004b2c3423001f,0x3a336620004a3372,0x8c371502e9721c02,
0x313502143a342800,0x0103e20a03cf2c31,0x42373544427a0124,0x0186311101e83645,
0x313841363843338c,0x242c343133018642,0x003f321a005e0500,0x3830456e003f3511,
0x2c3626003f373736,0x03440a003f020045,0x4141457d03443112,0x3826003f39324141,
0x3729003f0200452c,0x00272c392600f13b,0x242c37260243311d,0x4171652304790900,
0x663023001c331302,0x00ba0002410b0287,0x4134150241337022,0x9035150190361b02,
0x3733290479351901,0x3a32706d7454007b,0x371f000a3615002a,0xe70102880703055f,
0x74732600fb331002,0x3106a05b092805dd,0x008c0000265d302b,0x3315006f74657232,
0x1c05c6646e2005cd,0x746e6513f706f47d,0x6d36315a5f207972,0x756c507869727461,
0x50726f7463655673,0xee69695f535f5366,0x0a002b3436753f06,0x1e00332c1f065e04,
0x3332181f0033311f,0x1f11003332332f00,0x07ce341f1f003333,0xcd341d07ce381d03,
0x3699001335312707,0x33313c6472252034,0xe0313120314a07e2,0xe0311907e0311407,
0x1207de0700290407,0x0f07de3111005375,0x003c3b5d2e0f0194,0x3c311f13003c321f,
0x1a13003c331f0100,0x3b0f050b04003c32,0x1f00003b331f1100,0x3b5d343d13003b34,
0x203161089c0908c5,0x3413032331203331,0x036a0000610205ce,0x3b782e6469746e78,
0x7463340482000017,0x6c2e6c7553001861,0x00372c372301e86f,0x0494000033367229,
0x7315041200004904,0xa23812003302062e,0x2034380097351b03,0x1900903914004631,
0x0091303125005d79,0x010529010091791c,0x00363031723a0039,0x9406004d04069800,
0x312200362c322500,0x330096361b009632,0x746c20053a312035,0xb20a051a09120036,
0x0a05d200031d0306,0x347022011e000545,0x3139054535130545,0x09be31150545325f,
0x24006d0a09be3111,0x0026341500a82c37,0xeb371a07eb3a322e,0x5f31350a23311b07,
0x1300e3331b003f33,0x01503a372c021037,0x01cc331a007d3315,0x05df03001f2c3425,
0x312038320055381b,0x00cb343673320a4f,0x0099000036647222,0x034f622e6c687352,
0x3214001b00024101,0x2c36230018020063,0x03100200240003e5,0x2d00205b100bb405,
0x0091371400613b5d,0x1a01028e00006007,0x092c392300600b00,0x1200600800240004,
0xd13b5d3939006032,0x0078321e06d00506,0x59020100da30312f,0x01007c0b001d0102,
0x002701044a01028f,0x5b1100680006de02,0x01580206cf02001d,0x62341a01b73a3924,
0x06f0322030324701,0xf1311f06f1303127,0x546f044430120a06,0x0306e96650686e61,
0x2b0f06e10e00230d,0x2b0f0673311e0d00,0x1f17002b321f0500,0x0696331f15069633,
0x32322a0695391b12,0x2f050695321f0695,0x01400e0a06953232,0x0601490f0f068d0f,
0x0000330f0106490f,0x0033341f0c067c0f,0x321b000639331f0b,0x312f042934130272,
0x0099311c6b063a31,0x59311b72063b351f,0x1b3e063c36322f05,0x1f063c3215063c32,
0x063c321f12063c32,0x3c3215063c321b11,0x383224063c321c06,0x1b29063d341f0213,
0x063e39322f080c31,0x3414010564331f00,0x3e351705620b0549,0x353c00063e341f06,
0x0d33354700723b5d,0x74430e8600045b0a,0x6572310320706d65,0x0b01130008003267,
0x0017020c9c301d00,0x34080cfe000c9603,0x310644000cb40300,0x68281401626c6c61,
0x12b00a0d202c4413,0x4c0a0d2832000c00,0x12df3b290a0d4a00,0x030d020606a80912,
0x361f01377d1d00cf,0x07632c3723010137,0x1a0715381701370b,0x06fd5d3824069737,
0x321c0dc40401b100,0x17069731332a0697,0x090697321f069737,0x636e49b00adb3213,
0x657461726f70726f,0x76697265445f04a5,0x0e1400350f030d92,0x311f1f003d0f06bb,
0x3d0f06df0e29003d,0x0f29003d331f1800,0x130dc4391f160dc4,0x2f33332a072f361b,
0x332f05072f331f07,0x1b01c60f07072f33,0x1d00460f0207410f,0x1d00460f030dd80f,
0x1e00450f010de20f,0x1d00450f020dec0f,0x2405aa0b010df60f,0x07bd381f05aa3533,
0xbd361f0099391b6c,0x1f009730322b7207,0x07bd331b3e07bd37,0x07bd331f07bd3315,
0x331b1107bd331f12,0x331c07bd331507bd,0x2f021339332307bd,0x8e321b2907bd3132,
0x1f670dfb30342f09,0x0618150c470dfc34,0x331f0e1b3415158b,0x050e1b3216360e1b,
0x090e202c3524009d,0x75733317ab0c1649,0x001f2c3722001a62,0x382400b135662539,
0x0000b1371f00b62c,0x2e01f8020209680f,0xcc353128096a3164,0x3635110ecc341b0e,
0x3a33323403fb0308,0x32342908360b028b,0x1f08363432270836,0x4c65524f110ecd33,
0x0e0023060c0ecd75,0xcd0f00002b0f0ecd,0x2b321f002b0d140e,0x361f230ecd0f0a00,
0x079e34342a220ecd,0x34342f05079e341f,0xcd0f01400e110ecd,0x0ecd0f01490e0f0e,
0x0e0ecd0f01510e0e,0x0c000ecd0f01590e,0x351f04fd36140272,0x2f1472321b6b0710,
0x97371b7307103734,0x341b3e0710381f00,0x341f071034150710,0x110710341f120710,
0x071034150710341b,0x133035240710341c,0xe10b2a0710381f02,0x07520ecd31352f08,
0x30332a1b76071f5f,0x001a061bf00b1dd8,0xc231332d14743417,0x332320f633352900,
0x325107fc09002a32,0x6d3620f734303620,0x1300920306b57861,0x00005d331f003334,
0x007b35134c0eb60f,0x040e0b01fb3a3424,0x3533270680333529,0x001c0eb6341f0680,
0x350d1e0eb60f048e,0x1f003d0f0eb60e00,0x0eb60e29003d311f,0x003d331f18003d0f,
0x30312f040eb60f29,0x352a1c7b0d240718,0x050719351f071935,0xc70e1c0eb735352f,
0x01d00e210eb70f01,0x0601d90f210eb70f,0x1d00450f010e720f,0x0045351f010eb70f,
0x140a0b010eb70f1d,0x3a36333c1a9d3514,0x371f0007a70f0790,0x00372c38230707a7,
0xa70f07603b37723c,0x1339130033010407,0x0710351107100b04,0x1f0107a80f07900b,
0x3a2c32240807a831,0x1f00373131723a00,0x040006020807a933,0x39352f1b7a0b05ad,
0xa907073c050407a9,0x351b1207a9391f07,0x351f07a9351507a9,0x15081639150007a9,
0x1a0107a90f002635,0x65375f353b07a939,0x06330b003f331500,0xa9391d0215313624,
0x013a341908940607,0x06bc03001e2c3325,0xb832362f0ff2341b,0x1e190eb7331f050e,
0x020eb733170eb732,0x2c372e25c604012c,0xd238172385080795,0x29351b0129381508,
0xee34190129341501,0x0034080059351b07,0x4d3a352f00343615,0x1e190f4c331f030f,
0x020f4c35170f4c31,0x040f1f3a362f006a,0x07ed03391d39331f,0xbb0b00783a313434,
0x342707ed34362903,0x0a0e6d351f07ed32,0x6769537f04db3312,0x0e050e7064696f6d,
0x002e0f0e730e0026,0x09002e0f0e760e12,0x0e7c0f1a002e321f,0x660f23e034312e04,
0x9a66101630070007,0x0e91333c64664f01,0x361f077836362a0f,0x0e9136362f050778,
0x150e940f01610e07,0x1f0a0e970f016a0e,0x0705321f0e003634,0x0e9d0f0e00360f01,
0x1b5736140e040b01,0x341b6b06f633342f,0x7406f639362f0b28,0x9f30372f0828341b,
0x33312f06f60b090e,0x1506f7361b1206f7,0x0006f7361f06f736,0x0f002735150e2307,
0x06f933312a0106f8,0x15006831315f364b,0x372406fa0b004133,0x0306fa361f021932,
0x0e15030a06fa321f,0xa234372f0511341b,0x172d0ea1331f050e,0x66330061000ea230,
0x2f7c64161cbf3436,0x342e756e122e7601,0xaf64142af2093436,0x341f2bd23a382e00,
0x2ba8333125010ec5,0x2900e7391d003800,0x2ffa35130ec73639,0x3431bd0ec730352a,
0x69640a0d33203234,0x331f00b7022c1176,0x352d0ee103003047,0x007731382a007731,
0x303632352f00a103,0x08380f3036371e25,0x3836150961361b0e,0x1f3036345f363a08,
0x0f2f8f0305303638,0x391a2fc4030e3036,0x24093036311f2f58,0x022f58042fd63233,
0x30360f2f350b2ff7,0x2f3506003f341706,0x303634332f30f20c,0x360f30f62c342314,
0x3b302f004b020130,0x080330360a0a2f33,0x36361f003f2c1631,0x371c007e36100830,
0x26093036371f3036,0x6237332531373434,0x3037311f326e0b00,0x327103327031120c,
0x3c361b023c323125,0x039e351904e40602,0x363a00303a34342f,0x39010201303a365f,
0x3c361e00153b3434,0x0f001a022f250030,0x50022f010104303e,0x1230413731723900,
0x0605c4381c001534,0x351f3043371a0095,0x073043361f053043,0x2c38230a3043371f,
0x003f0b005e050024,0x303227093043391f,0x03510a003f022fe3,0x410209304331322f,
0x322a003f30322632,0x2d32683316031231,0x1f00330202503531,0x3043391f08304333,
0x31250de83031270c,0x150193391b024c30,0x2c04883819019238,0x1a42351430453534,
0x312f000a395f3635,0x231bc00702057130,0x0b029a09004e2c39,0x90391f0480020690,
0x6414014534110106,0x31342f0d660a05b7,0x0414f93412060690,0x361b00a8351d00bd,
0x361f002a36130619,0x02019b3411100690,0x371f009b3414009b,0x1f03155d0f000063,
0x0992341334155c33,0x07020c0191383526,0x713935270d713619,0x391d0a155e361f0d,
0x15610f0b5203124c,0x15640e1700380f08,0x0040311f2200400f,0x1b00400f156a0e2c,
0x24260f2c0040331f,0x372a232426381f16,0x050df7371f0df738,0xd50f07156f38372f,
0x490f0215720f1e01,0x490f0315750f2000,0x480f01242f0f2000,0x480f0224320f2100,
0x3f0b01157e0f2000,0x30362f1b12381404,0x2f0452361b6b1d25,0x22fb0b73322d3138,
0x371b3e1d2532382f,0x371f0e8537150e85,0x111d25371f121d25,0x0e8237151d25371b,
0x2e0538140e82371c,0x361b291d2533362f,0xb3243535382f1059,0x160f32310e095e06,
0x1f032416341f4324,0x972c362406241635,0x168c0400b134191d,0x135324163666253f,
0x026c3a3524020b37,0x270838371902150c,0x0838371f08383636,0x724300ff137f030a,
0x6f72746e4573736f,0x0539db7272457970,0x0f082c0e1100320f,0x26003a311f1c003a,
0x1f15003a0f08200e,0x0408140f26003a33,0x3a000e081532332e,0x0d311c00160c321f,
0x16381f41e0381b16,0x07081639382f0508,0x143a070f0601b90f,0x03080a0f1a00430f,
0x021d7c0f1a00430f,0x021d790f1a00420f,0x0107f80f1a00420f,0x2f1b6139141c440b,
0x99361c6b16803736,0x361b741680321f00,0x1f07fa33392e145c,0x1d77321e05168038,
0x0796387022011000,0x07fb381b07963913,0x07fb381f07fb3815,0x381c168039322d00,
0x92321c0f910207fc,0x006a35325f384b0f,0x1408000b00433315,0x168230372f2e4839,
0x36392f09d0371b28,0x1d7d38322c451d7c,0xc1381e130d74672a,0x5f384b0c130e0f10,
0x0130341501303431,0x03311f351ce5341f,0xa20607ee3218012c,0x45001e2c3537332c,
0x6a0000cb34336630,0x303229016a321e01,0x372c02d437131076,0x301c2f9c00168f33,
0x35372f1231020137,0x332d01370300264b,0x703312480102e030,0x014a331546c93232,
0x1702bc060149361b,0x301642b30302e335,0x38111462371a007a,0x42c0020071081462,
0x01bb341600713013,0x1d0043371503550c,0x00ec353228007237,0x141c371111e2381e,
0x01023e454632434e,0x008335327033158c,0x0082391b00833615,0x923a382900823815,
0x7e42342f007e0709,0x010b373133390700,0x00463912156d391a,0x1b01141701155909,
0x3036383833387800,0x2301476101155537,0x353335363031a900,0x3712155b36313233,
0x3d72133d6a020c68,0x322a005332322405,0x1113617511134533,0x02b932322a03bc35,
0x00210000c82c3823,0x371217370203a30d,0x34314541467b1566,0x2318eb0101654237,
0x01e8381601653732,0x2a012106053d311c,0x0500660901683031,0xdb381f00a60d02d2,
0x4973090069000016,0x000b800f004d3519,0x180b0f002138352e,0xa43512180b351007,
0x01001667656e3402,0x363e4918351a01d4,0x32142f05001b2c30,0x002a01004f2c3136,
0x3225001e0600df03,0x351627361a009b2c,0x03361a00212c3336,0x34437a17ed361247,
0x02001b3633413643,0x34394531427c0c81,0x2c363633165d3645,0x4a230a0060050024,
0x4141447d011f3612,0xa802003f41314241,0x471e0a003f361700,0x331c00272c393636,
0x00242c303736003f,0x2501f00700f33215,0x7338352a00272c31,0x2c1ac5001b760303,
0x2c333836005a3831,0x02870d052802022f,0x6c2b3cc801075b06,0x03b03338251a5e67,
0x002f3a3425059500,0x07c9020a05cb331f,0x23d934312f068906,0x72050ef139322844,
0x030602f330332f0e,0x016b071c15064b28,0x06ba0b1c1b2c3925,0xba31322b00ef351d,
0xba36372f17300306,0x39372f1dc2021206,0x0106ba311d0806ba,0x0804343170330eca,
0x2606bb0c04613516,0x0006bd0f017c3531,0x1b06bd0d007d3116,0x70241b0c0106be31,
0x321d063b06087933,0xc0311e06bf060a13,0xc00f00f237312806,0x0706c030382f0006,
0x85373170331a7a01,0x2606c10c055b0700,0x1606c30b00853831,0x008142342f008139,
0x3139312f06c30c07,0x141c1d39372a001c,0x060006c40f1bfc36,0x38250406c40f1c3a,
0x4f0606c4061c3431,0x3433250306c40f1c,0x32383302c3061c54,0x670e00210000c92c,
0xc40f006f2c39230a,0x3931230b97010606,0x043d0c0b970706c4,0x06c4321a01223216,
0x06c40e0066313828,0x0206c4321f00a604,0x4d36332806c4321a,0x21371e0103d10f00,
0x3533350706c40f00,0x332506c4061ef02c,0xab0205b9064bdc38,0x171af306001b0b1b,
0x2606c4391c1f4030,0x37a3341b1efc3134,0x31342a00212c3225,0x2f0606c4331f1ba4,
0x1c9e020906c43434,0x331a0060031f7702,0x120906c4361f003f,0x1a003f351700a834,
0x00272c382600b436,0x171cd402003f321d,0x351201f00a00d838,0x1c06014a39161c19,
0x2f020f06c4311f14,0x87301c0835351202,0x06c4321f06c40602,0x3a3737350fc60309,
0x341f000b3316002f,0x1f04147a0f0105e0,0x7a3b332a3a388f33,0x312f000e7e371f00,
0x1e1d270201007836,0x00783831281d2831,0x2c00371307303718,0x343733162238312a,
0x6606231600001e2c,0x131d630200b00703,0x013d383726245a37,0x18152b3919071d0c,
0x1132c1381f1d6337,0x6e616d6c6c654271,0x021a316e41281231,0x3e0f002aec0f0002,
0x00460f32d30e1d00,0x321f320046311f28,0x320046331f320046,0x463517320046341f,
0x2300460f02470000,0x06371e32008c361f,0x46381f20008c0f34,0x0e042cf0391f3200,
0x1e1ee735312e16d1,0x2c001efa0f2cf036,0x50e5301b50e43533,0x31302f0650e5391f,
0x0f2403680f07346b,0x0f26004f0f023474,0x1f26004f0f03347d,0x004f341f01004f32,
0x351f01004f331f26,0x01004f341f26004f,0x2aff0126004f361f,0x1f2700ec0f5a9e0b,
0x004f371f01009d36,0x9d0f003610371f26,0x0f003619381f2700,0x0018ac391f270188,
0x1e92303124177a0b,0x381c6b18ad30382f,0x7418ae35302f5369,0x2f361f009a32382c,
0x1b1220aa311f192f,0x1f18af391518af39,0x18af311d012f2f39,0xac311a032f2f391f,
0xac3915153f391b20,0x38302452da391d18,0x2c2818ad331f021b,0x014c9f0f00573438,
0x020a2f07365b3814,0x30260a2d381e1143,0x0143e4391f27742c,0x1f0c090118af301e,
0x362c391b1b362c35,0x18a9391f18a93915,0xda030000c5371f02,0x0eda011222311e0a,
0x1412243119301604,0x00815d392b209731,0x0036790f00813615,0xf70401008131312f,
0x0081331800810e20,0x0080361300813218,0x341f0020cd5d332f,0x341e30c503010066,
0x3531291a5d080066,0x5d362f0066030bdb,0x31250d9406084561,0x2201073815459234,
0x1f57100c02663a36,0x1a4b321f01474831,0x4b32642e17b00201,0x0b1b1e041794021a,
0x0c7002024c00043f,0x374232110c707513,0x04008b0712c97213,0x11163a3638395833,
0x032d396624009601,0x000168331f00ad0c,0xad0c001c02199901,0x3248321f0dbb0800,
0x032c865d35323f02,0x3b122c800f2c8b02,0x8c37150293385f39,0x1cee040184371c01,
0x361f00df3a37383e,0x1c0218b20100566f,0x1551381700df0c00,0x24a40300df373229,
0x312711675d383239,0x381c325f03327332,0x2f011d3c311f576a,0x1581010002283932,
0x3327009c0b001c02,0x350e86331b022831,0x02160933575d3133,0x7b0533d60d0f3705,
0x33cf32120b2d0231,0x146a336430202c52,0x331f2d880e000105,0x00482c3426010042,
0x003701023433331f,0x32332f028634642e,0x1c02322301000286,0x692c3426010b0c00,
0x3425010b33332b1e,0x8504018c0033ff5d,0x0c000a385f39352e,0xa9391857a90b08a0,
0x07f60a0f9b391f57,0x6e6174536e714431,0x6c61764564726f66,0x092c6e6f69746175,
0x0e0f00330f0f900e,0x311f1d003b0f0f85,0x27003b321f27003b,0x41341e27003b331f,
0x36351f15003b0f0e,0x340e0e35351d030e,0x34322c0e20371e0e,0x30312f58700c0e20,
0x0f0958720f060e21,0x0f020e160f1901f9,0x0f030e0b0f1b0044,0x0f030e000f1b0044,
0x0f030df50f1b0044,0x000cb0341f1b0044,0x5f74351f1c010f0f,0x0ca6040406301c01,
0x0ca6331f593d391a,0x9a01070ca6341f03,0x2d7e060ba8331804,0x002d7905040ca60f,
0xe3321f0c0c0c0080,0x321f0c0c3115005e,0x0a6630312b0f688f,0x0c000b0068913116,
0x33393f43d3040070,0x19329b0f0447f83a,0x1f2bf20c329b3115,0x0060391f0009fb38,
0x2807160e0b8e0300,0x2bf4301f09f93131,0x0665595d31313f00,0x1c0c65520f2bf902,
0x0067953116679431,0x51b30401ac0c000b,0xdd381f010bbe391f,0x90381e1dc7030100,
0x54391f16b2301808,0x00014230322f002c,0xa0030108f631322f,0x0ba3080066311e2c,
0x333222074f32322a,0x08eb0301020c3443,0xdb0c010a3a353935,0x1f0117b433332f0d,
0x1e00e20301010232,0x1f0102341801e032,0x3f34312f0043b333,0x03010066351f010c,
0x37170066351e2e80,0x1917e236312b0851,0x1600f136165fed37,0x331a0c1a0c000b34,
0x311f596439183550,0x71118434120b66ed,0x9972616d61646148,0x0f42c70e00030040,
0x330f42cc0e08002b,0x330f169d311d1500,0x1f1f0066321f0e00,0x0f08230e1f006633,
0x1f0033351f0e0033,0x30312f153569361f,0x356b33312b23356a,0x6d331f076756311f,
0x690f0701fe0f0835,0x311f13003c0f0c43,0x1f1400770f00150f,0x13003c0f02679232,
0x00b20f000077331f,0x00760f0108260f14,0x3b0f01445b351f14,0x0c010859361f1300,
0x0f0613303424074f,0x1f0cf9391c6c59d9,0x8c30312c7335a534,0x311d3f35a7341f09,
0x67d80f67d70767d6,0x67da0d1367d90f14,0x341567dc0e67db07,0x2c2a59e5301f63b4,
0x35b2341f088b3031,0x0259670f4b300847,0x35ca351f4535ca0f,0xfb351f13ce361502,
0x4d321f144d0d4167,0x3919144d321e0014,0x39145035b00f144c,0x95311d21c404020b,
0x0868963734313b68,0x0b4b5e31312f59ca,0x776e6d756c6f63df,0x4b5e78614d657369,
0x0f4b5e0e00260e06,0x2e0f4b5e0e11002e,0x1f1a002e321f0900,0x1e6c391f15770b33,
0x1b1e590d07e9050a,0x07e932312f353e34,0x0e074b4d39342f06,0x590e164b4d0f0150,
0x36361f094b4d0f01,0x371f01351b0f0e00,0x0c014b4d0f0e0036,0x050531353135681f,
0x030724381f59ed0a,0x303129070724391f,0x07260f1bc40b1bf6,0x0d0085011bbe0704,
0x1f090f82321f6e64,0x16d4321b100f8237,0x8232312d68193116,0x3a372f061535160f,
0xb70f080604031c70,0x1f2c4a16321f0258,0x4fbd38170258b735,0x2b1ceb3a3830314c,
0x1f62d20500c63b30,0x131cfc05002a2d30,0x322f010a01118b31,0x02017a0a0100443a,
0xb9311111330800e4,0x5f323c0d0fca0f04,0x390d079905018437,0x31313f54d9311569,
0x024e36190852c532,0x1d012a041c9c3417,0x14016f7b0f005a31,0x041810f80f086a39,
0x311e011b570f06c4,0x8b0f069035191ca0,0x02123432312c0c78,0x06570c012e036a76,
0x3a342f012e303625,0x1c0ff7341f040ff7,0xf73718000ff7311f,0x01713714029b0b0f,
0x090f9a0402503516,0x1404023032290252,0xed01040004025035,0x260aaa0400fa092d,
0x1e1a8b0c005b3731,0xca0f132f0e10f136,0x38312665a1042a45,0x35362a1a6d0c0086,
0x0f07e039312807e0,0x05c73831290a69e1,0x0207e565646e494f,0x0f07ea0e03002b0f,
0x330f07ef0e1c0033,0x0f110033321f0e00,0x2f000fe30f2407f9,0x37362b1107fa3232,
0x2b030669750f07fa,0x01650f0307fa0f00,0x016e0e1707ff0f02,0x3c30312f0f08040f,
0x311f01080a0f1300,0x0c0208100f1400b4,0x02044e3936240522,0x08110f0e550a2f45,
0x1b08081233312f00,0x140f1f620a237034,0xa4321c05c60a0608,0x2f09081430372f07,
0x15331c1008153131,0x0a000b0068710608,0x6d050761361e00fa,0x0307613232313952,
0x33322c071e04383d,0x01260a04ab0100bc,0x010e301a00bc3716,0x30322f00202c3825,
0x420873381f050873,0x122e900c08733918,0x311a00f707531731,0x69990206080500f7,
0x160008580f003b0e,0x361f004401010332,0x060859331c100859,0x1577ce33312e69d4,
0x391f09dd0e01b636,0x001f2c3625050186,0x05fd0c009d313224,0x361f05085a37372f,
0x0c085a371f2f085a,0x0d085a0f0e833714,0x036b1302085a331c,0x040c0601e50d012f,
0x5a361f05085a391f,0x1803085a381f3008,0x0212a9331c077939,0x01a10503790c4980,
0x088a0e0282313326,0x3bd703088a34372b,0x0963bf01088a3116,0x5b331674cb05012a,
0x088a3815088a0c00,0x0f03c2361e240609,0x3326037e044008a5,0xa50b7a7c0d00a134,
0x6a50311563cf0908,0x09656c69662e1af4,0x69762f3a44222031,0x7065522f73646f6e,
0x442d52534d2f736f,0x766972702f4d5353,0x4309f1001e657461,0x614d62696c616475,
0x654b2f646567616e,0x086b2f736c656e72,0x202c2275632ee000,0x3431393938333431,
0x66353034354431d6,0x5c3a63222032b000,0x00084f676f72705c,0x6e5c5c732ef00014,
0x7067206169646976,0x7475706d6f632075,0x6c6f6f7420676e69,0x6475635c5c74696b,
0x5c302e37765c5c61,0x6564756c636e695c,0x6563697665645c5c,0x73511e8e0000ce5f,
0x328000787070682e,0x0c38393231363234,0x007a343835304400,0x616d4f35007a331f,
0x2c39840700786874,0x0077313134383920,0x5c5c3a4322203483,0xf000774610007750,
0x5c29363878282013,0x6f736f7263694d5c,0x6175736956207466,0x6f6964757453206c,
0x43562b0071323120,0x700069682e200075,0x6732343635393733,0xc238353534345137,
0x2021008e65732101,0x666e695f6088eb2e,0x30032f00097d206f,0x386242017f373636,
0x0019301300073220,0x7262626162002d03,0x00073812001b7665,0x3014000901191101,
0x1300093330240012,0x0012303124000931,0x00353513001b321b,0x0839362300193313,
0x2031372a00180300,0x3634230008351300,0x00ab0a0d37370010,0x600400403420383a,
0xa605008b37342400,0x313124009d351c00,0x3e351a001205001b,0x321c00da32382d00,
0x3c371400340c003d,0x35342a0044331a00,0x2c000833382a00aa,0x1d006b0500ba3737,
0x391500440300c334,0x000f00a9361b002c,0x371b004636153301,0x03020637392d002b,
0x0600d038392a003c,0x02380d003b0d00a4,0x80351d014c30302b,0x8a311c0263341d01,
0x3730313f00c60c00,0x3927027204200047,0x362c027b07010439,0x656e696c4f032e34,
0x018e32392f03028e,0x2f1f028e32392f29,0x32392f33028e3239,0x0f3301000f2b028e,
0x028e32392f6b028e,0x0a0d323d04b2092d,0x3218008d391b051e,0x00350f003e090541,
0x05f102723a331120,0x34333235000a3014,0x0a0d2705710105d1,0x370716003e0f0047,
0xbd06180037311f00,0x0210381b010b0d05,0x334f05fb0e025609,0x301e070158342032,
0xbb301e02810c02ac,0x3a00510f01740e01,0x373334314f011b07,0x003e37392f0d0191,
0x0037381f00370619,0x3136312f029c0d19,0x01283430313e0403,0x59b533112600350f,
0x0c3630313f009702,0x00d50f003e0e1f01,0x0e03f607025d0d08,0x870916002d0f01f5,
0x2f2900c531332f00,0x0446050400c53133,0x0922301a04da3914,0x3e004d0f1c01b20f,
0x391f00c702038904,0xae20343637020105,0x098c830000120892,0x1c0082353123012e,
0x007838382f00f936,0x00883414068b0419,0x1b32322400123713,0x0d31372900f50500,
0xaa0a0d2305f7040b,0x1f000b060d290000,0x0000cc0331001f33,0x02002939302f0204,
0x01bd341400e5321d,0x0226353325003c06,0x321501c00300ee0b,0xf90e08d0341401b7,
0x1202820f00070e0b,0x069a34352f005204,0x0406083d36312f05,0x371b0377381e06b5,
0x391d0857381d0808,0xc3381c079a0c0060,0x100b024e33382b05,0x032d351e05c80700,
0x05027300e000f80f,0x36393f000903027b,0x03d6311b0503d632,0x0a0a0f0c03d6311f,
0x0f07fb0e04850501,0x3236363645060093,0x622e2f056f030317,0x710a03ab05149094,
0x0f019a080a4d0d04,0x030090311f480090,0x340f02610e01e607,0x1d0500a4321f5d01,
0x1a0136391f00ad34,0xc6331f250092381f,0x6a0d07c7391d0401,0xac0f028439302d03,
0x240900ac34194b00,0x20301f0606341706,0x0012001f391f0b00,0x331d0f03db0f0046,
0x322f07064c0f00d6,0x0f0071080a064c38,0x100071341f070285,0x010109130071381f,
0x20371f0b0120361f,0x371d0f00b80f0b01,0x30382b08630d00b8,0x08633030323e0863,
0x060299051b077e0f,0x0c83080aa00e036a,0xc438342f1b07bc0f,0x0e060a2d341f2906,
0xb30f1807770f068f,0x32322f022e07a400,0x1f0732321b0f0732,0xfe32322f4b073232,
0x9a0f068f9d0f1005,0x311f5d009c0f1806,0x381f008a08390692,0x53068a321f1d008a,
0x0682331f2a00a40f,0x210f000c31312707,0x0f0e0021361f0e00,0x068734322f180687,
0x2f44068735322f5c,0x24341e0d01243331,0x38322f1b068b0f01,0x1f0710920f6a068b,
0xa933372c300d1830,0x17070f0cec391e15,0x010f071693341f07,0x0e15ef38362e1506,
0x4f0f390e670f16fb,0x332f032f0741ff01,0x078c331b0f078c33,0x1a381f0d1294331f,
0x00880f00e605000e,0x91b50f0a06e50f05,0x2c371e04066d0f1e,0x02351d1719b80f10,
0xfc0f4500cf301f02,0x060f2d00ae0f5b0e,0x9c381f009c08490f,0xb60f630f100f2000,
0x3127080f1a0f3c00,0x0d0021341f151638,0x08980f0e0021331f,0x2f5c089835332f18,
0x30322f4408983633,0x012431322e0c0124,0x9839332f1b08980f,0x850c330e390f8308,
0xec0f033e36372b1f,0xf707a400b30f230e,0x1b0f076034342f01,0x4b0eec341f076034,
0xbc0e170e5034342f,0x009c0f180eec0f8f,0x008a083a0eec0f5d,0x0eec0f10008a381f,
0x0eec0f2a00a40f61,0x351f1b9335322708,0x0e0021341f0d0021,0x5436342f1806540f,
0x45065437342f5c06,0x24381e0d0124371f,0x30352f1b06540f01,0x31281d7d06400654,
0x1c000c321700c337,0x3f1d7d311c008933,0x7d0f06014d333032,0x99311f004c07131d,
0x141dc930382f0501,0x0806dc0fdc0fc70f,0xff014f0f650fc70f,0x0867351f03810841,
0xc7351f0867351b0f,0x220e4a35352f400f,0x0f730fc70f90ff0e,0x0f600fc70f2800cf,
0x084e0fc70f2800ae,0x0f1b009c381f009c,0x0f3c00b60f680fc7,0x2f1da23317080fc7,
0x21311f0d00213234,0x352f1809020f0e00,0x0701560f43097337,0x38332f440973381f,
0x0f0124391e0d0124,0x00bc31362f1b0973,0xbe0f0600bc391f10,0x290f0b31352f450f,
0x032d331d0100331d,0x290fda0f001f4f0f,0x1f022608c000cf0f,0x078f361b0f078f36,
0x36362f4b0ff6361f,0xf90f91210e100f5a,0xfc0f60009f0f220f,0x8d381f008d083a0f,
0xa70f610fff0f1300,0x34170810020f2d00,0x0d002139352f1da9,0x061e0f0e0021381f,
0x2f5c100238362f18,0x35342f44068f3936,0x0f0124361e0d0124,0x068f32372f1b068f,
0x009932190ff90637,0x008031352c171c07,0x108a371f0fad341d,0x071c2e6437372f05,
0x05005533392f0055,0x63301f1c0055391f,0x1f000c3235270a2e,0x3179361f0400ed33,
0x01a00f332e870f1d,0x01a0371f000c0805,0xa032332f12210429,0x0f0f0055381f3801,
0x89105c371f4d11ab,0x6511c70f2408ad0f,0x03cb085dff016b0f,0x54371b0f0a54381f,
0x372f4011e3371f0a,0x0c8f480f0a106638,0x2b00d20f8111e60f,0x2b00b10f6011e90f,
0x1f009f084e11ec0f,0x6811ef0f1e009f38,0x0811f20f3f00b90f,0x2136362f09583617,
0x0f0e0021351f0d00,0x0b6330382f180b63,0x4330d80f9557005c,0x24331f0d0124321f,
0x341f0f00bc0f0c01,0x2f29112c0f8c2a51,0x09351b0703e93736,0x3e361f034a361e00,
0x3e0a3f0232170700,0x38a00f0035341e00,0xff0829ff01370f42,0x381b0f0877391f02,
0x070c0877381f0877,0x331f2213a30f0867,0xd90f09a5060e0a20,0xde0f0a07450f0800,
0x01ea0f073f0e1b8f,0xee05041c4c371f05,0x00cc0f4335381e08,0x00ab0f5d39680f49,
0x0099084b396f0f28,0x39760f1b0099381f,0x08aa0f3900b30f65,0x2139372f22070709,
0x0f0d0021381f0d00,0x08aa31392f19140d,0x1f4508aa32392f5c,0x2430372e0c012439,
0x35392f1b08aa0f01,0x993135333741140d,0x8034372c094f0700,0x35372f4183361d00,
0x332f006f04050932,0x070098092513b838,0x29009837372f1305,0x245b0f0f0098351f,
0x1f06063f36362f89,0x086d301f072b2f30,0x112a0f1a8e361d1f,0x1c960f1700100f52,
0x70088bff01990f21,0x391b104375301f3e,0x1f0e0a96391f0a96,0x0e4ae30d060a4732,
0x31382a002c0d1295,0x0f07f537392e44aa,0xde0f00f306170aaf,0x450e2785570f0323,
0x00d8040b4d4a0f09,0x00f10f030632372e,0x301f0c099d311f91,0x362e53cc0d070dd4,
0x1e0914810f14a435,0x0f03025e0f16e82e,0x0e0e1ec60f700128,0x2f0654f4341f0f05,
0x04f50d0651af3631,0x5e00fd0f50f4341e,0x8a0f053b0e0bc20e,0x341f5c00af0f0905,
0x0f05061f0f2c00af,0x070f004708211771,0xa20f0107351e5c01,0x0edf0e03b90d0550,
0x51c50e0f4835301f,0x0123e90f262ea40f,0x2c19a70a1024351e,0x0045321f08213631,
0x01a20f00544c0f05,0x372f4301a2321f09,0x1f00a6083949220d,0x360d382f3800a638,
0x392f6700c00f3149,0x0e673817060fcd0d,0x382f0c002130392f,0x19494f0f0e002139,
0x30312f5d42c9301f,0x012632382f4542ca,0xbd0f0c0126331f0d,0x2f370fd0381f1000,
0x0072060856943031,0x0f0818eb0f522a0e,0x013736382f20522a,0x312d0a0137371f0d,
0x074c94321f036736,0x3f381f0f52f8351f,0x342b450ff60f1d24,0x2f0a27311c078639,
0x12321f0f54873338,0xa6381f0e4b0d0717,0x2e1f1b1f560f070b,0x3a0f0f970e410e30,
0x7b0f03130826ff01,0x1f52ae30312c114b,0x5637392f5c0f3a30,0x360f0c4b760f6f0d,
0x0f390e730d1f1c85,0x910e68311fbc011d,0x1173321f3a00f20f,0x4f88391e04b00515,
0x99011c0f1803710f,0xdd30312f050f790f,0x1fef0136371f0602,0x0f4f440e3a0d5734,
0x070c8c351f28009b,0x00210f000c313927,0x8c0f0e0021361f0e,0xbb0f394f550f190c,
0x0c292b34321f2b35,0x02a50e63fd0e1584,0x0700190f1f34f20f,0xe800f70f0835e30f,
0x1d102bb80f584409,0x35360e311f5c2131,0x0f05009e0f017404,0x0e1485d20f0b2a4b,
0x352f1e00a40f06d0,0x2c65311f4b00a430,0x0636321b0bc4070b,0xe50f08009a37392f,
0x370f2c5cd10f3031,0x1e0d5e06331f4b01,0x0f11012e0f0d5b31,0x1e3306e20f26441d,
0x1f1f011c0f2bea33,0x3200ad0f54142635,0x5e3818080787361f,0x331f0e0022341f5d,
0x2f19078a0f0f0022,0x8f341f5d14163034,0x01290f065d03452c,0x0f012a0e03320309,
0x4e4d34342f19141a,0x1f2a030b31352f8b,0xf431302f0618c439,0x0f2a3e8e321f040b,
0xc30f022e09bf00ce,0x0f088232312c102b,0xf20f0096064c5d72,0x910f0185b50f033d,
0x920f6100a00f263e,0x8e381f008e093a3e,0xa80f613e930f1300,0x3028095d820f2e00,
0x0f0023391f5d4d35,0x06380f100023381f,0x950b382a8e351f19,0x371f0f00b8361f00,
0x0f23b0321f0100b8,0x01f537362f13fd0d,0xd0341a05010f0f1c,0xc3636f2f73f50709,
0xa80500c339180200,0x478a0d1108250f00,0x3430312b3f006d09,0x0f007130312e0201,
0x1c0023321f200023,0x4788311f2234680f,0x0f22465b30382f11,0x361f072105441abc,
0x1f0916d90f650721,0xeb00fa0f32081b31,0x084737362f02a008,0x4733312f5e2c0c10,
0x0a07a737362f4c08,0x27084c0f0586170f,0x3b08510f6600a50f,0x170093381f009308,
0x3200ad0f6308560f,0x3f5c010809085b0f,0x341f0f0023353331,0x2f19085b0f100023,
0x31322f45085b3936,0x0f00b8321e0f00b8,0x0f1904cb0f54085b,0x081b32372f04013b,
0x2f70092c36392f0b,0x332b2f08092c3337,0x01983432280308bf,0x34372f190930331f,
0x03677e341f0a0115,0x00230f007135322e,0x311f1c0023371f20,0x2f105a2b0f236e74,
0x06f4006009303238,0x1f7bdd321d77ea0d,0x0600cf030c2a6835,0xbc0c848030117bcc,
0xd77b2025828f0282,0x130a0d2b042e0400,0x203546097ae10000,0x1e6f440c062a2038,
0xac06004c0e002633,0x005f321e05f60500,0x2e02bd050009301d,0x2d05790400543634,
0x2d00950e004a3436,0x1339352d00823835,0x332e00eb33372e00,0x390500aa0e00f532,
0x008d0f001b351e00,0x2f00fd0500790e38,0xcd361f10007a3633,0x67361f000a060000,
0x0070018a351f0700,0x026d0f04d60d419e,0x0099060013381d00,0x361f0700e430312f,
0x2f008c321e5301c4,0xbc371f1102643135,0x540e1b01080f0001,0x2e39322d00240500,
0x680f03f939342e00,0x382f011d381e1300,0x0182391f10026639,0x0738014a39342f07,
0x2e8301ec321f0030,0x0f00a20e006a3131,0x00e332312f08053b,0x3831160801d80f5d,
0x0f00550e01da0e00,0xe50f000901150125,0x4a7b189299000006,0x1a099b041a6f0812,
0x341f080506078635,0xc30b0046090a1c55,0x53351f2c00530f11,0x00570f17a80c4700,
0x13160e0008301b27,0x1f0500630f0b0c04,0x02005c0f131a6a31,0x1f361e3b005c361f,
0x01280f3500600f01,0xcc0f000d33322801,0xcc381f8165060c00,0x0f0b2436322e1100,
0x005c31332f35005c,0x3000600f12040c50,0x0184341e0201840f,0x0366351f07030f0f,
0x0053301f017b0a11,0x530f017230332e31,0x00570f01690e2d00,0x0d351d0201600f2d,
0xe4371f0801cc0f00,0x5c321f0e4e091b02,0x0f028832332e3a00,0x930f012807350060,
0x65676e61728f000d,0x706202001d7b2073,0x01001f6d616e6275,0x005d393335370dde,
0x1a909c008d41381c,0x342f5e8801909a0d,0x06082d07e0169b32,0x8a8c0f003e075708,
0x3437314f005b0a28,0x4f00be0a996e7e38,0x80ff42cc39343034,0x63b235332201a40a,
0x01420a1aff4ea30f,0xb423ba363636354f,0x138d6f311f021b0c,0x2e3332333f04b40b,
0x170601910b36ff7b,0x840c4bff5afa0f32,0xb50b1b93df371f07,0x178fb80f5fd90201,
0x6b3836393f003f0a,0x9f321f051b0c9985,0x35324f01020ade8d,0x00da0bb568653138,
0x32ff714e0f242a03,0xb63231323f03360b,0x37510205340bdd34,0x4f00570a2f95040f,
0x21ff3fc539373734,0x7d0a0d306001450a,0x0000000000000a0d
};
#pragma data_seg()


}
#line 1319 "d:\\vinods\\repos\\msr-dssm\\private\\vinods\\cudalibmanaged\\kernels\\x64\\debug\\kernel.fatbin.c"


extern "C" {
#line 1323 "d:\\vinods\\repos\\msr-dssm\\private\\vinods\\cudalibmanaged\\kernels\\x64\\debug\\kernel.fatbin.c"
#pragma data_seg(".nvFatBinSegment")
__declspec(allocate(".nvFatBinSegment")) __declspec(align(8)) static const __fatBinC_Wrapper_t __fatDeviceText= 
	{ 0x466243b1, 1, fatbinData, 0 };
#pragma data_seg()

}
#line 1330 "d:\\vinods\\repos\\msr-dssm\\private\\vinods\\cudalibmanaged\\kernels\\x64\\debug\\kernel.fatbin.c"

#line 4 "d:\\vinods\\repos\\msr-dssm\\private\\vinods\\cudalibmanaged\\kernels\\x64\\debug\\kernel.cudafe1.stub.c"
extern void __device_stub__Z16matrixPlusVectorPfS_S_ii(float *, float *, float *, int, int);
extern void __device_stub__Z10matrixTanhPfS_ii(float *, float *, int, int);
extern void __device_stub__Z26matrixIncorporateTanhDerivPfS_S_ii(float *, float *, float *, int, int);
extern void __device_stub__Z10matrixReLuPfS_ii(float *, float *, int, int);
extern void __device_stub__Z26matrixIncorporateReLuDerivPfS_S_ii(float *, float *, float *, int, int);
extern void __device_stub__Z13matrixSigmoidPfS_ii(float *, float *, int, int);
extern void __device_stub__Z29matrixIncorporateSigmoidDerivPfS_S_ii(float *, float *, float *, int, int);
extern void __device_stub__Z23matrixCrossEntropyErrorPfS_S_ii(float *, float *, float *, int, int);
extern void __device_stub__Z26matrixBellmanErrorAndDerivPfS_S_S_S_S_fS_ii(float *, float *, float *, float *, float *, float *, float, float *, int, int);
extern void __device_stub__Z21DqnStanfordEvaluationPfS_S_S_S_i(float *, float *, float *, float *, float *, int);
extern void __device_stub__Z14matrixHadamardPfS_fS_fii(float *, float *, float, float *, float, int, int);
extern void __device_stub__Z13columnwiseMaxPfS_ii(float *, float *, int, int);
extern void __device_stub__Z18columnwiseMaxIndexPfS_ii(float *, float *, int, int);
static void __nv_cudaEntityRegisterCallback(void **);
static void __sti____cudaRegisterAll_14_kernel_cpp1_ii_aea4bb27(void);
#pragma section(".CRT$XCU",read)
__declspec(allocate(".CRT$XCU"))static void (*__dummy_static_init__sti____cudaRegisterAll_14_kernel_cpp1_ii_aea4bb27[])(void) = {__sti____cudaRegisterAll_14_kernel_cpp1_ii_aea4bb27};
void __device_stub__Z16matrixPlusVectorPfS_S_ii(float *__par0, float *__par1, float *__par2, int __par3, int __par4){if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0Ui64) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8Ui64) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16Ui64) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24Ui64) != cudaSuccess) return;if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)28Ui64) != cudaSuccess) return;{ volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float *, int, int))matrixPlusVector)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float *, int, int))matrixPlusVector))); };}
#line 11 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
void matrixPlusVector( float *__cuda_0,float *__cuda_1,float *__cuda_2,int __cuda_3,int __cuda_4)
#line 12 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
{__device_stub__Z16matrixPlusVectorPfS_S_ii( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4);
#line 20 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
}
#line 1 "d:\\vinods\\repos\\msr-dssm\\private\\vinods\\cudalibmanaged\\kernels\\x64\\debug\\kernel.cudafe1.stub.c"
void __device_stub__Z10matrixTanhPfS_ii( float *__par0,  float *__par1,  int __par2,  int __par3) {  if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)20Ui64) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, int, int))matrixTanh)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, int, int))matrixTanh))); }; }
#line 22 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
void matrixTanh( float *__cuda_0,float *__cuda_1,int __cuda_2,int __cuda_3)
#line 23 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
{__device_stub__Z10matrixTanhPfS_ii( __cuda_0,__cuda_1,__cuda_2,__cuda_3);
#line 31 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
}
#line 1 "d:\\vinods\\repos\\msr-dssm\\private\\vinods\\cudalibmanaged\\kernels\\x64\\debug\\kernel.cudafe1.stub.c"
void __device_stub__Z26matrixIncorporateTanhDerivPfS_S_ii( float *__par0,  float *__par1,  float *__par2,  int __par3,  int __par4) {  if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)28Ui64) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float *, int, int))matrixIncorporateTanhDeriv)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float *, int, int))matrixIncorporateTanhDeriv))); }; }
#line 33 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
void matrixIncorporateTanhDeriv( float *__cuda_0,float *__cuda_1,float *__cuda_2,int __cuda_3,int __cuda_4)
#line 34 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
{__device_stub__Z26matrixIncorporateTanhDerivPfS_S_ii( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4);
#line 42 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
}
#line 1 "d:\\vinods\\repos\\msr-dssm\\private\\vinods\\cudalibmanaged\\kernels\\x64\\debug\\kernel.cudafe1.stub.c"
void __device_stub__Z10matrixReLuPfS_ii( float *__par0,  float *__par1,  int __par2,  int __par3) {  if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)20Ui64) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, int, int))matrixReLu)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, int, int))matrixReLu))); }; }
#line 44 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
void matrixReLu( float *__cuda_0,float *__cuda_1,int __cuda_2,int __cuda_3)
#line 45 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
{__device_stub__Z10matrixReLuPfS_ii( __cuda_0,__cuda_1,__cuda_2,__cuda_3);
#line 53 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
}
#line 1 "d:\\vinods\\repos\\msr-dssm\\private\\vinods\\cudalibmanaged\\kernels\\x64\\debug\\kernel.cudafe1.stub.c"
void __device_stub__Z26matrixIncorporateReLuDerivPfS_S_ii( float *__par0,  float *__par1,  float *__par2,  int __par3,  int __par4) {  if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)28Ui64) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float *, int, int))matrixIncorporateReLuDeriv)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float *, int, int))matrixIncorporateReLuDeriv))); }; }
#line 55 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
void matrixIncorporateReLuDeriv( float *__cuda_0,float *__cuda_1,float *__cuda_2,int __cuda_3,int __cuda_4)
#line 56 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
{__device_stub__Z26matrixIncorporateReLuDerivPfS_S_ii( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4);
#line 64 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
}
#line 1 "d:\\vinods\\repos\\msr-dssm\\private\\vinods\\cudalibmanaged\\kernels\\x64\\debug\\kernel.cudafe1.stub.c"
void __device_stub__Z13matrixSigmoidPfS_ii( float *__par0,  float *__par1,  int __par2,  int __par3) {  if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)20Ui64) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, int, int))matrixSigmoid)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, int, int))matrixSigmoid))); }; }
#line 66 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
void matrixSigmoid( float *__cuda_0,float *__cuda_1,int __cuda_2,int __cuda_3)
#line 67 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
{__device_stub__Z13matrixSigmoidPfS_ii( __cuda_0,__cuda_1,__cuda_2,__cuda_3);
#line 76 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
}
#line 1 "d:\\vinods\\repos\\msr-dssm\\private\\vinods\\cudalibmanaged\\kernels\\x64\\debug\\kernel.cudafe1.stub.c"
void __device_stub__Z29matrixIncorporateSigmoidDerivPfS_S_ii( float *__par0,  float *__par1,  float *__par2,  int __par3,  int __par4) {  if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)28Ui64) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float *, int, int))matrixIncorporateSigmoidDeriv)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float *, int, int))matrixIncorporateSigmoidDeriv))); }; }
#line 78 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
void matrixIncorporateSigmoidDeriv( float *__cuda_0,float *__cuda_1,float *__cuda_2,int __cuda_3,int __cuda_4)
#line 79 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
{__device_stub__Z29matrixIncorporateSigmoidDerivPfS_S_ii( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4);
#line 87 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
}
#line 1 "d:\\vinods\\repos\\msr-dssm\\private\\vinods\\cudalibmanaged\\kernels\\x64\\debug\\kernel.cudafe1.stub.c"
void __device_stub__Z23matrixCrossEntropyErrorPfS_S_ii( float *__par0,  float *__par1,  float *__par2,  int __par3,  int __par4) {  if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)28Ui64) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float *, int, int))matrixCrossEntropyError)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float *, int, int))matrixCrossEntropyError))); }; }
#line 89 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
void matrixCrossEntropyError( float *__cuda_0,float *__cuda_1,float *__cuda_2,int __cuda_3,int __cuda_4)
#line 90 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
{__device_stub__Z23matrixCrossEntropyErrorPfS_S_ii( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4);
#line 99 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
}
#line 1 "d:\\vinods\\repos\\msr-dssm\\private\\vinods\\cudalibmanaged\\kernels\\x64\\debug\\kernel.cudafe1.stub.c"
void __device_stub__Z26matrixBellmanErrorAndDerivPfS_S_S_S_S_fS_ii( float *__par0,  float *__par1,  float *__par2,  float *__par3,  float *__par4,  float *__par5,  float __par6,  float *__par7,  int __par8,  int __par9) {  if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)32Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par5, sizeof(__par5), (size_t)40Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par6, sizeof(__par6), (size_t)48Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par7, sizeof(__par7), (size_t)56Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par8, sizeof(__par8), (size_t)64Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par9, sizeof(__par9), (size_t)68Ui64) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float *, float *, float *, float *, float, float *, int, int))matrixBellmanErrorAndDeriv)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float *, float *, float *, float *, float, float *, int, int))matrixBellmanErrorAndDeriv))); }; }
#line 101 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
void matrixBellmanErrorAndDeriv( float *__cuda_0,float *__cuda_1,float *__cuda_2,float *__cuda_3,float *__cuda_4,float *__cuda_5,float __cuda_6,float *__cuda_7,int __cuda_8,int __cuda_9)
#line 103 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
{__device_stub__Z26matrixBellmanErrorAndDerivPfS_S_S_S_S_fS_ii( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4,__cuda_5,__cuda_6,__cuda_7,__cuda_8,__cuda_9);
#line 120 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
}
#line 1 "d:\\vinods\\repos\\msr-dssm\\private\\vinods\\cudalibmanaged\\kernels\\x64\\debug\\kernel.cudafe1.stub.c"
void __device_stub__Z21DqnStanfordEvaluationPfS_S_S_S_i( float *__par0,  float *__par1,  float *__par2,  float *__par3,  float *__par4,  int __par5) {  if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)32Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par5, sizeof(__par5), (size_t)40Ui64) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float *, float *, float *, int))DqnStanfordEvaluation)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float *, float *, float *, int))DqnStanfordEvaluation))); }; }
#line 122 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
void DqnStanfordEvaluation( float *__cuda_0,float *__cuda_1,float *__cuda_2,float *__cuda_3,float *__cuda_4,int __cuda_5)
#line 123 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
{__device_stub__Z21DqnStanfordEvaluationPfS_S_S_S_i( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4,__cuda_5);
#line 136 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
}
#line 1 "d:\\vinods\\repos\\msr-dssm\\private\\vinods\\cudalibmanaged\\kernels\\x64\\debug\\kernel.cudafe1.stub.c"
void __device_stub__Z14matrixHadamardPfS_fS_fii( float *__par0,  float *__par1,  float __par2,  float *__par3,  float __par4,  int __par5,  int __par6) {  if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)24Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par4, sizeof(__par4), (size_t)32Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par5, sizeof(__par5), (size_t)36Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par6, sizeof(__par6), (size_t)40Ui64) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, float, float *, float, int, int))matrixHadamard)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, float, float *, float, int, int))matrixHadamard))); }; }
#line 138 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
void matrixHadamard( float *__cuda_0,float *__cuda_1,float __cuda_2,float *__cuda_3,float __cuda_4,int __cuda_5,int __cuda_6)
#line 139 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
{__device_stub__Z14matrixHadamardPfS_fS_fii( __cuda_0,__cuda_1,__cuda_2,__cuda_3,__cuda_4,__cuda_5,__cuda_6);
#line 147 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
}
#line 1 "d:\\vinods\\repos\\msr-dssm\\private\\vinods\\cudalibmanaged\\kernels\\x64\\debug\\kernel.cudafe1.stub.c"
void __device_stub__Z13columnwiseMaxPfS_ii( float *__par0,  float *__par1,  int __par2,  int __par3) {  if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)20Ui64) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, int, int))columnwiseMax)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, int, int))columnwiseMax))); }; }
#line 149 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
void columnwiseMax( float *__cuda_0,float *__cuda_1,int __cuda_2,int __cuda_3)
#line 150 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
{__device_stub__Z13columnwiseMaxPfS_ii( __cuda_0,__cuda_1,__cuda_2,__cuda_3);
#line 165 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
}
#line 1 "d:\\vinods\\repos\\msr-dssm\\private\\vinods\\cudalibmanaged\\kernels\\x64\\debug\\kernel.cudafe1.stub.c"
void __device_stub__Z18columnwiseMaxIndexPfS_ii( float *__par0,  float *__par1,  int __par2,  int __par3) {  if (cudaSetupArgument((void *)(char *)&__par0, sizeof(__par0), (size_t)0Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par1, sizeof(__par1), (size_t)8Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par2, sizeof(__par2), (size_t)16Ui64) != cudaSuccess) return; if (cudaSetupArgument((void *)(char *)&__par3, sizeof(__par3), (size_t)20Ui64) != cudaSuccess) return; { volatile static char *__f; __f = ((char *)((void ( *)(float *, float *, int, int))columnwiseMaxIndex)); (void)cudaLaunch(((char *)((void ( *)(float *, float *, int, int))columnwiseMaxIndex))); }; }
#line 167 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
void columnwiseMaxIndex( float *__cuda_0,float *__cuda_1,int __cuda_2,int __cuda_3)
#line 168 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
{__device_stub__Z18columnwiseMaxIndexPfS_ii( __cuda_0,__cuda_1,__cuda_2,__cuda_3);
#line 185 "D:/vinods/Repos/MSR-DSSM/private/vinods/CudalibManaged/Kernels/kernel.cu"
}
#line 1 "d:\\vinods\\repos\\msr-dssm\\private\\vinods\\cudalibmanaged\\kernels\\x64\\debug\\kernel.cudafe1.stub.c"
static void __nv_cudaEntityRegisterCallback( void **__T20) {  { volatile static void **__ref; __ref = (volatile void **)__T20; }; __nv_save_fatbinhandle_for_managed_rt(__T20); __cudaRegisterFunction(__T20, (const char*)((void ( *)(float *, float *, int, int))columnwiseMaxIndex), (char*)"_Z18columnwiseMaxIndexPfS_ii", "_Z18columnwiseMaxIndexPfS_ii", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__T20, (const char*)((void ( *)(float *, float *, int, int))columnwiseMax), (char*)"_Z13columnwiseMaxPfS_ii", "_Z13columnwiseMaxPfS_ii", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__T20, (const char*)((void ( *)(float *, float *, float, float *, float, int, int))matrixHadamard), (char*)"_Z14matrixHadamardPfS_fS_fii", "_Z14matrixHadamardPfS_fS_fii", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__T20, (const char*)((void ( *)(float *, float *, float *, float *, float *, int))DqnStanfordEvaluation), (char*)"_Z21DqnStanfordEvaluationPfS_S_S_S_i", "_Z21DqnStanfordEvaluationPfS_S_S_S_i", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__T20, (const char*)((void ( *)(float *, float *, float *, float *, float *, float *, float, float *, int, int))matrixBellmanErrorAndDeriv), (char*)"_Z26matrixBellmanErrorAndDerivPfS_S_S_S_S_fS_ii", "_Z26matrixBellmanErrorAndDerivPfS_S_S_S_S_fS_ii", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__T20, (const char*)((void ( *)(float *, float *, float *, int, int))matrixCrossEntropyError), (char*)"_Z23matrixCrossEntropyErrorPfS_S_ii", "_Z23matrixCrossEntropyErrorPfS_S_ii", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__T20, (const char*)((void ( *)(float *, float *, float *, int, int))matrixIncorporateSigmoidDeriv), (char*)"_Z29matrixIncorporateSigmoidDerivPfS_S_ii", "_Z29matrixIncorporateSigmoidDerivPfS_S_ii", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__T20, (const char*)((void ( *)(float *, float *, int, int))matrixSigmoid), (char*)"_Z13matrixSigmoidPfS_ii", "_Z13matrixSigmoidPfS_ii", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__T20, (const char*)((void ( *)(float *, float *, float *, int, int))matrixIncorporateReLuDeriv), (char*)"_Z26matrixIncorporateReLuDerivPfS_S_ii", "_Z26matrixIncorporateReLuDerivPfS_S_ii", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__T20, (const char*)((void ( *)(float *, float *, int, int))matrixReLu), (char*)"_Z10matrixReLuPfS_ii", "_Z10matrixReLuPfS_ii", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__T20, (const char*)((void ( *)(float *, float *, float *, int, int))matrixIncorporateTanhDeriv), (char*)"_Z26matrixIncorporateTanhDerivPfS_S_ii", "_Z26matrixIncorporateTanhDerivPfS_S_ii", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__T20, (const char*)((void ( *)(float *, float *, int, int))matrixTanh), (char*)"_Z10matrixTanhPfS_ii", "_Z10matrixTanhPfS_ii", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); __cudaRegisterFunction(__T20, (const char*)((void ( *)(float *, float *, float *, int, int))matrixPlusVector), (char*)"_Z16matrixPlusVectorPfS_S_ii", "_Z16matrixPlusVectorPfS_S_ii", -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0); }
static void __sti____cudaRegisterAll_14_kernel_cpp1_ii_aea4bb27(void) {  __cudaFatCubinHandle = __cudaRegisterFatBinary((void*)&__fatDeviceText); { void (*callback_fp)(void **) = (void (*)(void **))(__nv_cudaEntityRegisterCallback); (*callback_fp)(__cudaFatCubinHandle); } atexit(__cudaUnregisterBinaryUtil);  }
#line 2 "kernel.cudafe1.stub.c"
#line 1 "kernel.cudafe1.stub.c"


